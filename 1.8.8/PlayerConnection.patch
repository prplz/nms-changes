--- a/net/minecraft/server/PlayerConnection.java
+++ b/net/minecraft/server/PlayerConnection.java
@@ -1,6 +1,8 @@
 package net.minecraft.server;
 
 import com.google.common.collect.Lists;
+import com.google.common.primitives.Doubles;
+import com.google.common.primitives.Floats;
 import com.google.common.util.concurrent.Futures;
 import io.netty.buffer.Unpooled;
 import io.netty.util.concurrent.Future;
@@ -66,7 +68,7 @@
             --this.m;
         }
 
-        if (this.player.D() > 0L && this.minecraftServer.getIdleTimeout() > 0 && MinecraftServer.ay() - this.player.D() > (long) (this.minecraftServer.getIdleTimeout() * 1000 * 60)) {
+        if (this.player.D() > 0L && this.minecraftServer.getIdleTimeout() > 0 && MinecraftServer.az() - this.player.D() > (long) (this.minecraftServer.getIdleTimeout() * 1000 * 60)) {
             this.disconnect("You have been idle for too long!");
         }
 
@@ -97,191 +99,197 @@
         this.player.a(packetplayinsteervehicle.a(), packetplayinsteervehicle.b(), packetplayinsteervehicle.c(), packetplayinsteervehicle.d());
     }
 
+    private boolean b(PacketPlayInFlying packetplayinflying) {
+        return !Doubles.isFinite(packetplayinflying.a()) || !Doubles.isFinite(packetplayinflying.b()) || !Doubles.isFinite(packetplayinflying.c()) || !Floats.isFinite(packetplayinflying.e()) || !Floats.isFinite(packetplayinflying.d());
+    }
+
     public void a(PacketPlayInFlying packetplayinflying) {
         PlayerConnectionUtils.ensureMainThread(packetplayinflying, this, this.player.u());
-        WorldServer worldserver = this.minecraftServer.getWorldServer(this.player.dimension);
-
-        this.h = true;
-        if (!this.player.viewingCredits) {
-            double d0 = this.player.locX;
-            double d1 = this.player.locY;
-            double d2 = this.player.locZ;
-            double d3 = 0.0D;
-            double d4 = packetplayinflying.a() - this.o;
-            double d5 = packetplayinflying.b() - this.p;
-            double d6 = packetplayinflying.c() - this.q;
-
-            if (packetplayinflying.g()) {
-                d3 = d4 * d4 + d5 * d5 + d6 * d6;
-                if (!this.checkMovement && d3 < 0.25D) {
-                    this.checkMovement = true;
-                }
-            }
+        if (this.b(packetplayinflying)) {
+            this.disconnect("Invalid move packet received");
+        } else {
+            WorldServer worldserver = this.minecraftServer.getWorldServer(this.player.dimension);
 
-            if (this.checkMovement) {
-                this.f = this.e;
-                double d7;
-                double d8;
-                double d9;
-
-                if (this.player.vehicle != null) {
-                    float f = this.player.yaw;
-                    float f1 = this.player.pitch;
+            this.h = true;
+            if (!this.player.viewingCredits) {
+                double d0 = this.player.locX;
+                double d1 = this.player.locY;
+                double d2 = this.player.locZ;
+                double d3 = 0.0D;
+                double d4 = packetplayinflying.a() - this.o;
+                double d5 = packetplayinflying.b() - this.p;
+                double d6 = packetplayinflying.c() - this.q;
 
-                    this.player.vehicle.al();
-                    d7 = this.player.locX;
-                    d8 = this.player.locY;
-                    d9 = this.player.locZ;
-                    if (packetplayinflying.h()) {
-                        f = packetplayinflying.d();
-                        f1 = packetplayinflying.e();
+                if (packetplayinflying.g()) {
+                    d3 = d4 * d4 + d5 * d5 + d6 * d6;
+                    if (!this.checkMovement && d3 < 0.25D) {
+                        this.checkMovement = true;
                     }
+                }
+
+                if (this.checkMovement) {
+                    this.f = this.e;
+                    double d7;
+                    double d8;
+                    double d9;
 
-                    this.player.onGround = packetplayinflying.f();
-                    this.player.l();
-                    this.player.setLocation(d7, d8, d9, f, f1);
                     if (this.player.vehicle != null) {
+                        float f = this.player.yaw;
+                        float f1 = this.player.pitch;
+
                         this.player.vehicle.al();
-                    }
+                        d7 = this.player.locX;
+                        d8 = this.player.locY;
+                        d9 = this.player.locZ;
+                        if (packetplayinflying.h()) {
+                            f = packetplayinflying.d();
+                            f1 = packetplayinflying.e();
+                        }
 
-                    this.minecraftServer.getPlayerList().d(this.player);
-                    if (this.player.vehicle != null) {
-                        if (d3 > 4.0D) {
-                            Entity entity = this.player.vehicle;
+                        this.player.onGround = packetplayinflying.f();
+                        this.player.l();
+                        this.player.setLocation(d7, d8, d9, f, f1);
+                        if (this.player.vehicle != null) {
+                            this.player.vehicle.al();
+                        }
+
+                        this.minecraftServer.getPlayerList().d(this.player);
+                        if (this.player.vehicle != null) {
+                            if (d3 > 4.0D) {
+                                Entity entity = this.player.vehicle;
+
+                                this.player.playerConnection.sendPacket(new PacketPlayOutEntityTeleport(entity));
+                                this.a(this.player.locX, this.player.locY, this.player.locZ, this.player.yaw, this.player.pitch);
+                            }
+
+                            this.player.vehicle.ai = true;
+                        }
 
-                            this.player.playerConnection.sendPacket(new PacketPlayOutEntityTeleport(entity));
-                            this.a(this.player.locX, this.player.locY, this.player.locZ, this.player.yaw, this.player.pitch);
+                        if (this.checkMovement) {
+                            this.o = this.player.locX;
+                            this.p = this.player.locY;
+                            this.q = this.player.locZ;
                         }
 
-                        this.player.vehicle.ai = true;
+                        worldserver.g(this.player);
+                        return;
                     }
 
-                    if (this.checkMovement) {
-                        this.o = this.player.locX;
-                        this.p = this.player.locY;
-                        this.q = this.player.locZ;
+                    if (this.player.isSleeping()) {
+                        this.player.l();
+                        this.player.setLocation(this.o, this.p, this.q, this.player.yaw, this.player.pitch);
+                        worldserver.g(this.player);
+                        return;
                     }
 
-                    worldserver.g(this.player);
-                    return;
-                }
+                    double d10 = this.player.locY;
 
-                if (this.player.isSleeping()) {
-                    this.player.l();
-                    this.player.setLocation(this.o, this.p, this.q, this.player.yaw, this.player.pitch);
-                    worldserver.g(this.player);
-                    return;
-                }
+                    this.o = this.player.locX;
+                    this.p = this.player.locY;
+                    this.q = this.player.locZ;
+                    d7 = this.player.locX;
+                    d8 = this.player.locY;
+                    d9 = this.player.locZ;
+                    float f2 = this.player.yaw;
+                    float f3 = this.player.pitch;
 
-                double d10 = this.player.locY;
+                    if (packetplayinflying.g() && packetplayinflying.b() == -999.0D) {
+                        packetplayinflying.a(false);
+                    }
 
-                this.o = this.player.locX;
-                this.p = this.player.locY;
-                this.q = this.player.locZ;
-                d7 = this.player.locX;
-                d8 = this.player.locY;
-                d9 = this.player.locZ;
-                float f2 = this.player.yaw;
-                float f3 = this.player.pitch;
+                    if (packetplayinflying.g()) {
+                        d7 = packetplayinflying.a();
+                        d8 = packetplayinflying.b();
+                        d9 = packetplayinflying.c();
+                        if (Math.abs(packetplayinflying.a()) > 3.0E7D || Math.abs(packetplayinflying.c()) > 3.0E7D) {
+                            this.disconnect("Illegal position");
+                            return;
+                        }
+                    }
 
-                if (packetplayinflying.g() && packetplayinflying.b() == -999.0D) {
-                    packetplayinflying.a(false);
-                }
+                    if (packetplayinflying.h()) {
+                        f2 = packetplayinflying.d();
+                        f3 = packetplayinflying.e();
+                    }
 
-                if (packetplayinflying.g()) {
-                    d7 = packetplayinflying.a();
-                    d8 = packetplayinflying.b();
-                    d9 = packetplayinflying.c();
-                    if (Math.abs(packetplayinflying.a()) > 3.0E7D || Math.abs(packetplayinflying.c()) > 3.0E7D) {
-                        this.disconnect("Illegal position");
+                    this.player.l();
+                    this.player.setLocation(this.o, this.p, this.q, f2, f3);
+                    if (!this.checkMovement) {
                         return;
                     }
-                }
 
-                if (packetplayinflying.h()) {
-                    f2 = packetplayinflying.d();
-                    f3 = packetplayinflying.e();
-                }
-
-                this.player.l();
-                this.player.setLocation(this.o, this.p, this.q, f2, f3);
-                if (!this.checkMovement) {
-                    return;
-                }
-
-                double d11 = d7 - this.player.locX;
-                double d12 = d8 - this.player.locY;
-                double d13 = d9 - this.player.locZ;
-                double d14 = Math.min(Math.abs(d11), Math.abs(this.player.motX));
-                double d15 = Math.min(Math.abs(d12), Math.abs(this.player.motY));
-                double d16 = Math.min(Math.abs(d13), Math.abs(this.player.motZ));
-                double d17 = d14 * d14 + d15 * d15 + d16 * d16;
-
-                if (d17 > 100.0D && (!this.minecraftServer.S() || !this.minecraftServer.R().equals(this.player.getName()))) {
-                    PlayerConnection.c.warn(this.player.getName() + " moved too quickly! " + d11 + "," + d12 + "," + d13 + " (" + d14 + ", " + d15 + ", " + d16 + ")");
-                    this.a(this.o, this.p, this.q, this.player.yaw, this.player.pitch);
-                    return;
-                }
+                    double d11 = d7 - this.player.locX;
+                    double d12 = d8 - this.player.locY;
+                    double d13 = d9 - this.player.locZ;
+                    double d14 = this.player.motX * this.player.motX + this.player.motY * this.player.motY + this.player.motZ * this.player.motZ;
+                    double d15 = d11 * d11 + d12 * d12 + d13 * d13;
+
+                    if (d15 - d14 > 100.0D && (!this.minecraftServer.T() || !this.minecraftServer.S().equals(this.player.getName()))) {
+                        PlayerConnection.c.warn(this.player.getName() + " moved too quickly! " + d11 + "," + d12 + "," + d13 + " (" + d11 + ", " + d12 + ", " + d13 + ")");
+                        this.a(this.o, this.p, this.q, this.player.yaw, this.player.pitch);
+                        return;
+                    }
 
-                float f4 = 0.0625F;
-                boolean flag = worldserver.getCubes(this.player, this.player.getBoundingBox().shrink((double) f4, (double) f4, (double) f4)).isEmpty();
+                    float f4 = 0.0625F;
+                    boolean flag = worldserver.getCubes(this.player, this.player.getBoundingBox().shrink((double) f4, (double) f4, (double) f4)).isEmpty();
 
-                if (this.player.onGround && !packetplayinflying.f() && d12 > 0.0D) {
-                    this.player.bF();
-                }
+                    if (this.player.onGround && !packetplayinflying.f() && d12 > 0.0D) {
+                        this.player.bF();
+                    }
 
-                this.player.move(d11, d12, d13);
-                this.player.onGround = packetplayinflying.f();
-                double d18 = d12;
+                    this.player.move(d11, d12, d13);
+                    this.player.onGround = packetplayinflying.f();
+                    double d16 = d12;
 
-                d11 = d7 - this.player.locX;
-                d12 = d8 - this.player.locY;
-                if (d12 > -0.5D || d12 < 0.5D) {
-                    d12 = 0.0D;
-                }
+                    d11 = d7 - this.player.locX;
+                    d12 = d8 - this.player.locY;
+                    if (d12 > -0.5D || d12 < 0.5D) {
+                        d12 = 0.0D;
+                    }
 
-                d13 = d9 - this.player.locZ;
-                d17 = d11 * d11 + d12 * d12 + d13 * d13;
-                boolean flag1 = false;
+                    d13 = d9 - this.player.locZ;
+                    d15 = d11 * d11 + d12 * d12 + d13 * d13;
+                    boolean flag1 = false;
 
-                if (d17 > 0.0625D && !this.player.isSleeping() && !this.player.playerInteractManager.isCreative()) {
-                    flag1 = true;
-                    PlayerConnection.c.warn(this.player.getName() + " moved wrongly!");
-                }
+                    if (d15 > 0.0625D && !this.player.isSleeping() && !this.player.playerInteractManager.isCreative()) {
+                        flag1 = true;
+                        PlayerConnection.c.warn(this.player.getName() + " moved wrongly!");
+                    }
 
-                this.player.setLocation(d7, d8, d9, f2, f3);
-                this.player.checkMovement(this.player.locX - d0, this.player.locY - d1, this.player.locZ - d2);
-                if (!this.player.noclip) {
-                    boolean flag2 = worldserver.getCubes(this.player, this.player.getBoundingBox().shrink((double) f4, (double) f4, (double) f4)).isEmpty();
+                    this.player.setLocation(d7, d8, d9, f2, f3);
+                    this.player.checkMovement(this.player.locX - d0, this.player.locY - d1, this.player.locZ - d2);
+                    if (!this.player.noclip) {
+                        boolean flag2 = worldserver.getCubes(this.player, this.player.getBoundingBox().shrink((double) f4, (double) f4, (double) f4)).isEmpty();
 
-                    if (flag && (flag1 || !flag2) && !this.player.isSleeping()) {
-                        this.a(this.o, this.p, this.q, f2, f3);
-                        return;
+                        if (flag && (flag1 || !flag2) && !this.player.isSleeping()) {
+                            this.a(this.o, this.p, this.q, f2, f3);
+                            return;
+                        }
                     }
-                }
 
-                AxisAlignedBB axisalignedbb = this.player.getBoundingBox().grow((double) f4, (double) f4, (double) f4).a(0.0D, -0.55D, 0.0D);
+                    AxisAlignedBB axisalignedbb = this.player.getBoundingBox().grow((double) f4, (double) f4, (double) f4).a(0.0D, -0.55D, 0.0D);
 
-                if (!this.minecraftServer.getAllowFlight() && !this.player.abilities.canFly && !worldserver.c(axisalignedbb)) {
-                    if (d18 >= -0.03125D) {
-                        ++this.g;
-                        if (this.g > 80) {
-                            PlayerConnection.c.warn(this.player.getName() + " was kicked for floating too long!");
-                            this.disconnect("Flying is not enabled on this server");
-                            return;
+                    if (!this.minecraftServer.getAllowFlight() && !this.player.abilities.canFly && !worldserver.c(axisalignedbb)) {
+                        if (d16 >= -0.03125D) {
+                            ++this.g;
+                            if (this.g > 80) {
+                                PlayerConnection.c.warn(this.player.getName() + " was kicked for floating too long!");
+                                this.disconnect("Flying is not enabled on this server");
+                                return;
+                            }
                         }
+                    } else {
+                        this.g = 0;
                     }
-                } else {
-                    this.g = 0;
+
+                    this.player.onGround = packetplayinflying.f();
+                    this.minecraftServer.getPlayerList().d(this.player);
+                    this.player.a(this.player.locY - d10, packetplayinflying.f());
+                } else if (this.e - this.f > 20) {
+                    this.a(this.o, this.p, this.q, this.player.yaw, this.player.pitch);
                 }
 
-                this.player.onGround = packetplayinflying.f();
-                this.minecraftServer.getPlayerList().d(this.player);
-                this.player.a(this.player.locY - d10, packetplayinflying.f());
-            } else if (this.e - this.f > 20) {
-                this.a(this.o, this.p, this.q, this.player.yaw, this.player.pitch);
             }
-
         }
     }
 
@@ -326,17 +334,17 @@
         WorldServer worldserver = this.minecraftServer.getWorldServer(this.player.dimension);
         BlockPosition blockposition = packetplayinblockdig.a();
 
-        this.player.z();
+        this.player.resetIdleTimer();
         switch (PlayerConnection.SyntheticClass_1.a[packetplayinblockdig.c().ordinal()]) {
         case 1:
-            if (!this.player.v()) {
+            if (!this.player.isSpectator()) {
                 this.player.a(false);
             }
 
             return;
 
         case 2:
-            if (!this.player.v()) {
+            if (!this.player.isSpectator()) {
                 this.player.a(true);
             }
 
@@ -393,7 +401,7 @@
         BlockPosition blockposition = packetplayinblockplace.a();
         EnumDirection enumdirection = EnumDirection.fromType1(packetplayinblockplace.getFace());
 
-        this.player.z();
+        this.player.resetIdleTimer();
         if (packetplayinblockplace.getFace() == 255) {
             if (itemstack == null) {
                 return;
@@ -441,7 +449,7 @@
 
     public void a(PacketPlayInSpectate packetplayinspectate) {
         PlayerConnectionUtils.ensureMainThread(packetplayinspectate, this, this.player.u());
-        if (this.player.v()) {
+        if (this.player.isSpectator()) {
             Entity entity = null;
             WorldServer[] aworldserver = this.minecraftServer.worldServer;
             int i = aworldserver.length;
@@ -458,7 +466,7 @@
             }
 
             if (entity != null) {
-                this.player.e((Entity) this.player);
+                this.player.setSpectatorTarget(this.player);
                 this.player.mount((Entity) null);
                 if (entity.world != this.player.world) {
                     WorldServer worldserver1 = this.player.u();
@@ -493,14 +501,14 @@
 
     public void a(IChatBaseComponent ichatbasecomponent) {
         PlayerConnection.c.info(this.player.getName() + " lost connection: " + ichatbasecomponent);
-        this.minecraftServer.aG();
+        this.minecraftServer.aH();
         ChatMessage chatmessage = new ChatMessage("multiplayer.player.left", new Object[] { this.player.getScoreboardDisplayName()});
 
         chatmessage.getChatModifier().setColor(EnumChatFormat.YELLOW);
         this.minecraftServer.getPlayerList().sendMessage(chatmessage);
         this.player.q();
         this.minecraftServer.getPlayerList().disconnect(this.player);
-        if (this.minecraftServer.S() && this.player.getName().equals(this.minecraftServer.R())) {
+        if (this.minecraftServer.T() && this.player.getName().equals(this.minecraftServer.S())) {
             PlayerConnection.c.info("Stopping singleplayer server as player logged out");
             this.minecraftServer.safeShutdown();
         }
@@ -544,7 +552,7 @@
         PlayerConnectionUtils.ensureMainThread(packetplayinhelditemslot, this, this.player.u());
         if (packetplayinhelditemslot.a() >= 0 && packetplayinhelditemslot.a() < PlayerInventory.getHotbarSize()) {
             this.player.inventory.itemInHandIndex = packetplayinhelditemslot.a();
-            this.player.z();
+            this.player.resetIdleTimer();
         } else {
             PlayerConnection.c.warn(this.player.getName() + " tried to set an invalid carried item");
         }
@@ -558,7 +566,7 @@
             chatmessage.getChatModifier().setColor(EnumChatFormat.RED);
             this.sendPacket(new PacketPlayOutChat(chatmessage));
         } else {
-            this.player.z();
+            this.player.resetIdleTimer();
             String s = packetplayinchat.a();
 
             s = StringUtils.normalizeSpace(s);
@@ -592,13 +600,13 @@
 
     public void a(PacketPlayInArmAnimation packetplayinarmanimation) {
         PlayerConnectionUtils.ensureMainThread(packetplayinarmanimation, this, this.player.u());
-        this.player.z();
+        this.player.resetIdleTimer();
         this.player.bw();
     }
 
     public void a(PacketPlayInEntityAction packetplayinentityaction) {
         PlayerConnectionUtils.ensureMainThread(packetplayinentityaction, this, this.player.u());
-        this.player.z();
+        this.player.resetIdleTimer();
         switch (PlayerConnection.SyntheticClass_1.b[packetplayinentityaction.b().ordinal()]) {
         case 1:
             this.player.setSneaking(true);
@@ -644,7 +652,7 @@
         WorldServer worldserver = this.minecraftServer.getWorldServer(this.player.dimension);
         Entity entity = packetplayinuseentity.a((World) worldserver);
 
-        this.player.z();
+        this.player.resetIdleTimer();
         if (entity != null) {
             boolean flag = this.player.hasLineOfSight(entity);
             double d0 = 36.0D;
@@ -674,7 +682,7 @@
 
     public void a(PacketPlayInClientCommand packetplayinclientcommand) {
         PlayerConnectionUtils.ensureMainThread(packetplayinclientcommand, this, this.player.u());
-        this.player.z();
+        this.player.resetIdleTimer();
         PacketPlayInClientCommand.EnumClientCommand packetplayinclientcommand_enumclientcommand = packetplayinclientcommand.a();
 
         switch (PlayerConnection.SyntheticClass_1.c[packetplayinclientcommand_enumclientcommand.ordinal()]) {
@@ -682,9 +690,9 @@
             if (this.player.viewingCredits) {
                 this.player = this.minecraftServer.getPlayerList().moveToWorld(this.player, 0, true);
             } else if (this.player.u().getWorldData().isHardcore()) {
-                if (this.minecraftServer.S() && this.player.getName().equals(this.minecraftServer.R())) {
+                if (this.minecraftServer.T() && this.player.getName().equals(this.minecraftServer.S())) {
                     this.player.playerConnection.disconnect("You have died. Game over, man, it\'s game over!");
-                    this.minecraftServer.Z();
+                    this.minecraftServer.aa();
                 } else {
                     GameProfileBanEntry gameprofilebanentry = new GameProfileBanEntry(this.player.getProfile(), (Date) null, "(You just lost the game)", (Date) null, "Death in Hardcore");
 
@@ -717,9 +725,9 @@
 
     public void a(PacketPlayInWindowClick packetplayinwindowclick) {
         PlayerConnectionUtils.ensureMainThread(packetplayinwindowclick, this, this.player.u());
-        this.player.z();
+        this.player.resetIdleTimer();
         if (this.player.activeContainer.windowId == packetplayinwindowclick.a() && this.player.activeContainer.c(this.player)) {
-            if (this.player.v()) {
+            if (this.player.isSpectator()) {
                 ArrayList arraylist = Lists.newArrayList();
 
                 for (int i = 0; i < this.player.activeContainer.c.size(); ++i) {
@@ -755,8 +763,8 @@
 
     public void a(PacketPlayInEnchantItem packetplayinenchantitem) {
         PlayerConnectionUtils.ensureMainThread(packetplayinenchantitem, this, this.player.u());
-        this.player.z();
-        if (this.player.activeContainer.windowId == packetplayinenchantitem.a() && this.player.activeContainer.c(this.player) && !this.player.v()) {
+        this.player.resetIdleTimer();
+        if (this.player.activeContainer.windowId == packetplayinenchantitem.a() && this.player.activeContainer.c(this.player) && !this.player.isSpectator()) {
             this.player.activeContainer.a(this.player, packetplayinenchantitem.b());
             this.player.activeContainer.b();
         }
@@ -816,7 +824,7 @@
         PlayerConnectionUtils.ensureMainThread(packetplayintransaction, this, this.player.u());
         Short oshort = (Short) this.n.get(this.player.activeContainer.windowId);
 
-        if (oshort != null && packetplayintransaction.b() == oshort.shortValue() && this.player.activeContainer.windowId == packetplayintransaction.a() && !this.player.activeContainer.c(this.player) && !this.player.v()) {
+        if (oshort != null && packetplayintransaction.b() == oshort.shortValue() && this.player.activeContainer.windowId == packetplayintransaction.a() && !this.player.activeContainer.c(this.player) && !this.player.isSpectator()) {
             this.player.activeContainer.a(this.player, true);
         }
 
@@ -824,7 +832,7 @@
 
     public void a(PacketPlayInUpdateSign packetplayinupdatesign) {
         PlayerConnectionUtils.ensureMainThread(packetplayinupdatesign, this, this.player.u());
-        this.player.z();
+        this.player.resetIdleTimer();
         WorldServer worldserver = this.minecraftServer.getWorldServer(this.player.dimension);
         BlockPosition blockposition = packetplayinupdatesign.a();
 
@@ -845,7 +853,7 @@
             IChatBaseComponent[] aichatbasecomponent = packetplayinupdatesign.b();
 
             for (int i = 0; i < aichatbasecomponent.length; ++i) {
-                tileentitysign.lines[i] = new ChatComponentText(aichatbasecomponent[i].c());
+                tileentitysign.lines[i] = new ChatComponentText(EnumChatFormat.a(aichatbasecomponent[i].c()));
             }
 
             tileentitysign.update();
