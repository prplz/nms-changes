--- a/net/minecraft/server/EntityLiving.java
+++ b/net/minecraft/server/EntityLiving.java
@@ -15,8 +15,8 @@
     private static final UUID a = UUID.fromString("662A6B8D-DA3E-4C1C-8813-96EA6097278D");
     private static final AttributeModifier b = (new AttributeModifier(EntityLiving.a, "Sprinting speed boost", 0.30000001192092896D, 2)).a(false);
     private AttributeMapBase c;
-    private final CombatTracker combatTracker = new CombatTracker(this);
-    private final Map<Integer, MobEffect> effects = Maps.newHashMap();
+    public final CombatTracker combatTracker = new CombatTracker(this);
+    public final Map<Integer, MobEffect> effects = Maps.newHashMap();
     private final ItemStack[] h = new ItemStack[5];
     public boolean ar;
     public int as;
@@ -40,7 +40,7 @@
     public float aK;
     public float aL;
     public float aM = 0.02F;
-    protected EntityHuman killer;
+    public EntityHuman killer;
     protected int lastDamageByPlayerTime;
     protected boolean aP;
     protected int ticksFarFromPlayer;
@@ -50,7 +50,7 @@
     protected float aU;
     protected float aV;
     protected int aW;
-    protected float lastDamage;
+    public float lastDamage;
     protected boolean aY;
     public float aZ;
     public float ba;
@@ -61,9 +61,9 @@
     protected double bf;
     protected double bg;
     protected double bh;
-    private boolean updateEffects = true;
-    private EntityLiving lastDamager;
-    private int hurtTimestamp;
+    public boolean updateEffects = true;
+    public EntityLiving lastDamager;
+    public int hurtTimestamp;
     private EntityLiving bk;
     private int bl;
     private float bm;
@@ -97,7 +97,7 @@
     protected void initAttributes() {
         this.getAttributeMap().b(GenericAttributes.maxHealth);
         this.getAttributeMap().b(GenericAttributes.c);
-        this.getAttributeMap().b(GenericAttributes.d);
+        this.getAttributeMap().b(GenericAttributes.MOVEMENT_SPEED);
     }
 
     protected void a(double d0, boolean flag, Block block, BlockPosition blockposition) {
@@ -771,7 +771,7 @@
         int k = MathHelper.floor(this.locZ);
         Block block = this.world.getType(new BlockPosition(i, j, k)).getBlock();
 
-        return (block == Blocks.LADDER || block == Blocks.VINE) && (!(this instanceof EntityHuman) || !((EntityHuman) this).v());
+        return (block == Blocks.LADDER || block == Blocks.VINE) && (!(this instanceof EntityHuman) || !((EntityHuman) this).isSpectator());
     }
 
     public boolean isAlive() {
@@ -968,7 +968,7 @@
 
     public void setSprinting(boolean flag) {
         super.setSprinting(flag);
-        AttributeInstance attributeinstance = this.getAttributeInstance(GenericAttributes.d);
+        AttributeInstance attributeinstance = this.getAttributeInstance(GenericAttributes.MOVEMENT_SPEED);
 
         if (attributeinstance.a(EntityLiving.a) != null) {
             attributeinstance.c(EntityLiving.b);
