--- a/net/minecraft/server/PlayerList.java
+++ b/net/minecraft/server/PlayerList.java
@@ -27,14 +27,14 @@
     private static final Logger f = LogManager.getLogger();
     private static final SimpleDateFormat g = new SimpleDateFormat("yyyy-MM-dd \'at\' HH:mm:ss z");
     private final MinecraftServer server;
-    private final List<EntityPlayer> players = Lists.newArrayList();
+    public final List<EntityPlayer> players = Lists.newArrayList();
     private final Map<UUID, EntityPlayer> j = Maps.newHashMap();
     private final GameProfileBanList k;
     private final IpBanList l;
     private final OpList operators;
     private final WhiteList whitelist;
     private final Map<UUID, ServerStatisticManager> o;
-    private IPlayerFileData playerFileData;
+    public IPlayerFileData playerFileData;
     private boolean hasWhitelist;
     protected int maxPlayers;
     private int r;
@@ -81,14 +81,14 @@
 
         playerconnection.sendPacket(new PacketPlayOutLogin(entityplayer.getId(), entityplayer.playerInteractManager.getGameMode(), worlddata.isHardcore(), worldserver.worldProvider.getDimension(), worldserver.getDifficulty(), this.getMaxPlayers(), worlddata.getType(), worldserver.getGameRules().getBoolean("reducedDebugInfo")));
         playerconnection.sendPacket(new PacketPlayOutCustomPayload("MC|Brand", (new PacketDataSerializer(Unpooled.buffer())).a(this.getServer().getServerModName())));
-        playerconnection.sendPacket(new PacketPlayOutServerDifficulty(worlddata.y(), worlddata.z()));
+        playerconnection.sendPacket(new PacketPlayOutServerDifficulty(worlddata.getDifficulty(), worlddata.isDifficultyLocked()));
         playerconnection.sendPacket(new PacketPlayOutSpawnPosition(blockposition));
         playerconnection.sendPacket(new PacketPlayOutAbilities(entityplayer.abilities));
         playerconnection.sendPacket(new PacketPlayOutHeldItemSlot(entityplayer.inventory.itemInHandIndex));
         entityplayer.getStatisticManager().d();
         entityplayer.getStatisticManager().updateStatistics(entityplayer);
         this.sendScoreboard((ScoreboardServer) worldserver.getScoreboard(), entityplayer);
-        this.server.aG();
+        this.server.aH();
         ChatMessage chatmessage;
 
         if (!entityplayer.getName().equalsIgnoreCase(s)) {
@@ -128,7 +128,7 @@
 
     }
 
-    protected void sendScoreboard(ScoreboardServer scoreboardserver, EntityPlayer entityplayer) {
+    public void sendScoreboard(ScoreboardServer scoreboardserver, EntityPlayer entityplayer) {
         HashSet hashset = Sets.newHashSet();
         Iterator iterator = scoreboardserver.getTeams().iterator();
 
@@ -205,7 +205,7 @@
         NBTTagCompound nbttagcompound = this.server.worldServer[0].getWorldData().i();
         NBTTagCompound nbttagcompound1;
 
-        if (entityplayer.getName().equals(this.server.R()) && nbttagcompound != null) {
+        if (entityplayer.getName().equals(this.server.S()) && nbttagcompound != null) {
             entityplayer.f(nbttagcompound);
             nbttagcompound1 = nbttagcompound;
             PlayerList.f.debug("loading single player");
@@ -295,7 +295,7 @@
 
             return s;
         } else {
-            return this.players.size() >= this.maxPlayers ? "The server is full!" : null;
+            return this.players.size() >= this.maxPlayers && !this.f(gameprofile) ? "The server is full!" : null;
         }
     }
 
@@ -327,7 +327,7 @@
 
         Object object;
 
-        if (this.server.W()) {
+        if (this.server.X()) {
             object = new DemoPlayerInteractManager(this.server.getWorldServer(0));
         } else {
             object = new PlayerInteractManager(this.server.getWorldServer(0));
@@ -348,7 +348,7 @@
         entityplayer.dimension = i;
         Object object;
 
-        if (this.server.W()) {
+        if (this.server.X()) {
             object = new DemoPlayerInteractManager(this.server.getWorldServer(entityplayer.dimension));
         } else {
             object = new PlayerInteractManager(this.server.getWorldServer(entityplayer.dimension));
@@ -588,7 +588,7 @@
     }
 
     public void addOp(GameProfile gameprofile) {
-        this.operators.add(new OpListEntry(gameprofile, this.server.p()));
+        this.operators.add(new OpListEntry(gameprofile, this.server.p(), this.operators.b(gameprofile)));
     }
 
     public void removeOp(GameProfile gameprofile) {
@@ -600,7 +600,7 @@
     }
 
     public boolean isOp(GameProfile gameprofile) {
-        return this.operators.d(gameprofile) || this.server.S() && this.server.worldServer[0].getWorldData().v() && this.server.R().equalsIgnoreCase(gameprofile.getName()) || this.t;
+        return this.operators.d(gameprofile) || this.server.T() && this.server.worldServer[0].getWorldData().v() && this.server.S().equalsIgnoreCase(gameprofile.getName()) || this.t;
     }
 
     public EntityPlayer getPlayer(String s) {
@@ -815,4 +815,8 @@
     public EntityPlayer a(UUID uuid) {
         return (EntityPlayer) this.j.get(uuid);
     }
+
+    public boolean f(GameProfile gameprofile) {
+        return false;
+    }
 }
