--- a/net/minecraft/server/EntitySheep.java
+++ b/net/minecraft/server/EntitySheep.java
@@ -7,18 +7,18 @@
 
 public class EntitySheep extends EntityAnimal {
 
-    private static final DataWatcherObject<Byte> bw = DataWatcher.a(EntitySheep.class, DataWatcherRegistry.a);
+    private static final DataWatcherObject<Byte> bx = DataWatcher.a(EntitySheep.class, DataWatcherRegistry.a);
     private final InventoryCrafting container = new InventoryCrafting(new Container() {
         public boolean a(EntityHuman entityhuman) {
             return false;
         }
     }, 2, 1);
-    private static final Map<EnumColor, float[]> by = Maps.newEnumMap(EnumColor.class);
-    private int bA;
-    private PathfinderGoalEatTile bB;
+    private static final Map<EnumColor, float[]> bz = Maps.newEnumMap(EnumColor.class);
+    private int bB;
+    private PathfinderGoalEatTile bC;
 
     public static float[] a(EnumColor enumcolor) {
-        return (float[]) EntitySheep.by.get(enumcolor);
+        return (float[]) EntitySheep.bz.get(enumcolor);
     }
 
     public EntitySheep(World world) {
@@ -29,25 +29,26 @@
     }
 
     protected void r() {
+        this.bC = new PathfinderGoalEatTile(this);
         this.goalSelector.a(0, new PathfinderGoalFloat(this));
         this.goalSelector.a(1, new PathfinderGoalPanic(this, 1.25D));
         this.goalSelector.a(2, new PathfinderGoalBreed(this, 1.0D));
         this.goalSelector.a(3, new PathfinderGoalTempt(this, 1.1D, Items.WHEAT, false));
         this.goalSelector.a(4, new PathfinderGoalFollowParent(this, 1.1D));
-        this.goalSelector.a(5, this.bB = new PathfinderGoalEatTile(this));
+        this.goalSelector.a(5, this.bC);
         this.goalSelector.a(6, new PathfinderGoalRandomStroll(this, 1.0D));
         this.goalSelector.a(7, new PathfinderGoalLookAtPlayer(this, EntityHuman.class, 6.0F));
         this.goalSelector.a(8, new PathfinderGoalRandomLookaround(this));
     }
 
     protected void M() {
-        this.bA = this.bB.f();
+        this.bB = this.bC.f();
         super.M();
     }
 
     public void n() {
         if (this.world.isClientSide) {
-            this.bA = Math.max(0, this.bA - 1);
+            this.bB = Math.max(0, this.bB - 1);
         }
 
         super.n();
@@ -61,63 +62,63 @@
 
     protected void i() {
         super.i();
-        this.datawatcher.register(EntitySheep.bw, Byte.valueOf((byte) 0));
+        this.datawatcher.register(EntitySheep.bx, Byte.valueOf((byte) 0));
     }
 
     @Nullable
     protected MinecraftKey J() {
         if (this.isSheared()) {
-            return LootTables.L;
+            return LootTables.M;
         } else {
             switch (EntitySheep.SyntheticClass_1.a[this.getColor().ordinal()]) {
             case 1:
             default:
-                return LootTables.M;
+                return LootTables.N;
 
             case 2:
-                return LootTables.N;
+                return LootTables.O;
 
             case 3:
-                return LootTables.O;
+                return LootTables.P;
 
             case 4:
-                return LootTables.P;
+                return LootTables.Q;
 
             case 5:
-                return LootTables.Q;
+                return LootTables.R;
 
             case 6:
-                return LootTables.R;
+                return LootTables.S;
 
             case 7:
-                return LootTables.S;
+                return LootTables.T;
 
             case 8:
-                return LootTables.T;
+                return LootTables.U;
 
             case 9:
-                return LootTables.U;
+                return LootTables.V;
 
             case 10:
-                return LootTables.V;
+                return LootTables.W;
 
             case 11:
-                return LootTables.W;
+                return LootTables.X;
 
             case 12:
-                return LootTables.X;
+                return LootTables.Y;
 
             case 13:
-                return LootTables.Y;
+                return LootTables.Z;
 
             case 14:
-                return LootTables.Z;
+                return LootTables.aa;
 
             case 15:
-                return LootTables.aa;
+                return LootTables.ab;
 
             case 16:
-                return LootTables.ab;
+                return LootTables.ac;
             }
         }
     }
@@ -138,12 +139,16 @@
             }
 
             itemstack.damage(1, entityhuman);
-            this.a(SoundEffects.eP, 1.0F, 1.0F);
+            this.a(SoundEffects.fa, 1.0F, 1.0F);
         }
 
         return super.a(entityhuman, enumhand, itemstack);
     }
 
+    public static void b(DataConverterManager dataconvertermanager) {
+        EntityInsentient.a(dataconvertermanager, "Sheep");
+    }
+
     public void b(NBTTagCompound nbttagcompound) {
         super.b(nbttagcompound);
         nbttagcompound.setBoolean("Sheared", this.isSheared());
@@ -157,42 +162,42 @@
     }
 
     protected SoundEffect G() {
-        return SoundEffects.eM;
+        return SoundEffects.eX;
     }
 
-    protected SoundEffect bS() {
-        return SoundEffects.eO;
+    protected SoundEffect bV() {
+        return SoundEffects.eZ;
     }
 
-    protected SoundEffect bT() {
-        return SoundEffects.eN;
+    protected SoundEffect bW() {
+        return SoundEffects.eY;
     }
 
     protected void a(BlockPosition blockposition, Block block) {
-        this.a(SoundEffects.eQ, 0.15F, 1.0F);
+        this.a(SoundEffects.fb, 0.15F, 1.0F);
     }
 
     public EnumColor getColor() {
-        return EnumColor.fromColorIndex(((Byte) this.datawatcher.get(EntitySheep.bw)).byteValue() & 15);
+        return EnumColor.fromColorIndex(((Byte) this.datawatcher.get(EntitySheep.bx)).byteValue() & 15);
     }
 
     public void setColor(EnumColor enumcolor) {
-        byte b0 = ((Byte) this.datawatcher.get(EntitySheep.bw)).byteValue();
+        byte b0 = ((Byte) this.datawatcher.get(EntitySheep.bx)).byteValue();
 
-        this.datawatcher.set(EntitySheep.bw, Byte.valueOf((byte) (b0 & 240 | enumcolor.getColorIndex() & 15)));
+        this.datawatcher.set(EntitySheep.bx, Byte.valueOf((byte) (b0 & 240 | enumcolor.getColorIndex() & 15)));
     }
 
     public boolean isSheared() {
-        return (((Byte) this.datawatcher.get(EntitySheep.bw)).byteValue() & 16) != 0;
+        return (((Byte) this.datawatcher.get(EntitySheep.bx)).byteValue() & 16) != 0;
     }
 
     public void setSheared(boolean flag) {
-        byte b0 = ((Byte) this.datawatcher.get(EntitySheep.bw)).byteValue();
+        byte b0 = ((Byte) this.datawatcher.get(EntitySheep.bx)).byteValue();
 
         if (flag) {
-            this.datawatcher.set(EntitySheep.bw, Byte.valueOf((byte) (b0 | 16)));
+            this.datawatcher.set(EntitySheep.bx, Byte.valueOf((byte) (b0 | 16)));
         } else {
-            this.datawatcher.set(EntitySheep.bw, Byte.valueOf((byte) (b0 & -17)));
+            this.datawatcher.set(EntitySheep.bx, Byte.valueOf((byte) (b0 & -17)));
         }
 
     }
@@ -211,7 +216,7 @@
         return entitysheep1;
     }
 
-    public void B() {
+    public void A() {
         this.setSheared(false);
         if (this.isBaby()) {
             this.setAge(60);
@@ -253,22 +258,22 @@
     }
 
     static {
-        EntitySheep.by.put(EnumColor.WHITE, new float[] { 1.0F, 1.0F, 1.0F});
-        EntitySheep.by.put(EnumColor.ORANGE, new float[] { 0.85F, 0.5F, 0.2F});
-        EntitySheep.by.put(EnumColor.MAGENTA, new float[] { 0.7F, 0.3F, 0.85F});
-        EntitySheep.by.put(EnumColor.LIGHT_BLUE, new float[] { 0.4F, 0.6F, 0.85F});
-        EntitySheep.by.put(EnumColor.YELLOW, new float[] { 0.9F, 0.9F, 0.2F});
-        EntitySheep.by.put(EnumColor.LIME, new float[] { 0.5F, 0.8F, 0.1F});
-        EntitySheep.by.put(EnumColor.PINK, new float[] { 0.95F, 0.5F, 0.65F});
-        EntitySheep.by.put(EnumColor.GRAY, new float[] { 0.3F, 0.3F, 0.3F});
-        EntitySheep.by.put(EnumColor.SILVER, new float[] { 0.6F, 0.6F, 0.6F});
-        EntitySheep.by.put(EnumColor.CYAN, new float[] { 0.3F, 0.5F, 0.6F});
-        EntitySheep.by.put(EnumColor.PURPLE, new float[] { 0.5F, 0.25F, 0.7F});
-        EntitySheep.by.put(EnumColor.BLUE, new float[] { 0.2F, 0.3F, 0.7F});
-        EntitySheep.by.put(EnumColor.BROWN, new float[] { 0.4F, 0.3F, 0.2F});
-        EntitySheep.by.put(EnumColor.GREEN, new float[] { 0.4F, 0.5F, 0.2F});
-        EntitySheep.by.put(EnumColor.RED, new float[] { 0.6F, 0.2F, 0.2F});
-        EntitySheep.by.put(EnumColor.BLACK, new float[] { 0.1F, 0.1F, 0.1F});
+        EntitySheep.bz.put(EnumColor.WHITE, new float[] { 1.0F, 1.0F, 1.0F});
+        EntitySheep.bz.put(EnumColor.ORANGE, new float[] { 0.85F, 0.5F, 0.2F});
+        EntitySheep.bz.put(EnumColor.MAGENTA, new float[] { 0.7F, 0.3F, 0.85F});
+        EntitySheep.bz.put(EnumColor.LIGHT_BLUE, new float[] { 0.4F, 0.6F, 0.85F});
+        EntitySheep.bz.put(EnumColor.YELLOW, new float[] { 0.9F, 0.9F, 0.2F});
+        EntitySheep.bz.put(EnumColor.LIME, new float[] { 0.5F, 0.8F, 0.1F});
+        EntitySheep.bz.put(EnumColor.PINK, new float[] { 0.95F, 0.5F, 0.65F});
+        EntitySheep.bz.put(EnumColor.GRAY, new float[] { 0.3F, 0.3F, 0.3F});
+        EntitySheep.bz.put(EnumColor.SILVER, new float[] { 0.6F, 0.6F, 0.6F});
+        EntitySheep.bz.put(EnumColor.CYAN, new float[] { 0.3F, 0.5F, 0.6F});
+        EntitySheep.bz.put(EnumColor.PURPLE, new float[] { 0.5F, 0.25F, 0.7F});
+        EntitySheep.bz.put(EnumColor.BLUE, new float[] { 0.2F, 0.3F, 0.7F});
+        EntitySheep.bz.put(EnumColor.BROWN, new float[] { 0.4F, 0.3F, 0.2F});
+        EntitySheep.bz.put(EnumColor.GREEN, new float[] { 0.4F, 0.5F, 0.2F});
+        EntitySheep.bz.put(EnumColor.RED, new float[] { 0.6F, 0.2F, 0.2F});
+        EntitySheep.bz.put(EnumColor.BLACK, new float[] { 0.1F, 0.1F, 0.1F});
     }
 
     static class SyntheticClass_1 {
