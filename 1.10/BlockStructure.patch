--- a/net/minecraft/server/BlockStructure.java
+++ b/net/minecraft/server/BlockStructure.java
@@ -17,14 +17,26 @@
     }
 
     public boolean interact(World world, BlockPosition blockposition, IBlockData iblockdata, EntityHuman entityhuman, EnumHand enumhand, @Nullable ItemStack itemstack, EnumDirection enumdirection, float f, float f1, float f2) {
-        return false;
+        TileEntity tileentity = world.getTileEntity(blockposition);
+
+        return tileentity instanceof TileEntityStructure ? ((TileEntityStructure) tileentity).a(entityhuman) : false;
     }
 
-    public void postPlace(World world, BlockPosition blockposition, IBlockData iblockdata, EntityLiving entityliving, ItemStack itemstack) {}
+    public void postPlace(World world, BlockPosition blockposition, IBlockData iblockdata, EntityLiving entityliving, ItemStack itemstack) {
+        if (!world.isClientSide) {
+            TileEntity tileentity = world.getTileEntity(blockposition);
+
+            if (tileentity instanceof TileEntityStructure) {
+                TileEntityStructure tileentitystructure = (TileEntityStructure) tileentity;
+
+                tileentitystructure.a(entityliving);
+            }
+        }
+    }
 
     @Nullable
     public ItemStack a(World world, BlockPosition blockposition, IBlockData iblockdata) {
-        return null;
+        return super.a(world, blockposition, iblockdata);
     }
 
     public int a(Random random) {
@@ -50,4 +62,74 @@
     protected BlockStateList getStateList() {
         return new BlockStateList(this, new IBlockState[] { BlockStructure.a});
     }
+
+    public void a(IBlockData iblockdata, World world, BlockPosition blockposition, Block block) {
+        if (!world.isClientSide) {
+            TileEntity tileentity = world.getTileEntity(blockposition);
+
+            if (tileentity instanceof TileEntityStructure) {
+                TileEntityStructure tileentitystructure = (TileEntityStructure) tileentity;
+                boolean flag = world.isBlockIndirectlyPowered(blockposition);
+                boolean flag1 = tileentitystructure.G();
+
+                if (flag && !flag1) {
+                    tileentitystructure.d(true);
+                    this.a(tileentitystructure);
+                } else if (!flag && flag1) {
+                    tileentitystructure.d(false);
+                }
+
+            }
+        }
+    }
+
+    private void a(TileEntityStructure tileentitystructure) {
+        switch (BlockStructure.SyntheticClass_1.a[tileentitystructure.k().ordinal()]) {
+        case 1:
+            tileentitystructure.b(false);
+            break;
+
+        case 2:
+            tileentitystructure.c(false);
+            break;
+
+        case 3:
+            tileentitystructure.E();
+
+        case 4:
+        }
+
+    }
+
+    static class SyntheticClass_1 {
+
+        static final int[] a = new int[TileEntityStructure.UsageMode.values().length];
+
+        static {
+            try {
+                BlockStructure.SyntheticClass_1.a[TileEntityStructure.UsageMode.SAVE.ordinal()] = 1;
+            } catch (NoSuchFieldError nosuchfielderror) {
+                ;
+            }
+
+            try {
+                BlockStructure.SyntheticClass_1.a[TileEntityStructure.UsageMode.LOAD.ordinal()] = 2;
+            } catch (NoSuchFieldError nosuchfielderror1) {
+                ;
+            }
+
+            try {
+                BlockStructure.SyntheticClass_1.a[TileEntityStructure.UsageMode.CORNER.ordinal()] = 3;
+            } catch (NoSuchFieldError nosuchfielderror2) {
+                ;
+            }
+
+            try {
+                BlockStructure.SyntheticClass_1.a[TileEntityStructure.UsageMode.DATA.ordinal()] = 4;
+            } catch (NoSuchFieldError nosuchfielderror3) {
+                ;
+            }
+
+        }
+    }
 }
