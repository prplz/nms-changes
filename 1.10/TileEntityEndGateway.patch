--- a/net/minecraft/server/TileEntityEndGateway.java
+++ b/net/minecraft/server/TileEntityEndGateway.java
@@ -10,8 +10,8 @@
 public class TileEntityEndGateway extends TileEntity implements ITickable {
 
     private static final Logger a = LogManager.getLogger();
-    private long f = 0L;
-    private int g = 0;
+    private long f;
+    private int g;
     public BlockPosition exitPortal;
     public boolean exactTeleport;
 
@@ -41,7 +41,7 @@
         this.exactTeleport = nbttagcompound.getBoolean("ExactTeleport");
     }
 
-    public void c() {
+    public void E_() {
         boolean flag = this.d();
         boolean flag1 = this.e();
 
@@ -72,10 +72,10 @@
 
     @Nullable
     public PacketPlayOutTileEntityData getUpdatePacket() {
-        return new PacketPlayOutTileEntityData(this.position, 8, this.E_());
+        return new PacketPlayOutTileEntityData(this.position, 8, this.c());
     }
 
-    public NBTTagCompound E_() {
+    public NBTTagCompound c() {
         return this.save(new NBTTagCompound());
     }
 
@@ -117,7 +117,7 @@
     private BlockPosition k() {
         BlockPosition blockposition = a(this.world, this.exitPortal, 5, false);
 
-        TileEntityEndGateway.a.debug("Best exit position for portal at " + this.exitPortal + " is " + blockposition);
+        TileEntityEndGateway.a.debug("Best exit position for portal at {} is {}", new Object[] { this.exitPortal, blockposition});
         return blockposition.up();
     }
 
@@ -128,27 +128,27 @@
         int i;
 
         for (i = 16; a(this.world, vec3d1).g() > 0 && i-- > 0; vec3d1 = vec3d1.e(vec3d.a(-16.0D))) {
-            TileEntityEndGateway.a.debug("Skipping backwards past nonempty chunk at " + vec3d1);
+            TileEntityEndGateway.a.debug("Skipping backwards past nonempty chunk at {}", new Object[] { vec3d1});
         }
 
         for (i = 16; a(this.world, vec3d1).g() == 0 && i-- > 0; vec3d1 = vec3d1.e(vec3d.a(16.0D))) {
-            TileEntityEndGateway.a.debug("Skipping forward past empty chunk at " + vec3d1);
+            TileEntityEndGateway.a.debug("Skipping forward past empty chunk at {}", new Object[] { vec3d1});
         }
 
-        TileEntityEndGateway.a.debug("Found chunk at " + vec3d1);
+        TileEntityEndGateway.a.debug("Found chunk at {}", new Object[] { vec3d1});
         Chunk chunk = a(this.world, vec3d1);
 
         this.exitPortal = a(chunk);
         if (this.exitPortal == null) {
             this.exitPortal = new BlockPosition(vec3d1.x + 0.5D, 75.0D, vec3d1.z + 0.5D);
-            TileEntityEndGateway.a.debug("Failed to find suitable block, settling on " + this.exitPortal);
+            TileEntityEndGateway.a.debug("Failed to find suitable block, settling on {}", new Object[] { this.exitPortal});
             (new WorldGenEndIsland()).generate(this.world, new Random(this.exitPortal.asLong()), this.exitPortal);
         } else {
-            TileEntityEndGateway.a.debug("Found block at " + this.exitPortal);
+            TileEntityEndGateway.a.debug("Found block at {}", new Object[] { this.exitPortal});
         }
 
         this.exitPortal = a(this.world, this.exitPortal, 16, true);
-        TileEntityEndGateway.a.debug("Creating portal at " + this.exitPortal);
+        TileEntityEndGateway.a.debug("Creating portal at {}", new Object[] { this.exitPortal});
         this.exitPortal = this.exitPortal.up(10);
         this.b(this.exitPortal);
         this.update();
@@ -216,7 +216,7 @@
             tileentityendgateway.exitPortal = new BlockPosition(this.getPosition());
             tileentityendgateway.update();
         } else {
-            TileEntityEndGateway.a.warn("Couldn\'t save exit portal at " + blockposition);
+            TileEntityEndGateway.a.warn("Couldn\'t save exit portal at {}", new Object[] { blockposition});
         }
 
     }
