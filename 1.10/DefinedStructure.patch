--- a/net/minecraft/server/DefinedStructure.java
+++ b/net/minecraft/server/DefinedStructure.java
@@ -61,11 +61,11 @@
                         nbttagcompound.remove("x");
                         nbttagcompound.remove("y");
                         nbttagcompound.remove("z");
-                        arraylist1.add(new DefinedStructure.BlockInfo(blockposition5, iblockdata, nbttagcompound, null));
+                        arraylist1.add(new DefinedStructure.BlockInfo(blockposition5, iblockdata, nbttagcompound));
                     } else if (!iblockdata.b() && !iblockdata.h()) {
-                        arraylist2.add(new DefinedStructure.BlockInfo(blockposition5, iblockdata, (NBTTagCompound) null, null));
+                        arraylist2.add(new DefinedStructure.BlockInfo(blockposition5, iblockdata, (NBTTagCompound) null));
                     } else {
-                        arraylist.add(new DefinedStructure.BlockInfo(blockposition5, iblockdata, (NBTTagCompound) null, null));
+                        arraylist.add(new DefinedStructure.BlockInfo(blockposition5, iblockdata, (NBTTagCompound) null));
                     }
                 }
             }
@@ -100,7 +100,7 @@
         NBTTagCompound nbttagcompound;
         BlockPosition blockposition2;
 
-        for (Iterator iterator = list.iterator(); iterator.hasNext(); this.b.add(new DefinedStructure.EntityInfo(vec3d, blockposition2, nbttagcompound, null))) {
+        for (Iterator iterator = list.iterator(); iterator.hasNext(); this.b.add(new DefinedStructure.EntityInfo(vec3d, blockposition2, nbttagcompound))) {
             Entity entity = (Entity) iterator.next();
 
             vec3d = new Vec3D(entity.locX - (double) blockposition.getX(), entity.locY - (double) blockposition.getY(), entity.locZ - (double) blockposition.getZ());
@@ -117,7 +117,7 @@
 
     public Map<BlockPosition, String> a(BlockPosition blockposition, DefinedStructureInfo definedstructureinfo) {
         HashMap hashmap = Maps.newHashMap();
-        StructureBoundingBox structureboundingbox = definedstructureinfo.g();
+        StructureBoundingBox structureboundingbox = definedstructureinfo.i();
         Iterator iterator = this.a.iterator();
 
         while (iterator.hasNext()) {
@@ -148,35 +148,45 @@
     }
 
     public static BlockPosition a(DefinedStructureInfo definedstructureinfo, BlockPosition blockposition) {
-        return a(blockposition, definedstructureinfo.b(), definedstructureinfo.c());
+        return b(blockposition, definedstructureinfo.b(), definedstructureinfo.c());
     }
 
     public void a(World world, BlockPosition blockposition, DefinedStructureInfo definedstructureinfo) {
-        definedstructureinfo.i();
+        definedstructureinfo.k();
         this.b(world, blockposition, definedstructureinfo);
     }
 
     public void b(World world, BlockPosition blockposition, DefinedStructureInfo definedstructureinfo) {
+        this.a(world, blockposition, new DefinedStructureProcessorRotation(blockposition, definedstructureinfo), definedstructureinfo, 2);
+    }
+
+    public void a(World world, BlockPosition blockposition, DefinedStructureInfo definedstructureinfo, int i) {
+        this.a(world, blockposition, new DefinedStructureProcessorRotation(blockposition, definedstructureinfo), definedstructureinfo, i);
+    }
+
+    public void a(World world, BlockPosition blockposition, @Nullable DefinedStructureProcessor definedstructureprocessor, DefinedStructureInfo definedstructureinfo, int i) {
         if (!this.a.isEmpty() && this.c.getX() >= 1 && this.c.getY() >= 1 && this.c.getZ() >= 1) {
-            Block block = definedstructureinfo.f();
-            StructureBoundingBox structureboundingbox = definedstructureinfo.g();
+            Block block = definedstructureinfo.h();
+            StructureBoundingBox structureboundingbox = definedstructureinfo.i();
             Iterator iterator = this.a.iterator();
 
             DefinedStructure.BlockInfo definedstructure_blockinfo;
+            BlockPosition blockposition1;
 
             while (iterator.hasNext()) {
                 definedstructure_blockinfo = (DefinedStructure.BlockInfo) iterator.next();
-                Block block1 = definedstructure_blockinfo.b.getBlock();
+                blockposition1 = a(definedstructureinfo, definedstructure_blockinfo.a).a(blockposition);
+                DefinedStructure.BlockInfo definedstructure_blockinfo1 = definedstructureprocessor != null ? definedstructureprocessor.a(world, blockposition1, definedstructure_blockinfo) : definedstructure_blockinfo;
 
-                if ((block == null || block != block1) && (!definedstructureinfo.h() || block1 != Blocks.STRUCTURE_BLOCK)) {
-                    BlockPosition blockposition1 = a(definedstructureinfo, definedstructure_blockinfo.a).a(blockposition);
+                if (definedstructure_blockinfo1 != null) {
+                    Block block1 = definedstructure_blockinfo1.b.getBlock();
 
-                    if (structureboundingbox == null || structureboundingbox.b((BaseBlockPosition) blockposition1)) {
-                        IBlockData iblockdata = definedstructure_blockinfo.b.a(definedstructureinfo.b());
+                    if ((block == null || block != block1) && (!definedstructureinfo.j() || block1 != Blocks.STRUCTURE_BLOCK) && (structureboundingbox == null || structureboundingbox.b((BaseBlockPosition) blockposition1))) {
+                        IBlockData iblockdata = definedstructure_blockinfo1.b.a(definedstructureinfo.b());
                         IBlockData iblockdata1 = iblockdata.a(definedstructureinfo.c());
                         TileEntity tileentity;
 
-                        if (definedstructure_blockinfo.c != null) {
+                        if (definedstructure_blockinfo1.c != null) {
                             tileentity = world.getTileEntity(blockposition1);
                             if (tileentity != null) {
                                 if (tileentity instanceof IInventory) {
@@ -187,13 +197,15 @@
                             }
                         }
 
-                        if (world.setTypeAndData(blockposition1, iblockdata1, 2) && definedstructure_blockinfo.c != null) {
+                        if (world.setTypeAndData(blockposition1, iblockdata1, i) && definedstructure_blockinfo1.c != null) {
                             tileentity = world.getTileEntity(blockposition1);
                             if (tileentity != null) {
-                                definedstructure_blockinfo.c.setInt("x", blockposition1.getX());
-                                definedstructure_blockinfo.c.setInt("y", blockposition1.getY());
-                                definedstructure_blockinfo.c.setInt("z", blockposition1.getZ());
-                                tileentity.a(definedstructure_blockinfo.c);
+                                definedstructure_blockinfo1.c.setInt("x", blockposition1.getX());
+                                definedstructure_blockinfo1.c.setInt("y", blockposition1.getY());
+                                definedstructure_blockinfo1.c.setInt("z", blockposition1.getZ());
+                                tileentity.a(definedstructure_blockinfo1.c);
+                                tileentity.a(definedstructureinfo.b());
+                                tileentity.a(definedstructureinfo.c());
                             }
                         }
                     }
@@ -205,12 +217,11 @@
             while (iterator.hasNext()) {
                 definedstructure_blockinfo = (DefinedStructure.BlockInfo) iterator.next();
                 if (block == null || block != definedstructure_blockinfo.b.getBlock()) {
-                    BlockPosition blockposition2 = a(definedstructureinfo, definedstructure_blockinfo.a).a(blockposition);
-
-                    if (structureboundingbox == null || structureboundingbox.b((BaseBlockPosition) blockposition2)) {
-                        world.update(blockposition2, definedstructure_blockinfo.b.getBlock());
+                    blockposition1 = a(definedstructureinfo, definedstructure_blockinfo.a).a(blockposition);
+                    if (structureboundingbox == null || structureboundingbox.b((BaseBlockPosition) blockposition1)) {
+                        world.update(blockposition1, definedstructure_blockinfo.b.getBlock());
                         if (definedstructure_blockinfo.c != null) {
-                            TileEntity tileentity1 = world.getTileEntity(blockposition2);
+                            TileEntity tileentity1 = world.getTileEntity(blockposition1);
 
                             if (tileentity1 != null) {
                                 tileentity1.update();
@@ -220,7 +231,7 @@
                 }
             }
 
-            if (!definedstructureinfo.e()) {
+            if (!definedstructureinfo.g()) {
                 this.a(world, blockposition, definedstructureinfo.b(), definedstructureinfo.c(), structureboundingbox);
             }
 
@@ -232,7 +243,7 @@
 
         while (iterator.hasNext()) {
             DefinedStructure.EntityInfo definedstructure_entityinfo = (DefinedStructure.EntityInfo) iterator.next();
-            BlockPosition blockposition1 = a(definedstructure_entityinfo.b, enumblockmirror, enumblockrotation).a(blockposition);
+            BlockPosition blockposition1 = b(definedstructure_entityinfo.b, enumblockmirror, enumblockrotation).a(blockposition);
 
             if (structureboundingbox == null || structureboundingbox.b((BaseBlockPosition) blockposition1)) {
                 NBTTagCompound nbttagcompound = definedstructure_entityinfo.c;
@@ -255,18 +266,10 @@
                 }
 
                 if (entity != null) {
-                    if (entity instanceof EntityPainting) {
-                        entity.a(enumblockmirror);
-                        entity.a(enumblockrotation);
-                        entity.setPosition((double) blockposition1.getX(), (double) blockposition1.getY(), (double) blockposition1.getZ());
-                        entity.setPositionRotation(vec3d1.x, vec3d1.y, vec3d1.z, entity.yaw, entity.pitch);
-                    } else {
-                        float f = entity.a(enumblockmirror);
-
-                        f += entity.yaw - entity.a(enumblockrotation);
-                        entity.setPositionRotation(vec3d1.x, vec3d1.y, vec3d1.z, f, entity.pitch);
-                    }
+                    float f = entity.a(enumblockmirror);
 
+                    f += entity.yaw - entity.a(enumblockrotation);
+                    entity.setPositionRotation(vec3d1.x, vec3d1.y, vec3d1.z, f, entity.pitch);
                     world.addEntity(entity);
                 }
             }
@@ -285,7 +288,7 @@
         }
     }
 
-    private static BlockPosition a(BlockPosition blockposition, EnumBlockMirror enumblockmirror, EnumBlockRotation enumblockrotation) {
+    private static BlockPosition b(BlockPosition blockposition, EnumBlockMirror enumblockmirror, EnumBlockRotation enumblockrotation) {
         int i = blockposition.getX();
         int j = blockposition.getY();
         int k = blockposition.getZ();
@@ -353,7 +356,35 @@
         }
     }
 
+    public BlockPosition a(BlockPosition blockposition, EnumBlockMirror enumblockmirror, EnumBlockRotation enumblockrotation) {
+        int i = this.a().getX() - 1;
+        int j = this.a().getZ() - 1;
+        int k = enumblockmirror == EnumBlockMirror.FRONT_BACK ? i : 0;
+        int l = enumblockmirror == EnumBlockMirror.LEFT_RIGHT ? j : 0;
+        BlockPosition blockposition1 = blockposition;
+
+        switch (DefinedStructure.SyntheticClass_1.a[enumblockrotation.ordinal()]) {
+        case 1:
+            blockposition1 = blockposition.a(l, 0, i - k);
+            break;
+
+        case 2:
+            blockposition1 = blockposition.a(j - l, 0, k);
+            break;
+
+        case 3:
+            blockposition1 = blockposition.a(i - k, 0, j - l);
+            break;
+
+        case 4:
+            blockposition1 = blockposition.a(k, 0, l);
+        }
+
+        return blockposition1;
+    }
+
     public NBTTagCompound a(NBTTagCompound nbttagcompound) {
+        DefinedStructure.a definedstructure_a = new DefinedStructure.a(null);
         NBTTagList nbttaglist = new NBTTagList();
 
         NBTTagCompound nbttagcompound1;
@@ -363,7 +394,7 @@
 
             nbttagcompound1 = new NBTTagCompound();
             nbttagcompound1.set("pos", this.a(new int[] { definedstructure_blockinfo.a.getX(), definedstructure_blockinfo.a.getY(), definedstructure_blockinfo.a.getZ()}));
-            nbttagcompound1.setInt("state", Block.getCombinedId(definedstructure_blockinfo.b));
+            nbttagcompound1.setInt("state", definedstructure_a.a(definedstructure_blockinfo.b));
             if (definedstructure_blockinfo.c != null) {
                 nbttagcompound1.set("nbt", definedstructure_blockinfo.c);
             }
@@ -384,6 +415,16 @@
             }
         }
 
+        NBTTagList nbttaglist2 = new NBTTagList();
+        Iterator iterator2 = definedstructure_a.iterator();
+
+        while (iterator2.hasNext()) {
+            IBlockData iblockdata = (IBlockData) iterator2.next();
+
+            nbttaglist2.add(GameProfileSerializer.a(new NBTTagCompound(), iblockdata));
+        }
+
+        nbttagcompound.set("palette", nbttaglist2);
         nbttagcompound.set("blocks", nbttaglist);
         nbttagcompound.set("entities", nbttaglist1);
         nbttagcompound.set("size", this.a(new int[] { this.c.getX(), this.c.getY(), this.c.getZ()}));
@@ -399,14 +440,20 @@
 
         this.c = new BlockPosition(nbttaglist.c(0), nbttaglist.c(1), nbttaglist.c(2));
         this.d = nbttagcompound.getString("author");
-        NBTTagList nbttaglist1 = nbttagcompound.getList("blocks", 10);
+        DefinedStructure.a definedstructure_a = new DefinedStructure.a(null);
+        NBTTagList nbttaglist1 = nbttagcompound.getList("palette", 10);
 
         for (int i = 0; i < nbttaglist1.size(); ++i) {
-            NBTTagCompound nbttagcompound1 = nbttaglist1.get(i);
-            NBTTagList nbttaglist2 = nbttagcompound1.getList("pos", 3);
-            BlockPosition blockposition = new BlockPosition(nbttaglist2.c(0), nbttaglist2.c(1), nbttaglist2.c(2));
-            int j = nbttagcompound1.getInt("state");
-            IBlockData iblockdata = Block.getByCombinedId(j);
+            definedstructure_a.a(GameProfileSerializer.d(nbttaglist1.get(i)), i);
+        }
+
+        NBTTagList nbttaglist2 = nbttagcompound.getList("blocks", 10);
+
+        for (int j = 0; j < nbttaglist2.size(); ++j) {
+            NBTTagCompound nbttagcompound1 = nbttaglist2.get(j);
+            NBTTagList nbttaglist3 = nbttagcompound1.getList("pos", 3);
+            BlockPosition blockposition = new BlockPosition(nbttaglist3.c(0), nbttaglist3.c(1), nbttaglist3.c(2));
+            IBlockData iblockdata = definedstructure_a.a(nbttagcompound1.getInt("state"));
             NBTTagCompound nbttagcompound2;
 
             if (nbttagcompound1.hasKey("nbt")) {
@@ -415,22 +462,22 @@
                 nbttagcompound2 = null;
             }
 
-            this.a.add(new DefinedStructure.BlockInfo(blockposition, iblockdata, nbttagcompound2, null));
+            this.a.add(new DefinedStructure.BlockInfo(blockposition, iblockdata, nbttagcompound2));
         }
 
-        NBTTagList nbttaglist3 = nbttagcompound.getList("entities", 10);
+        NBTTagList nbttaglist4 = nbttagcompound.getList("entities", 10);
 
-        for (int k = 0; k < nbttaglist3.size(); ++k) {
-            NBTTagCompound nbttagcompound3 = nbttaglist3.get(k);
-            NBTTagList nbttaglist4 = nbttagcompound3.getList("pos", 6);
-            Vec3D vec3d = new Vec3D(nbttaglist4.e(0), nbttaglist4.e(1), nbttaglist4.e(2));
-            NBTTagList nbttaglist5 = nbttagcompound3.getList("blockPos", 3);
-            BlockPosition blockposition1 = new BlockPosition(nbttaglist5.c(0), nbttaglist5.c(1), nbttaglist5.c(2));
+        for (int k = 0; k < nbttaglist4.size(); ++k) {
+            NBTTagCompound nbttagcompound3 = nbttaglist4.get(k);
+            NBTTagList nbttaglist5 = nbttagcompound3.getList("pos", 6);
+            Vec3D vec3d = new Vec3D(nbttaglist5.e(0), nbttaglist5.e(1), nbttaglist5.e(2));
+            NBTTagList nbttaglist6 = nbttagcompound3.getList("blockPos", 3);
+            BlockPosition blockposition1 = new BlockPosition(nbttaglist6.c(0), nbttaglist6.c(1), nbttaglist6.c(2));
 
             if (nbttagcompound3.hasKey("nbt")) {
                 NBTTagCompound nbttagcompound4 = nbttagcompound3.getCompound("nbt");
 
-                this.b.add(new DefinedStructure.EntityInfo(vec3d, blockposition1, nbttagcompound4, null));
+                this.b.add(new DefinedStructure.EntityInfo(vec3d, blockposition1, nbttagcompound4));
             }
         }
 
@@ -502,40 +549,79 @@
                 ;
             }
 
+            try {
+                DefinedStructure.SyntheticClass_1.a[EnumBlockRotation.NONE.ordinal()] = 4;
+            } catch (NoSuchFieldError nosuchfielderror5) {
+                ;
+            }
+
         }
     }
 
-    static class EntityInfo {
+    public static class EntityInfo {
 
         public final Vec3D a;
         public final BlockPosition b;
         public final NBTTagCompound c;
 
-        private EntityInfo(Vec3D vec3d, BlockPosition blockposition, NBTTagCompound nbttagcompound) {
+        public EntityInfo(Vec3D vec3d, BlockPosition blockposition, NBTTagCompound nbttagcompound) {
             this.a = vec3d;
             this.b = blockposition;
             this.c = nbttagcompound;
         }
-
-        EntityInfo(Vec3D vec3d, BlockPosition blockposition, NBTTagCompound nbttagcompound, Object object) {
-            this(vec3d, blockposition, nbttagcompound);
-        }
     }
 
-    static class BlockInfo {
+    public static class BlockInfo {
 
         public final BlockPosition a;
         public final IBlockData b;
         public final NBTTagCompound c;
 
-        private BlockInfo(BlockPosition blockposition, IBlockData iblockdata, @Nullable NBTTagCompound nbttagcompound) {
+        public BlockInfo(BlockPosition blockposition, IBlockData iblockdata, @Nullable NBTTagCompound nbttagcompound) {
             this.a = blockposition;
             this.b = iblockdata;
             this.c = nbttagcompound;
         }
+    }
+
+    static class a implements Iterable<IBlockData> {
+
+        public static final IBlockData a = Blocks.AIR.getBlockData();
+        final RegistryBlockID<IBlockData> b;
+        private int c;
+
+        private a() {
+            this.b = new RegistryBlockID(16);
+        }
+
+        public int a(IBlockData iblockdata) {
+            int i = this.b.getId(iblockdata);
+
+            if (i == -1) {
+                i = this.c++;
+                this.b.a(iblockdata, i);
+            }
+
+            return i;
+        }
+
+        @Nullable
+        public IBlockData a(int i) {
+            IBlockData iblockdata = (IBlockData) this.b.fromId(i);
+
+            return iblockdata == null ? DefinedStructure.a.a : iblockdata;
+        }
+
+        public Iterator<IBlockData> iterator() {
+            return this.b.iterator();
+        }
+
+        public void a(IBlockData iblockdata, int i) {
+            this.b.a(iblockdata, i);
+        }
 
-        BlockInfo(BlockPosition blockposition, IBlockData iblockdata, NBTTagCompound nbttagcompound, Object object) {
-            this(blockposition, iblockdata, nbttagcompound);
+        a(Object object) {
+            this();
         }
     }
 }
