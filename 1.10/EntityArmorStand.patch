--- a/net/minecraft/server/EntityArmorStand.java
+++ b/net/minecraft/server/EntityArmorStand.java
@@ -7,12 +7,12 @@
 
 public class EntityArmorStand extends EntityLiving {
 
-    private static final Vector3f bq = new Vector3f(0.0F, 0.0F, 0.0F);
     private static final Vector3f br = new Vector3f(0.0F, 0.0F, 0.0F);
-    private static final Vector3f bs = new Vector3f(-10.0F, 0.0F, -10.0F);
-    private static final Vector3f bt = new Vector3f(-15.0F, 0.0F, 10.0F);
-    private static final Vector3f bu = new Vector3f(-1.0F, 0.0F, -1.0F);
-    private static final Vector3f bv = new Vector3f(1.0F, 0.0F, 1.0F);
+    private static final Vector3f bs = new Vector3f(0.0F, 0.0F, 0.0F);
+    private static final Vector3f bt = new Vector3f(-10.0F, 0.0F, -10.0F);
+    private static final Vector3f bu = new Vector3f(-15.0F, 0.0F, 10.0F);
+    private static final Vector3f bv = new Vector3f(-1.0F, 0.0F, -1.0F);
+    private static final Vector3f bw = new Vector3f(1.0F, 0.0F, 1.0F);
     public static final DataWatcherObject<Byte> a = DataWatcher.a(EntityArmorStand.class, DataWatcherRegistry.a);
     public static final DataWatcherObject<Vector3f> b = DataWatcher.a(EntityArmorStand.class, DataWatcherRegistry.i);
     public static final DataWatcherObject<Vector3f> c = DataWatcher.a(EntityArmorStand.class, DataWatcherRegistry.i);
@@ -20,7 +20,7 @@
     public static final DataWatcherObject<Vector3f> e = DataWatcher.a(EntityArmorStand.class, DataWatcherRegistry.i);
     public static final DataWatcherObject<Vector3f> f = DataWatcher.a(EntityArmorStand.class, DataWatcherRegistry.i);
     public static final DataWatcherObject<Vector3f> g = DataWatcher.a(EntityArmorStand.class, DataWatcherRegistry.i);
-    private static final Predicate<Entity> bw = new Predicate() {
+    private static final Predicate<Entity> bx = new Predicate() {
         public boolean a(@Nullable Entity entity) {
             return entity instanceof EntityMinecartAbstract && ((EntityMinecartAbstract) entity).v() == EntityMinecartAbstract.EnumMinecartType.RIDEABLE;
         }
@@ -29,12 +29,12 @@
             return this.a((Entity) object);
         }
     };
-    private final ItemStack[] bx;
     private final ItemStack[] by;
-    private boolean bz;
+    private final ItemStack[] bz;
+    private boolean bA;
     public long h;
-    private int bA;
-    private boolean bB;
+    private int bB;
+    private boolean bC;
     public Vector3f headPose;
     public Vector3f bodyPose;
     public Vector3f leftArmPose;
@@ -44,15 +44,15 @@
 
     public EntityArmorStand(World world) {
         super(world);
-        this.bx = new ItemStack[2];
-        this.by = new ItemStack[4];
-        this.headPose = EntityArmorStand.bq;
-        this.bodyPose = EntityArmorStand.br;
-        this.leftArmPose = EntityArmorStand.bs;
-        this.rightArmPose = EntityArmorStand.bt;
-        this.leftLegPose = EntityArmorStand.bu;
-        this.rightLegPose = EntityArmorStand.bv;
-        this.noclip = this.hasGravity();
+        this.by = new ItemStack[2];
+        this.bz = new ItemStack[4];
+        this.headPose = EntityArmorStand.br;
+        this.bodyPose = EntityArmorStand.bs;
+        this.leftArmPose = EntityArmorStand.bt;
+        this.rightArmPose = EntityArmorStand.bu;
+        this.leftLegPose = EntityArmorStand.bv;
+        this.rightLegPose = EntityArmorStand.bw;
+        this.noclip = this.isNoGravity();
         this.setSize(0.5F, 1.975F);
     }
 
@@ -61,27 +61,27 @@
         this.setPosition(d0, d1, d2);
     }
 
-    public boolean cp() {
-        return super.cp() && !this.hasGravity();
+    public boolean ct() {
+        return super.ct() && !this.isNoGravity();
     }
 
     protected void i() {
         super.i();
         this.datawatcher.register(EntityArmorStand.a, Byte.valueOf((byte) 0));
-        this.datawatcher.register(EntityArmorStand.b, EntityArmorStand.bq);
-        this.datawatcher.register(EntityArmorStand.c, EntityArmorStand.br);
-        this.datawatcher.register(EntityArmorStand.d, EntityArmorStand.bs);
-        this.datawatcher.register(EntityArmorStand.e, EntityArmorStand.bt);
-        this.datawatcher.register(EntityArmorStand.f, EntityArmorStand.bu);
-        this.datawatcher.register(EntityArmorStand.g, EntityArmorStand.bv);
+        this.datawatcher.register(EntityArmorStand.b, EntityArmorStand.br);
+        this.datawatcher.register(EntityArmorStand.c, EntityArmorStand.bs);
+        this.datawatcher.register(EntityArmorStand.d, EntityArmorStand.bt);
+        this.datawatcher.register(EntityArmorStand.e, EntityArmorStand.bu);
+        this.datawatcher.register(EntityArmorStand.f, EntityArmorStand.bv);
+        this.datawatcher.register(EntityArmorStand.g, EntityArmorStand.bw);
     }
 
-    public Iterable<ItemStack> aE() {
-        return Arrays.asList(this.bx);
+    public Iterable<ItemStack> aG() {
+        return Arrays.asList(this.by);
     }
 
     public Iterable<ItemStack> getArmorItems() {
-        return Arrays.asList(this.by);
+        return Arrays.asList(this.bz);
     }
 
     @Nullable
@@ -90,11 +90,11 @@
 
         switch (EntityArmorStand.SyntheticClass_1.a[enumitemslot.a().ordinal()]) {
         case 1:
-            itemstack = this.bx[enumitemslot.b()];
+            itemstack = this.by[enumitemslot.b()];
             break;
 
         case 2:
-            itemstack = this.by[enumitemslot.b()];
+            itemstack = this.bz[enumitemslot.b()];
         }
 
         return itemstack;
@@ -104,12 +104,12 @@
         switch (EntityArmorStand.SyntheticClass_1.a[enumitemslot.a().ordinal()]) {
         case 1:
             this.a_(itemstack);
-            this.bx[enumitemslot.b()] = itemstack;
+            this.by[enumitemslot.b()] = itemstack;
             break;
 
         case 2:
             this.a_(itemstack);
-            this.by[enumitemslot.b()] = itemstack;
+            this.bz[enumitemslot.b()] = itemstack;
         }
 
     }
@@ -143,15 +143,24 @@
         }
     }
 
+    public static void a(DataConverterManager dataconvertermanager) {
+        dataconvertermanager.a(DataConverterTypes.ENTITY, (DataInspector) (new DataInspectorItemList("ArmorStand", new String[] { "ArmorItems", "HandItems"})));
+    }
+
     public void b(NBTTagCompound nbttagcompound) {
         super.b(nbttagcompound);
         NBTTagList nbttaglist = new NBTTagList();
+        ItemStack[] aitemstack = this.bz;
+        int i = aitemstack.length;
+
+        int j;
 
-        for (int i = 0; i < this.by.length; ++i) {
+        for (j = 0; j < i; ++j) {
+            ItemStack itemstack = aitemstack[j];
             NBTTagCompound nbttagcompound1 = new NBTTagCompound();
 
-            if (this.by[i] != null) {
-                this.by[i].save(nbttagcompound1);
+            if (itemstack != null) {
+                itemstack.save(nbttagcompound1);
             }
 
             nbttaglist.add(nbttagcompound1);
@@ -159,12 +168,16 @@
 
         nbttagcompound.set("ArmorItems", nbttaglist);
         NBTTagList nbttaglist1 = new NBTTagList();
+        ItemStack[] aitemstack1 = this.by;
 
-        for (int j = 0; j < this.bx.length; ++j) {
+        j = aitemstack1.length;
+
+        for (int k = 0; k < j; ++k) {
+            ItemStack itemstack1 = aitemstack1[k];
             NBTTagCompound nbttagcompound2 = new NBTTagCompound();
 
-            if (this.bx[j] != null) {
-                this.bx[j].save(nbttagcompound2);
+            if (itemstack1 != null) {
+                itemstack1.save(nbttagcompound2);
             }
 
             nbttaglist1.add(nbttagcompound2);
@@ -178,14 +191,13 @@
         nbttagcompound.setBoolean("Invisible", this.isInvisible());
         nbttagcompound.setBoolean("Small", this.isSmall());
         nbttagcompound.setBoolean("ShowArms", this.hasArms());
-        nbttagcompound.setInt("DisabledSlots", this.bA);
-        nbttagcompound.setBoolean("NoGravity", this.hasGravity());
+        nbttagcompound.setInt("DisabledSlots", this.bB);
         nbttagcompound.setBoolean("NoBasePlate", this.hasBasePlate());
         if (this.isMarker()) {
             nbttagcompound.setBoolean("Marker", this.isMarker());
         }
 
-        nbttagcompound.set("Pose", this.D());
+        nbttagcompound.set("Pose", this.C());
     }
 
     public void a(NBTTagCompound nbttagcompound) {
@@ -196,28 +208,27 @@
         if (nbttagcompound.hasKeyOfType("ArmorItems", 9)) {
             nbttaglist = nbttagcompound.getList("ArmorItems", 10);
 
-            for (i = 0; i < this.by.length; ++i) {
-                this.by[i] = ItemStack.createStack(nbttaglist.get(i));
+            for (i = 0; i < this.bz.length; ++i) {
+                this.bz[i] = ItemStack.createStack(nbttaglist.get(i));
             }
         }
 
         if (nbttagcompound.hasKeyOfType("HandItems", 9)) {
             nbttaglist = nbttagcompound.getList("HandItems", 10);
 
-            for (i = 0; i < this.bx.length; ++i) {
-                this.bx[i] = ItemStack.createStack(nbttaglist.get(i));
+            for (i = 0; i < this.by.length; ++i) {
+                this.by[i] = ItemStack.createStack(nbttaglist.get(i));
             }
         }
 
         this.setInvisible(nbttagcompound.getBoolean("Invisible"));
         this.setSmall(nbttagcompound.getBoolean("Small"));
         this.setArms(nbttagcompound.getBoolean("ShowArms"));
-        this.bA = nbttagcompound.getInt("DisabledSlots");
-        this.setGravity(nbttagcompound.getBoolean("NoGravity"));
+        this.bB = nbttagcompound.getInt("DisabledSlots");
         this.setBasePlate(nbttagcompound.getBoolean("NoBasePlate"));
         this.setMarker(nbttagcompound.getBoolean("Marker"));
-        this.bB = !this.isMarker();
-        this.noclip = this.hasGravity();
+        this.bC = !this.isMarker();
+        this.noclip = this.isNoGravity();
         NBTTagCompound nbttagcompound1 = nbttagcompound.getCompound("Pose");
 
         this.g(nbttagcompound1);
@@ -226,48 +237,48 @@
     private void g(NBTTagCompound nbttagcompound) {
         NBTTagList nbttaglist = nbttagcompound.getList("Head", 5);
 
-        this.setHeadPose(nbttaglist.isEmpty() ? EntityArmorStand.bq : new Vector3f(nbttaglist));
+        this.setHeadPose(nbttaglist.isEmpty() ? EntityArmorStand.br : new Vector3f(nbttaglist));
         NBTTagList nbttaglist1 = nbttagcompound.getList("Body", 5);
 
-        this.setBodyPose(nbttaglist1.isEmpty() ? EntityArmorStand.br : new Vector3f(nbttaglist1));
+        this.setBodyPose(nbttaglist1.isEmpty() ? EntityArmorStand.bs : new Vector3f(nbttaglist1));
         NBTTagList nbttaglist2 = nbttagcompound.getList("LeftArm", 5);
 
-        this.setLeftArmPose(nbttaglist2.isEmpty() ? EntityArmorStand.bs : new Vector3f(nbttaglist2));
+        this.setLeftArmPose(nbttaglist2.isEmpty() ? EntityArmorStand.bt : new Vector3f(nbttaglist2));
         NBTTagList nbttaglist3 = nbttagcompound.getList("RightArm", 5);
 
-        this.setRightArmPose(nbttaglist3.isEmpty() ? EntityArmorStand.bt : new Vector3f(nbttaglist3));
+        this.setRightArmPose(nbttaglist3.isEmpty() ? EntityArmorStand.bu : new Vector3f(nbttaglist3));
         NBTTagList nbttaglist4 = nbttagcompound.getList("LeftLeg", 5);
 
-        this.setLeftLegPose(nbttaglist4.isEmpty() ? EntityArmorStand.bu : new Vector3f(nbttaglist4));
+        this.setLeftLegPose(nbttaglist4.isEmpty() ? EntityArmorStand.bv : new Vector3f(nbttaglist4));
         NBTTagList nbttaglist5 = nbttagcompound.getList("RightLeg", 5);
 
-        this.setRightLegPose(nbttaglist5.isEmpty() ? EntityArmorStand.bv : new Vector3f(nbttaglist5));
+        this.setRightLegPose(nbttaglist5.isEmpty() ? EntityArmorStand.bw : new Vector3f(nbttaglist5));
     }
 
-    private NBTTagCompound D() {
+    private NBTTagCompound C() {
         NBTTagCompound nbttagcompound = new NBTTagCompound();
 
-        if (!EntityArmorStand.bq.equals(this.headPose)) {
+        if (!EntityArmorStand.br.equals(this.headPose)) {
             nbttagcompound.set("Head", this.headPose.a());
         }
 
-        if (!EntityArmorStand.br.equals(this.bodyPose)) {
+        if (!EntityArmorStand.bs.equals(this.bodyPose)) {
             nbttagcompound.set("Body", this.bodyPose.a());
         }
 
-        if (!EntityArmorStand.bs.equals(this.leftArmPose)) {
+        if (!EntityArmorStand.bt.equals(this.leftArmPose)) {
             nbttagcompound.set("LeftArm", this.leftArmPose.a());
         }
 
-        if (!EntityArmorStand.bt.equals(this.rightArmPose)) {
+        if (!EntityArmorStand.bu.equals(this.rightArmPose)) {
             nbttagcompound.set("RightArm", this.rightArmPose.a());
         }
 
-        if (!EntityArmorStand.bu.equals(this.leftLegPose)) {
+        if (!EntityArmorStand.bv.equals(this.leftLegPose)) {
             nbttagcompound.set("LeftLeg", this.leftLegPose.a());
         }
 
-        if (!EntityArmorStand.bv.equals(this.rightLegPose)) {
+        if (!EntityArmorStand.bw.equals(this.rightLegPose)) {
             nbttagcompound.set("RightLeg", this.rightLegPose.a());
         }
 
@@ -280,8 +291,8 @@
 
     protected void C(Entity entity) {}
 
-    protected void co() {
-        List list = this.world.getEntities(this, this.getBoundingBox(), EntityArmorStand.bw);
+    protected void cs() {
+        List list = this.world.getEntities(this, this.getBoundingBox(), EntityArmorStand.bx);
 
         for (int i = 0; i < list.size(); ++i) {
             Entity entity = (Entity) list.get(i);
@@ -353,14 +364,14 @@
     }
 
     private boolean b(EnumItemSlot enumitemslot) {
-        return (this.bA & 1 << enumitemslot.c()) != 0;
+        return (this.bB & 1 << enumitemslot.c()) != 0;
     }
 
     private void a(EntityHuman entityhuman, EnumItemSlot enumitemslot, @Nullable ItemStack itemstack, EnumHand enumhand) {
         ItemStack itemstack1 = this.getEquipment(enumitemslot);
 
-        if (itemstack1 == null || (this.bA & 1 << enumitemslot.c() + 8) == 0) {
-            if (itemstack1 != null || (this.bA & 1 << enumitemslot.c() + 16) == 0) {
+        if (itemstack1 == null || (this.bB & 1 << enumitemslot.c() + 8) == 0) {
+            if (itemstack1 != null || (this.bB & 1 << enumitemslot.c() + 16) == 0) {
                 ItemStack itemstack2;
 
                 if (entityhuman.abilities.canInstantlyBuild && (itemstack1 == null || itemstack1.getItem() == Item.getItemOf(Blocks.AIR)) && itemstack != null) {
@@ -387,9 +398,9 @@
             if (DamageSource.OUT_OF_WORLD.equals(damagesource)) {
                 this.die();
                 return false;
-            } else if (!this.isInvulnerable(damagesource) && !this.bz && !this.isMarker()) {
+            } else if (!this.isInvulnerable(damagesource) && !this.bA && !this.isMarker()) {
                 if (damagesource.isExplosion()) {
-                    this.I();
+                    this.G();
                     this.die();
                     return false;
                 } else if (DamageSource.FIRE.equals(damagesource)) {
@@ -417,7 +428,7 @@
                         if (damagesource.getEntity() instanceof EntityHuman && !((EntityHuman) damagesource.getEntity()).abilities.mayBuild) {
                             return false;
                         } else if (damagesource.u()) {
-                            this.E();
+                            this.D();
                             this.die();
                             return false;
                         } else {
@@ -427,8 +438,8 @@
                                 this.world.broadcastEntityEffect(this, (byte) 32);
                                 this.h = i;
                             } else {
-                                this.G();
                                 this.E();
+                                this.D();
                                 this.die();
                             }
 
@@ -444,7 +455,7 @@
         }
     }
 
-    private void E() {
+    private void D() {
         if (this.world instanceof WorldServer) {
             ((WorldServer) this.world).a(EnumParticle.BLOCK_DUST, this.locX, this.locY + (double) this.length / 1.5D, this.locZ, 10, (double) (this.width / 4.0F), (double) (this.length / 4.0F), (double) (this.width / 4.0F), 0.05D, new int[] { Block.getCombinedId(Blocks.PLANKS.getBlockData())});
         }
@@ -456,7 +467,7 @@
 
         f1 -= f;
         if (f1 <= 0.5F) {
-            this.I();
+            this.G();
             this.die();
         } else {
             this.setHealth(f1);
@@ -464,26 +475,16 @@
 
     }
 
-    private void G() {
+    private void E() {
         Block.a(this.world, new BlockPosition(this), new ItemStack(Items.ARMOR_STAND));
-        this.I();
+        this.G();
     }
 
-    private void I() {
-        this.world.a((EntityHuman) null, this.locX, this.locY, this.locZ, SoundEffects.j, this.bA(), 1.0F, 1.0F);
+    private void G() {
+        this.world.a((EntityHuman) null, this.locX, this.locY, this.locZ, SoundEffects.j, this.bC(), 1.0F, 1.0F);
 
         int i;
 
-        for (i = 0; i < this.bx.length; ++i) {
-            if (this.bx[i] != null && this.bx[i].count > 0) {
-                if (this.bx[i] != null) {
-                    Block.a(this.world, (new BlockPosition(this)).up(), this.bx[i]);
-                }
-
-                this.bx[i] = null;
-            }
-        }
-
         for (i = 0; i < this.by.length; ++i) {
             if (this.by[i] != null && this.by[i].count > 0) {
                 if (this.by[i] != null) {
@@ -494,11 +495,21 @@
             }
         }
 
+        for (i = 0; i < this.bz.length; ++i) {
+            if (this.bz[i] != null && this.bz[i].count > 0) {
+                if (this.bz[i] != null) {
+                    Block.a(this.world, (new BlockPosition(this)).up(), this.bz[i]);
+                }
+
+                this.bz[i] = null;
+            }
+        }
+
     }
 
     protected float h(float f, float f1) {
-        this.aO = this.lastYaw;
-        this.aN = this.yaw;
+        this.aP = this.lastYaw;
+        this.aO = this.yaw;
         return 0.0F;
     }
 
@@ -511,7 +522,7 @@
     }
 
     public void g(float f, float f1) {
-        if (!this.hasGravity()) {
+        if (!this.isNoGravity()) {
             super.g(f, f1);
         }
     }
@@ -556,11 +567,11 @@
 
         boolean flag = this.isMarker();
 
-        if (!this.bB && flag) {
+        if (!this.bC && flag) {
             this.a(false);
             this.i = false;
         } else {
-            if (!this.bB || flag) {
+            if (!this.bC || flag) {
                 return;
             }
 
@@ -568,7 +579,7 @@
             this.i = true;
         }
 
-        this.bB = flag;
+        this.bC = flag;
     }
 
     private void a(boolean flag) {
@@ -586,11 +597,11 @@
     }
 
     protected void F() {
-        this.setInvisible(this.bz);
+        this.setInvisible(this.bA);
     }
 
     public void setInvisible(boolean flag) {
-        this.bz = flag;
+        this.bA = flag;
         super.setInvisible(flag);
     }
 
@@ -602,7 +613,7 @@
         this.die();
     }
 
-    public boolean br() {
+    public boolean bt() {
         return this.isInvisible();
     }
 
@@ -614,14 +625,6 @@
         return (((Byte) this.datawatcher.get(EntityArmorStand.a)).byteValue() & 1) != 0;
     }
 
-    public void setGravity(boolean flag) {
-        this.datawatcher.set(EntityArmorStand.a, Byte.valueOf(this.a(((Byte) this.datawatcher.get(EntityArmorStand.a)).byteValue(), 2, flag)));
-    }
-
-    public boolean hasGravity() {
-        return (((Byte) this.datawatcher.get(EntityArmorStand.a)).byteValue() & 2) != 0;
-    }
-
     public void setArms(boolean flag) {
         this.datawatcher.set(EntityArmorStand.a, Byte.valueOf(this.a(((Byte) this.datawatcher.get(EntityArmorStand.a)).byteValue(), 4, flag)));
     }
@@ -686,11 +689,11 @@
         this.datawatcher.set(EntityArmorStand.g, vector3f);
     }
 
-    public Vector3f w() {
+    public Vector3f u() {
         return this.headPose;
     }
 
-    public Vector3f x() {
+    public Vector3f w() {
         return this.bodyPose;
     }
 
@@ -707,18 +710,18 @@
     }
 
     @Nullable
-    protected SoundEffect bS() {
+    protected SoundEffect bV() {
         return SoundEffects.l;
     }
 
     @Nullable
-    protected SoundEffect bT() {
+    protected SoundEffect bW() {
         return SoundEffects.j;
     }
 
     public void onLightningStrike(EntityLightning entitylightning) {}
 
-    public boolean cE() {
+    public boolean cI() {
         return false;
     }
 
