--- a/net/minecraft/server/EntityCreeper.java
+++ b/net/minecraft/server/EntityCreeper.java
@@ -7,11 +7,11 @@
     private static final DataWatcherObject<Integer> a = DataWatcher.a(EntityCreeper.class, DataWatcherRegistry.b);
     private static final DataWatcherObject<Boolean> b = DataWatcher.a(EntityCreeper.class, DataWatcherRegistry.h);
     private static final DataWatcherObject<Boolean> c = DataWatcher.a(EntityCreeper.class, DataWatcherRegistry.h);
-    private int bw;
+    private int bx;
     private int fuseTicks;
     private int maxFuseTicks = 30;
     private int explosionRadius = 3;
-    private int bA = 0;
+    private int bB;
 
     public EntityCreeper(World world) {
         super(world);
@@ -35,7 +35,7 @@
         this.getAttributeInstance(GenericAttributes.MOVEMENT_SPEED).setValue(0.25D);
     }
 
-    public int aW() {
+    public int aY() {
         return this.getGoalTarget() == null ? 3 : 3 + (int) (this.getHealth() - 1.0F);
     }
 
@@ -55,6 +55,10 @@
         this.datawatcher.register(EntityCreeper.c, Boolean.valueOf(false));
     }
 
+    public static void b(DataConverterManager dataconvertermanager) {
+        EntityInsentient.a(dataconvertermanager, "Creeper");
+    }
+
     public void b(NBTTagCompound nbttagcompound) {
         super.b(nbttagcompound);
         if (((Boolean) this.datawatcher.get(EntityCreeper.b)).booleanValue()) {
@@ -78,19 +82,19 @@
         }
 
         if (nbttagcompound.getBoolean("ignited")) {
-            this.dd();
+            this.dh();
         }
 
     }
 
     public void m() {
         if (this.isAlive()) {
-            this.bw = this.fuseTicks;
+            this.bx = this.fuseTicks;
             if (this.isIgnited()) {
                 this.a(1);
             }
 
-            int i = this.db();
+            int i = this.df();
 
             if (i > 0 && this.fuseTicks == 0) {
                 this.a(SoundEffects.at, 1.0F, 0.5F);
@@ -103,18 +107,18 @@
 
             if (this.fuseTicks >= this.maxFuseTicks) {
                 this.fuseTicks = this.maxFuseTicks;
-                this.dg();
+                this.dk();
             }
         }
 
         super.m();
     }
 
-    protected SoundEffect bS() {
+    protected SoundEffect bV() {
         return SoundEffects.as;
     }
 
-    protected SoundEffect bT() {
+    protected SoundEffect bW() {
         return SoundEffects.ar;
     }
 
@@ -148,7 +152,7 @@
         return LootTables.q;
     }
 
-    public int db() {
+    public int df() {
         return ((Integer) this.datawatcher.get(EntityCreeper.a)).intValue();
     }
 
@@ -163,10 +167,10 @@
 
     protected boolean a(EntityHuman entityhuman, EnumHand enumhand, @Nullable ItemStack itemstack) {
         if (itemstack != null && itemstack.getItem() == Items.FLINT_AND_STEEL) {
-            this.world.a(entityhuman, this.locX, this.locY, this.locZ, SoundEffects.bx, this.bA(), 1.0F, this.random.nextFloat() * 0.4F + 0.8F);
+            this.world.a(entityhuman, this.locX, this.locY, this.locZ, SoundEffects.by, this.bC(), 1.0F, this.random.nextFloat() * 0.4F + 0.8F);
             entityhuman.a(enumhand);
             if (!this.world.isClientSide) {
-                this.dd();
+                this.dh();
                 itemstack.damage(1, entityhuman);
                 return true;
             }
@@ -175,12 +179,12 @@
         return super.a(entityhuman, enumhand, itemstack);
     }
 
-    private void dg() {
+    private void dk() {
         if (!this.world.isClientSide) {
             boolean flag = this.world.getGameRules().getBoolean("mobGriefing");
             float f = this.isPowered() ? 2.0F : 1.0F;
 
-            this.aU = true;
+            this.aV = true;
             this.world.explode(this, this.locX, this.locY, this.locZ, (float) this.explosionRadius * f, flag);
             this.die();
         }
@@ -191,15 +195,15 @@
         return ((Boolean) this.datawatcher.get(EntityCreeper.c)).booleanValue();
     }
 
-    public void dd() {
+    public void dh() {
         this.datawatcher.set(EntityCreeper.c, Boolean.valueOf(true));
     }
 
     public boolean canCauseHeadDrop() {
-        return this.bA < 1 && this.world.getGameRules().getBoolean("doMobLoot");
+        return this.bB < 1 && this.world.getGameRules().getBoolean("doMobLoot");
     }
 
     public void setCausedHeadDrop() {
-        ++this.bA;
+        ++this.bB;
     }
 }
