--- a/net/minecraft/server/NavigationAbstract.java
+++ b/net/minecraft/server/NavigationAbstract.java
@@ -4,37 +4,34 @@
 
 public abstract class NavigationAbstract {
 
-    private static int f = 20;
     protected EntityInsentient a;
     protected World b;
     @Nullable
     protected PathEntity c;
     protected double d;
-    private final AttributeInstance g;
+    private final AttributeInstance f;
+    private int g;
     private int h;
-    private int i;
+    private Vec3D i;
     private Vec3D j;
-    private Vec3D k;
+    private long k;
     private long l;
-    private long m;
-    private double n;
-    private float o;
-    private boolean p;
-    private long q;
+    private double m;
+    private float n;
+    private boolean o;
+    private long p;
     protected PathfinderAbstract e;
-    private BlockPosition r;
-    private final Pathfinder s;
+    private BlockPosition q;
+    private final Pathfinder r;
 
     public NavigationAbstract(EntityInsentient entityinsentient, World world) {
+        this.i = Vec3D.a;
         this.j = Vec3D.a;
-        this.k = Vec3D.a;
-        this.l = 0L;
-        this.m = 0L;
-        this.o = 0.5F;
+        this.n = 0.5F;
         this.a = entityinsentient;
         this.b = world;
-        this.g = entityinsentient.getAttributeInstance(GenericAttributes.FOLLOW_RANGE);
-        this.s = this.a();
+        this.f = entityinsentient.getAttributeInstance(GenericAttributes.FOLLOW_RANGE);
+        this.r = this.a();
     }
 
     protected abstract Pathfinder a();
@@ -44,47 +41,47 @@
     }
 
     public float h() {
-        return (float) this.g.getValue();
+        return (float) this.f.getValue();
     }
 
     public boolean i() {
-        return this.p;
+        return this.o;
     }
 
     public void j() {
-        if (this.b.getTime() - this.q > (long) NavigationAbstract.f) {
-            if (this.r != null) {
+        if (this.b.getTime() - this.p > 20L) {
+            if (this.q != null) {
                 this.c = null;
-                this.c = this.a(this.r);
-                this.q = this.b.getTime();
-                this.p = false;
+                this.c = this.a(this.q);
+                this.p = this.b.getTime();
+                this.o = false;
             }
         } else {
-            this.p = true;
+            this.o = true;
         }
 
     }
 
     @Nullable
     public final PathEntity a(double d0, double d1, double d2) {
-        return this.a(new BlockPosition(MathHelper.floor(d0), (int) d1, MathHelper.floor(d2)));
+        return this.a(new BlockPosition(d0, d1, d2));
     }
 
     @Nullable
     public PathEntity a(BlockPosition blockposition) {
         if (!this.b()) {
             return null;
-        } else if (this.c != null && !this.c.b() && blockposition.equals(this.r)) {
+        } else if (this.c != null && !this.c.b() && blockposition.equals(this.q)) {
             return this.c;
         } else {
-            this.r = blockposition;
+            this.q = blockposition;
             float f = this.h();
 
             this.b.methodProfiler.a("pathfind");
             BlockPosition blockposition1 = new BlockPosition(this.a);
             int i = (int) (f + 8.0F);
             ChunkCache chunkcache = new ChunkCache(this.b, blockposition1.a(-i, -i, -i), blockposition1.a(i, i, i), 0);
-            PathEntity pathentity = this.s.a(chunkcache, this.a, this.r, f);
+            PathEntity pathentity = this.r.a(chunkcache, this.a, this.q, f);
 
             this.b.methodProfiler.b();
             return pathentity;
@@ -98,17 +95,17 @@
         } else {
             BlockPosition blockposition = new BlockPosition(entity);
 
-            if (this.c != null && !this.c.b() && blockposition.equals(this.r)) {
+            if (this.c != null && !this.c.b() && blockposition.equals(this.q)) {
                 return this.c;
             } else {
-                this.r = blockposition;
+                this.q = blockposition;
                 float f = this.h();
 
                 this.b.methodProfiler.a("pathfind");
                 BlockPosition blockposition1 = (new BlockPosition(this.a)).up();
                 int i = (int) (f + 16.0F);
                 ChunkCache chunkcache = new ChunkCache(this.b, blockposition1.a(-i, -i, -i), blockposition1.a(i, i, i), 0);
-                PathEntity pathentity = this.s.a(chunkcache, this.a, entity, f);
+                PathEntity pathentity = this.r.a(chunkcache, this.a, entity, f);
 
                 this.b.methodProfiler.b();
                 return pathentity;
@@ -117,15 +114,13 @@
     }
 
     public boolean a(double d0, double d1, double d2, double d3) {
-        PathEntity pathentity = this.a((double) MathHelper.floor(d0), (double) ((int) d1), (double) MathHelper.floor(d2));
-
-        return this.a(pathentity, d3);
+        return this.a(this.a(d0, d1, d2), d3);
     }
 
     public boolean a(Entity entity, double d0) {
         PathEntity pathentity = this.a(entity);
 
-        return pathentity != null ? this.a(pathentity, d0) : false;
+        return pathentity != null && this.a(pathentity, d0);
     }
 
     public boolean a(@Nullable PathEntity pathentity, double d0) {
@@ -144,8 +139,8 @@
                 this.d = d0;
                 Vec3D vec3d = this.c();
 
-                this.i = this.h;
-                this.j = vec3d;
+                this.h = this.g;
+                this.i = vec3d;
                 return true;
             }
         }
@@ -157,8 +152,8 @@
     }
 
     public void l() {
-        ++this.h;
-        if (this.p) {
+        ++this.g;
+        if (this.o) {
             this.j();
         }
 
@@ -200,10 +195,10 @@
             }
         }
 
-        this.o = this.a.width > 0.75F ? this.a.width / 2.0F : 0.75F - this.a.width / 2.0F;
+        this.n = this.a.width > 0.75F ? this.a.width / 2.0F : 0.75F - this.a.width / 2.0F;
         Vec3D vec3d1 = this.c.f();
 
-        if (MathHelper.e((float) (this.a.locX - (vec3d1.x + 0.5D))) < this.o && MathHelper.e((float) (this.a.locZ - (vec3d1.z + 0.5D))) < this.o) {
+        if (MathHelper.e((float) (this.a.locX - (vec3d1.x + 0.5D))) < this.n && MathHelper.e((float) (this.a.locZ - (vec3d1.z + 0.5D))) < this.n && Math.abs(this.a.locY - vec3d1.y) < 1.0D) {
             this.c.c(this.c.e() + 1);
         }
 
@@ -222,35 +217,35 @@
     }
 
     protected void a(Vec3D vec3d) {
-        if (this.h - this.i > 100) {
-            if (vec3d.distanceSquared(this.j) < 2.25D) {
+        if (this.g - this.h > 100) {
+            if (vec3d.distanceSquared(this.i) < 2.25D) {
                 this.o();
             }
 
-            this.i = this.h;
-            this.j = vec3d;
+            this.h = this.g;
+            this.i = vec3d;
         }
 
         if (this.c != null && !this.c.b()) {
             Vec3D vec3d1 = this.c.f();
 
-            if (!vec3d1.equals(this.k)) {
-                this.k = vec3d1;
-                double d0 = vec3d.f(this.k);
-
-                this.n = this.a.cl() > 0.0F ? d0 / (double) this.a.cl() * 1000.0D : 0.0D;
+            if (vec3d1.equals(this.j)) {
+                this.k += System.currentTimeMillis() - this.l;
             } else {
-                this.l += System.currentTimeMillis() - this.m;
+                this.j = vec3d1;
+                double d0 = vec3d.f(this.j);
+
+                this.m = this.a.cp() > 0.0F ? d0 / (double) this.a.cp() * 1000.0D : 0.0D;
             }
 
-            if (this.n > 0.0D && (double) this.l > this.n * 3.0D) {
-                this.k = Vec3D.a;
-                this.l = 0L;
-                this.n = 0.0D;
+            if (this.m > 0.0D && (double) this.k > this.m * 3.0D) {
+                this.j = Vec3D.a;
+                this.k = 0L;
+                this.m = 0.0D;
                 this.o();
             }
 
-            this.m = System.currentTimeMillis();
+            this.l = System.currentTimeMillis();
         }
 
     }
@@ -268,7 +263,7 @@
     protected abstract boolean b();
 
     protected boolean p() {
-        return this.a.isInWater() || this.a.an();
+        return this.a.isInWater() || this.a.ao();
     }
 
     protected void d() {}
