--- a/net/minecraft/server/WorldGenTaiga2.java
+++ b/net/minecraft/server/WorldGenTaiga2.java
@@ -23,20 +23,18 @@
             int j1;
 
             for (int k1 = blockposition.getY(); k1 <= blockposition.getY() + 1 + i && flag; ++k1) {
-                boolean flag1 = true;
-
                 if (k1 - blockposition.getY() < j) {
-                    j1 = 0;
+                    i1 = 0;
                 } else {
-                    j1 = l;
+                    i1 = l;
                 }
 
                 BlockPosition.MutableBlockPosition blockposition_mutableblockposition = new BlockPosition.MutableBlockPosition();
 
-                for (int l1 = blockposition.getX() - j1; l1 <= blockposition.getX() + j1 && flag; ++l1) {
-                    for (i1 = blockposition.getZ() - j1; i1 <= blockposition.getZ() + j1 && flag; ++i1) {
+                for (int l1 = blockposition.getX() - i1; l1 <= blockposition.getX() + i1 && flag; ++l1) {
+                    for (j1 = blockposition.getZ() - i1; j1 <= blockposition.getZ() + i1 && flag; ++j1) {
                         if (k1 >= 0 && k1 < 256) {
-                            Material material = world.getType(blockposition_mutableblockposition.c(l1, k1, i1)).getMaterial();
+                            Material material = world.getType(blockposition_mutableblockposition.c(l1, k1, j1)).getMaterial();
 
                             if (material != Material.AIR && material != Material.LEAVES) {
                                 flag = false;
@@ -55,22 +53,22 @@
 
                 if ((block == Blocks.GRASS || block == Blocks.DIRT || block == Blocks.FARMLAND) && blockposition.getY() < 256 - i - 1) {
                     this.a(world, blockposition.down());
-                    j1 = random.nextInt(2);
+                    i1 = random.nextInt(2);
                     int i2 = 1;
                     byte b0 = 0;
 
                     int j2;
 
-                    for (i1 = 0; i1 <= k; ++i1) {
-                        j2 = blockposition.getY() + i - i1;
+                    for (j1 = 0; j1 <= k; ++j1) {
+                        j2 = blockposition.getY() + i - j1;
 
-                        for (int k2 = blockposition.getX() - j1; k2 <= blockposition.getX() + j1; ++k2) {
+                        for (int k2 = blockposition.getX() - i1; k2 <= blockposition.getX() + i1; ++k2) {
                             int l2 = k2 - blockposition.getX();
 
-                            for (int i3 = blockposition.getZ() - j1; i3 <= blockposition.getZ() + j1; ++i3) {
+                            for (int i3 = blockposition.getZ() - i1; i3 <= blockposition.getZ() + i1; ++i3) {
                                 int j3 = i3 - blockposition.getZ();
 
-                                if (Math.abs(l2) != j1 || Math.abs(j3) != j1 || j1 <= 0) {
+                                if (Math.abs(l2) != i1 || Math.abs(j3) != i1 || i1 <= 0) {
                                     BlockPosition blockposition1 = new BlockPosition(k2, j2, i3);
 
                                     if (!world.getType(blockposition1).b()) {
@@ -80,21 +78,21 @@
                             }
                         }
 
-                        if (j1 >= i2) {
-                            j1 = b0;
+                        if (i1 >= i2) {
+                            i1 = b0;
                             b0 = 1;
                             ++i2;
                             if (i2 > l) {
                                 i2 = l;
                             }
                         } else {
-                            ++j1;
+                            ++i1;
                         }
                     }
 
-                    i1 = random.nextInt(3);
+                    j1 = random.nextInt(3);
 
-                    for (j2 = 0; j2 < i - i1; ++j2) {
+                    for (j2 = 0; j2 < i - j1; ++j2) {
                         Material material1 = world.getType(blockposition.up(j2)).getMaterial();
 
                         if (material1 == Material.AIR || material1 == Material.LEAVES) {
