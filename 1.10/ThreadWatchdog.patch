--- a/net/minecraft/server/ThreadWatchdog.java
+++ b/net/minecraft/server/ThreadWatchdog.java
@@ -29,7 +29,7 @@
             long k = j - i;
 
             if (k > this.c) {
-                ThreadWatchdog.a.fatal("A single server tick took " + String.format("%.2f", new Object[] { Float.valueOf((float) k / 1000.0F)}) + " seconds (should be max " + String.format("%.2f", new Object[] { Float.valueOf(0.05F)}) + ")");
+                ThreadWatchdog.a.fatal("A single server tick took {} seconds (should be max {})", new Object[] { String.format("%.2f", new Object[] { Float.valueOf((float) k / 1000.0F)}), String.format("%.2f", new Object[] { Float.valueOf(0.05F)})});
                 ThreadWatchdog.a.fatal("Considering it to be crashed, server will forcibly shutdown.");
                 ThreadMXBean threadmxbean = ManagementFactory.getThreadMXBean();
                 ThreadInfo[] athreadinfo = threadmxbean.dumpAllThreads(true, true);
@@ -58,7 +58,7 @@
                 File file = new File(new File(this.b.A(), "crash-reports"), "crash-" + (new SimpleDateFormat("yyyy-MM-dd_HH.mm.ss")).format(new Date()) + "-server.txt");
 
                 if (crashreport.a(file)) {
-                    ThreadWatchdog.a.error("This crash report has been saved to: " + file.getAbsolutePath());
+                    ThreadWatchdog.a.error("This crash report has been saved to: {}", new Object[] { file.getAbsolutePath()});
                 } else {
                     ThreadWatchdog.a.error("We were unable to save this crash report to disk.");
                 }
