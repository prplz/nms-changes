--- a/net/minecraft/server/EntityWolf.java
+++ b/net/minecraft/server/EntityWolf.java
@@ -7,14 +7,14 @@
 public class EntityWolf extends EntityTameableAnimal {
 
     private static final DataWatcherObject<Float> DATA_HEALTH = DataWatcher.a(EntityWolf.class, DataWatcherRegistry.c);
-    private static final DataWatcherObject<Boolean> bB = DataWatcher.a(EntityWolf.class, DataWatcherRegistry.h);
-    private static final DataWatcherObject<Integer> bC = DataWatcher.a(EntityWolf.class, DataWatcherRegistry.b);
-    private float bD;
+    private static final DataWatcherObject<Boolean> bC = DataWatcher.a(EntityWolf.class, DataWatcherRegistry.h);
+    private static final DataWatcherObject<Integer> bD = DataWatcher.a(EntityWolf.class, DataWatcherRegistry.b);
     private float bE;
-    private boolean bF;
+    private float bF;
     private boolean bG;
-    private float bH;
+    private boolean bH;
     private float bI;
+    private float bJ;
 
     public EntityWolf(World world) {
         super(world);
@@ -23,8 +23,9 @@
     }
 
     protected void r() {
+        this.goalSit = new PathfinderGoalSit(this);
         this.goalSelector.a(1, new PathfinderGoalFloat(this));
-        this.goalSelector.a(2, this.goalSit = new PathfinderGoalSit(this));
+        this.goalSelector.a(2, this.goalSit);
         this.goalSelector.a(3, new PathfinderGoalLeapAtTarget(this, 0.4F));
         this.goalSelector.a(4, new PathfinderGoalMeleeAttack(this, 1.0D, true));
         this.goalSelector.a(5, new PathfinderGoalFollowOwner(this, 1.0D, 10.0F, 2.0F));
@@ -77,12 +78,16 @@
     protected void i() {
         super.i();
         this.datawatcher.register(EntityWolf.DATA_HEALTH, Float.valueOf(this.getHealth()));
-        this.datawatcher.register(EntityWolf.bB, Boolean.valueOf(false));
-        this.datawatcher.register(EntityWolf.bC, Integer.valueOf(EnumColor.RED.getInvColorIndex()));
+        this.datawatcher.register(EntityWolf.bC, Boolean.valueOf(false));
+        this.datawatcher.register(EntityWolf.bD, Integer.valueOf(EnumColor.RED.getInvColorIndex()));
     }
 
     protected void a(BlockPosition blockposition, Block block) {
-        this.a(SoundEffects.gS, 0.15F, 1.0F);
+        this.a(SoundEffects.hl, 0.15F, 1.0F);
+    }
+
+    public static void b(DataConverterManager dataconvertermanager) {
+        EntityInsentient.a(dataconvertermanager, "Wolf");
     }
 
     public void b(NBTTagCompound nbttagcompound) {
@@ -101,32 +106,32 @@
     }
 
     protected SoundEffect G() {
-        return this.isAngry() ? SoundEffects.gN : (this.random.nextInt(3) == 0 ? (this.isTamed() && ((Float) this.datawatcher.get(EntityWolf.DATA_HEALTH)).floatValue() < 10.0F ? SoundEffects.gT : SoundEffects.gQ) : SoundEffects.gL);
+        return this.isAngry() ? SoundEffects.hg : (this.random.nextInt(3) == 0 ? (this.isTamed() && ((Float) this.datawatcher.get(EntityWolf.DATA_HEALTH)).floatValue() < 10.0F ? SoundEffects.hm : SoundEffects.hj) : SoundEffects.he);
     }
 
-    protected SoundEffect bS() {
-        return SoundEffects.gP;
+    protected SoundEffect bV() {
+        return SoundEffects.hi;
     }
 
-    protected SoundEffect bT() {
-        return SoundEffects.gM;
+    protected SoundEffect bW() {
+        return SoundEffects.hf;
     }
 
-    protected float ce() {
+    protected float ch() {
         return 0.4F;
     }
 
     @Nullable
     protected MinecraftKey J() {
-        return LootTables.J;
+        return LootTables.K;
     }
 
     public void n() {
         super.n();
-        if (!this.world.isClientSide && this.bF && !this.bG && !this.cU() && this.onGround) {
-            this.bG = true;
-            this.bH = 0.0F;
+        if (!this.world.isClientSide && this.bG && !this.bH && !this.cY() && this.onGround) {
+            this.bH = true;
             this.bI = 0.0F;
+            this.bJ = 0.0F;
             this.world.broadcastEntityEffect(this, (byte) 8);
         }
 
@@ -138,35 +143,35 @@
 
     public void m() {
         super.m();
-        this.bE = this.bD;
-        if (this.dm()) {
-            this.bD += (1.0F - this.bD) * 0.4F;
+        this.bF = this.bE;
+        if (this.dq()) {
+            this.bE += (1.0F - this.bE) * 0.4F;
         } else {
-            this.bD += (0.0F - this.bD) * 0.4F;
+            this.bE += (0.0F - this.bE) * 0.4F;
         }
 
-        if (this.ah()) {
-            this.bF = true;
-            this.bG = false;
-            this.bH = 0.0F;
+        if (this.ai()) {
+            this.bG = true;
+            this.bH = false;
             this.bI = 0.0F;
-        } else if ((this.bF || this.bG) && this.bG) {
-            if (this.bH == 0.0F) {
-                this.a(SoundEffects.gR, this.ce(), (this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 1.0F);
+            this.bJ = 0.0F;
+        } else if ((this.bG || this.bH) && this.bH) {
+            if (this.bI == 0.0F) {
+                this.a(SoundEffects.hk, this.ch(), (this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 1.0F);
             }
 
-            this.bI = this.bH;
-            this.bH += 0.05F;
-            if (this.bI >= 2.0F) {
-                this.bF = false;
+            this.bJ = this.bI;
+            this.bI += 0.05F;
+            if (this.bJ >= 2.0F) {
                 this.bG = false;
+                this.bH = false;
+                this.bJ = 0.0F;
                 this.bI = 0.0F;
-                this.bH = 0.0F;
             }
 
-            if (this.bH > 0.4F) {
+            if (this.bI > 0.4F) {
                 float f = (float) this.getBoundingBox().b;
-                int i = (int) (MathHelper.sin((this.bH - 0.4F) * 3.1415927F) * 7.0F);
+                int i = (int) (MathHelper.sin((this.bI - 0.4F) * 3.1415927F) * 7.0F);
 
                 for (int j = 0; j < i; ++j) {
                     float f1 = (this.random.nextFloat() * 2.0F - 1.0F) * this.width * 0.5F;
@@ -256,7 +261,7 @@
 
             if (this.d((EntityLiving) entityhuman) && !this.world.isClientSide && !this.e(itemstack)) {
                 this.goalSit.setSitting(!this.isSitting());
-                this.bd = false;
+                this.be = false;
                 this.navigation.o();
                 this.setGoalTarget((EntityLiving) null);
             }
@@ -273,10 +278,10 @@
                     this.goalSit.setSitting(true);
                     this.setHealth(20.0F);
                     this.setOwnerUUID(entityhuman.getUniqueID());
-                    this.o(true);
+                    this.p(true);
                     this.world.broadcastEntityEffect(this, (byte) 7);
                 } else {
-                    this.o(false);
+                    this.p(false);
                     this.world.broadcastEntityEffect(this, (byte) 6);
                 }
             }
@@ -291,31 +296,31 @@
         return itemstack == null ? false : (!(itemstack.getItem() instanceof ItemFood) ? false : ((ItemFood) itemstack.getItem()).g());
     }
 
-    public int cK() {
+    public int cO() {
         return 8;
     }
 
     public boolean isAngry() {
-        return (((Byte) this.datawatcher.get(EntityWolf.bw)).byteValue() & 2) != 0;
+        return (((Byte) this.datawatcher.get(EntityWolf.bx)).byteValue() & 2) != 0;
     }
 
     public void setAngry(boolean flag) {
-        byte b0 = ((Byte) this.datawatcher.get(EntityWolf.bw)).byteValue();
+        byte b0 = ((Byte) this.datawatcher.get(EntityWolf.bx)).byteValue();
 
         if (flag) {
-            this.datawatcher.set(EntityWolf.bw, Byte.valueOf((byte) (b0 | 2)));
+            this.datawatcher.set(EntityWolf.bx, Byte.valueOf((byte) (b0 | 2)));
         } else {
-            this.datawatcher.set(EntityWolf.bw, Byte.valueOf((byte) (b0 & -3)));
+            this.datawatcher.set(EntityWolf.bx, Byte.valueOf((byte) (b0 & -3)));
         }
 
     }
 
     public EnumColor getCollarColor() {
-        return EnumColor.fromInvColorIndex(((Integer) this.datawatcher.get(EntityWolf.bC)).intValue() & 15);
+        return EnumColor.fromInvColorIndex(((Integer) this.datawatcher.get(EntityWolf.bD)).intValue() & 15);
     }
 
     public void setCollarColor(EnumColor enumcolor) {
-        this.datawatcher.set(EntityWolf.bC, Integer.valueOf(enumcolor.getInvColorIndex()));
+        this.datawatcher.set(EntityWolf.bD, Integer.valueOf(enumcolor.getInvColorIndex()));
     }
 
     public EntityWolf b(EntityAgeable entityageable) {
@@ -330,8 +335,8 @@
         return entitywolf;
     }
 
-    public void s(boolean flag) {
-        this.datawatcher.set(EntityWolf.bB, Boolean.valueOf(flag));
+    public void t(boolean flag) {
+        this.datawatcher.set(EntityWolf.bC, Boolean.valueOf(flag));
     }
 
     public boolean mate(EntityAnimal entityanimal) {
@@ -348,12 +353,8 @@
         }
     }
 
-    public boolean dm() {
-        return ((Boolean) this.datawatcher.get(EntityWolf.bB)).booleanValue();
-    }
-
-    protected boolean isTypeNotPersistent() {
-        return !this.isTamed() && this.ticksLived > 2400;
+    public boolean dq() {
+        return ((Boolean) this.datawatcher.get(EntityWolf.bC)).booleanValue();
     }
 
     public boolean a(EntityLiving entityliving, EntityLiving entityliving1) {
