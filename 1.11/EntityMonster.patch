--- a/net/minecraft/server/EntityMonster.java
+++ b/net/minecraft/server/EntityMonster.java
@@ -7,16 +7,12 @@
         this.b_ = 5;
     }
 
-    public static void c(DataConverterManager dataconvertermanager) {
-        EntityInsentient.a(dataconvertermanager, "Monster");
-    }
-
     public SoundCategory bC() {
         return SoundCategory.HOSTILE;
     }
 
     public void n() {
-        this.cc();
+        this.cd();
         float f = this.e(1.0F);
 
         if (f > 0.5F) {
@@ -26,8 +22,8 @@
         super.n();
     }
 
-    public void m() {
-        super.m();
+    public void A_() {
+        super.A_();
         if (!this.world.isClientSide && this.world.getDifficulty() == EnumDifficulty.PEACEFUL) {
             this.die();
         }
@@ -35,27 +31,27 @@
     }
 
     protected SoundEffect aa() {
-        return SoundEffects.cH;
+        return SoundEffects.cR;
     }
 
     protected SoundEffect ab() {
-        return SoundEffects.cG;
+        return SoundEffects.cQ;
     }
 
     public boolean damageEntity(DamageSource damagesource, float f) {
         return this.isInvulnerable(damagesource) ? false : super.damageEntity(damagesource, f);
     }
 
-    protected SoundEffect bV() {
-        return SoundEffects.cE;
+    protected SoundEffect bW() {
+        return SoundEffects.cO;
     }
 
-    protected SoundEffect bW() {
-        return SoundEffects.cD;
+    protected SoundEffect bX() {
+        return SoundEffects.cN;
     }
 
     protected SoundEffect e(int i) {
-        return i > 4 ? SoundEffects.cC : SoundEffects.cF;
+        return i > 4 ? SoundEffects.cM : SoundEffects.cP;
     }
 
     public boolean B(Entity entity) {
@@ -85,13 +81,13 @@
             if (entity instanceof EntityHuman) {
                 EntityHuman entityhuman = (EntityHuman) entity;
                 ItemStack itemstack = this.getItemInMainHand();
-                ItemStack itemstack1 = entityhuman.cx() ? entityhuman.cA() : null;
+                ItemStack itemstack1 = entityhuman.isHandRaised() ? entityhuman.cB() : ItemStack.a;
 
-                if (itemstack != null && itemstack1 != null && itemstack.getItem() instanceof ItemAxe && itemstack1.getItem() == Items.SHIELD) {
+                if (!itemstack.isEmpty() && !itemstack1.isEmpty() && itemstack.getItem() instanceof ItemAxe && itemstack1.getItem() == Items.SHIELD) {
                     float f1 = 0.25F + (float) EnchantmentManager.getDigSpeedEnchantmentLevel(this) * 0.05F;
 
                     if (this.random.nextFloat() < f1) {
-                        entityhuman.df().a(Items.SHIELD, 100);
+                        entityhuman.di().a(Items.SHIELD, 100);
                         this.world.broadcastEntityEffect(entityhuman, (byte) 30);
                     }
                 }
@@ -107,10 +103,10 @@
         return 0.5F - this.world.n(blockposition);
     }
 
-    protected boolean s_() {
+    protected boolean r_() {
         BlockPosition blockposition = new BlockPosition(this.locX, this.getBoundingBox().b, this.locZ);
 
-        if (this.world.b(EnumSkyBlock.SKY, blockposition) > this.random.nextInt(32)) {
+        if (this.world.getBrightness(EnumSkyBlock.SKY, blockposition) > this.random.nextInt(32)) {
             return false;
         } else {
             int i = this.world.getLightLevel(blockposition);
@@ -127,8 +123,8 @@
         }
     }
 
-    public boolean cK() {
-        return this.world.getDifficulty() != EnumDifficulty.PEACEFUL && this.s_() && super.cK();
+    public boolean cM() {
+        return this.world.getDifficulty() != EnumDifficulty.PEACEFUL && this.r_() && super.cM();
     }
 
     protected void initAttributes() {
