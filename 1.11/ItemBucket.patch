--- a/net/minecraft/server/ItemBucket.java
+++ b/net/minecraft/server/ItemBucket.java
@@ -12,8 +12,9 @@
         this.a(CreativeModeTab.f);
     }
 
-    public InteractionResultWrapper<ItemStack> a(ItemStack itemstack, World world, EntityHuman entityhuman, EnumHand enumhand) {
+    public InteractionResultWrapper<ItemStack> a(World world, EntityHuman entityhuman, EnumHand enumhand) {
         boolean flag = this.a == Blocks.AIR;
+        ItemStack itemstack = entityhuman.b(enumhand);
         MovingObjectPosition movingobjectposition = this.a(world, entityhuman, flag);
 
         if (movingobjectposition == null) {
@@ -35,10 +36,10 @@
                     if (material == Material.WATER && ((Integer) iblockdata.get(BlockFluids.LEVEL)).intValue() == 0) {
                         world.setTypeAndData(blockposition, Blocks.AIR.getBlockData(), 11);
                         entityhuman.b(StatisticList.b((Item) this));
-                        entityhuman.a(SoundEffects.N, 1.0F, 1.0F);
+                        entityhuman.a(SoundEffects.P, 1.0F, 1.0F);
                         return new InteractionResultWrapper(EnumInteractionResult.SUCCESS, this.a(itemstack, entityhuman, Items.WATER_BUCKET));
                     } else if (material == Material.LAVA && ((Integer) iblockdata.get(BlockFluids.LEVEL)).intValue() == 0) {
-                        entityhuman.a(SoundEffects.O, 1.0F, 1.0F);
+                        entityhuman.a(SoundEffects.Q, 1.0F, 1.0F);
                         world.setTypeAndData(blockposition, Blocks.AIR.getBlockData(), 11);
                         entityhuman.b(StatisticList.b((Item) this));
                         return new InteractionResultWrapper(EnumInteractionResult.SUCCESS, this.a(itemstack, entityhuman, Items.LAVA_BUCKET));
@@ -65,14 +66,17 @@
     private ItemStack a(ItemStack itemstack, EntityHuman entityhuman, Item item) {
         if (entityhuman.abilities.canInstantlyBuild) {
             return itemstack;
-        } else if (--itemstack.count <= 0) {
-            return new ItemStack(item);
         } else {
-            if (!entityhuman.inventory.pickup(new ItemStack(item))) {
-                entityhuman.drop(new ItemStack(item), false);
-            }
+            itemstack.subtract(1);
+            if (itemstack.isEmpty()) {
+                return new ItemStack(item);
+            } else {
+                if (!entityhuman.inventory.pickup(new ItemStack(item))) {
+                    entityhuman.drop(new ItemStack(item), false);
+                }
 
-            return itemstack;
+                return itemstack;
+            }
         }
     }
 
@@ -93,7 +97,7 @@
                     int j = blockposition.getY();
                     int k = blockposition.getZ();
 
-                    world.a(entityhuman, blockposition, SoundEffects.bx, SoundCategory.BLOCKS, 0.5F, 2.6F + (world.random.nextFloat() - world.random.nextFloat()) * 0.8F);
+                    world.a(entityhuman, blockposition, SoundEffects.bH, SoundCategory.BLOCKS, 0.5F, 2.6F + (world.random.nextFloat() - world.random.nextFloat()) * 0.8F);
 
                     for (int l = 0; l < 8; ++l) {
                         world.addParticle(EnumParticle.SMOKE_LARGE, (double) i + Math.random(), (double) j + Math.random(), (double) k + Math.random(), 0.0D, 0.0D, 0.0D, new int[0]);
@@ -103,7 +107,7 @@
                         world.setAir(blockposition, true);
                     }
 
-                    SoundEffect soundeffect = this.a == Blocks.FLOWING_LAVA ? SoundEffects.M : SoundEffects.L;
+                    SoundEffect soundeffect = this.a == Blocks.FLOWING_LAVA ? SoundEffects.O : SoundEffects.N;
 
                     world.a(entityhuman, blockposition, soundeffect, SoundCategory.BLOCKS, 1.0F, 1.0F);
                     world.setTypeAndData(blockposition, this.a.getBlockData(), 11);
