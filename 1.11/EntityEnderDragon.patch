--- a/net/minecraft/server/EntityEnderDragon.java
+++ b/net/minecraft/server/EntityEnderDragon.java
@@ -8,48 +8,48 @@
 
 public class EntityEnderDragon extends EntityInsentient implements IComplex, IMonster {
 
-    private static final Logger bJ = LogManager.getLogger();
+    private static final Logger bI = LogManager.getLogger();
     public static final DataWatcherObject<Integer> PHASE = DataWatcher.a(EntityEnderDragon.class, DataWatcherRegistry.b);
     public double[][] b = new double[64][3];
     public int c = -1;
     public EntityComplexPart[] children;
-    public EntityComplexPart bw = new EntityComplexPart(this, "head", 6.0F, 6.0F);
-    public EntityComplexPart bx = new EntityComplexPart(this, "neck", 6.0F, 6.0F);
-    public EntityComplexPart by = new EntityComplexPart(this, "body", 8.0F, 8.0F);
+    public EntityComplexPart bv = new EntityComplexPart(this, "head", 6.0F, 6.0F);
+    public EntityComplexPart bw = new EntityComplexPart(this, "neck", 6.0F, 6.0F);
+    public EntityComplexPart bx = new EntityComplexPart(this, "body", 8.0F, 8.0F);
+    public EntityComplexPart by = new EntityComplexPart(this, "tail", 4.0F, 4.0F);
     public EntityComplexPart bz = new EntityComplexPart(this, "tail", 4.0F, 4.0F);
     public EntityComplexPart bA = new EntityComplexPart(this, "tail", 4.0F, 4.0F);
-    public EntityComplexPart bB = new EntityComplexPart(this, "tail", 4.0F, 4.0F);
+    public EntityComplexPart bB = new EntityComplexPart(this, "wing", 4.0F, 4.0F);
     public EntityComplexPart bC = new EntityComplexPart(this, "wing", 4.0F, 4.0F);
-    public EntityComplexPart bD = new EntityComplexPart(this, "wing", 4.0F, 4.0F);
+    public float bD;
     public float bE;
-    public float bF;
-    public boolean bG;
-    public int bH;
+    public boolean bF;
+    public int bG;
     public EntityEnderCrystal currentEnderCrystal;
-    private final EnderDragonBattle bK;
-    private final DragonControllerManager bL;
-    private int bM = 200;
-    private int bN;
-    private final PathPoint[] bO = new PathPoint[24];
-    private final int[] bP = new int[24];
-    private final Path bQ = new Path();
+    private final EnderDragonBattle bJ;
+    private final DragonControllerManager bK;
+    private int bL = 200;
+    private int bM;
+    private final PathPoint[] bN = new PathPoint[24];
+    private final int[] bO = new int[24];
+    private final Path bP = new Path();
 
     public EntityEnderDragon(World world) {
         super(world);
-        this.children = new EntityComplexPart[] { this.bw, this.bx, this.by, this.bz, this.bA, this.bB, this.bC, this.bD};
+        this.children = new EntityComplexPart[] { this.bv, this.bw, this.bx, this.by, this.bz, this.bA, this.bB, this.bC};
         this.setHealth(this.getMaxHealth());
         this.setSize(16.0F, 8.0F);
         this.noclip = true;
         this.fireProof = true;
-        this.bM = 100;
-        this.ai = true;
+        this.bL = 100;
+        this.ah = true;
         if (!world.isClientSide && world.worldProvider instanceof WorldProviderTheEnd) {
-            this.bK = ((WorldProviderTheEnd) world.worldProvider).s();
+            this.bJ = ((WorldProviderTheEnd) world.worldProvider).t();
         } else {
-            this.bK = null;
+            this.bJ = null;
         }
 
-        this.bL = new DragonControllerManager(this);
+        this.bK = new DragonControllerManager(this);
     }
 
     protected void initAttributes() {
@@ -89,20 +89,20 @@
         if (this.world.isClientSide) {
             this.setHealth(this.getHealth());
             if (!this.isSilent()) {
-                f = MathHelper.cos(this.bF * 6.2831855F);
-                f1 = MathHelper.cos(this.bE * 6.2831855F);
+                f = MathHelper.cos(this.bE * 6.2831855F);
+                f1 = MathHelper.cos(this.bD * 6.2831855F);
                 if (f1 <= -0.3F && f >= -0.3F) {
-                    this.world.a(this.locX, this.locY, this.locZ, SoundEffects.aR, this.bC(), 5.0F, 0.8F + this.random.nextFloat() * 0.3F, false);
+                    this.world.a(this.locX, this.locY, this.locZ, SoundEffects.aU, this.bC(), 5.0F, 0.8F + this.random.nextFloat() * 0.3F, false);
                 }
 
-                if (!this.bL.a().a() && --this.bM < 0) {
-                    this.world.a(this.locX, this.locY, this.locZ, SoundEffects.aS, this.bC(), 2.5F, 0.8F + this.random.nextFloat() * 0.3F, false);
-                    this.bM = 200 + this.random.nextInt(200);
+                if (!this.bK.a().a() && --this.bL < 0) {
+                    this.world.a(this.locX, this.locY, this.locZ, SoundEffects.aV, this.bC(), 2.5F, 0.8F + this.random.nextFloat() * 0.3F, false);
+                    this.bL = 200 + this.random.nextInt(200);
                 }
             }
         }
 
-        this.bE = this.bF;
+        this.bD = this.bE;
         float f2;
 
         if (this.getHealth() <= 0.0F) {
@@ -111,20 +111,20 @@
             f2 = (this.random.nextFloat() - 0.5F) * 8.0F;
             this.world.addParticle(EnumParticle.EXPLOSION_LARGE, this.locX + (double) f, this.locY + 2.0D + (double) f1, this.locZ + (double) f2, 0.0D, 0.0D, 0.0D, new int[0]);
         } else {
-            this.da();
+            this.dc();
             f = 0.2F / (MathHelper.sqrt(this.motX * this.motX + this.motZ * this.motZ) * 10.0F + 1.0F);
             f *= (float) Math.pow(2.0D, this.motY);
-            if (this.bL.a().a()) {
-                this.bF += 0.1F;
-            } else if (this.bG) {
-                this.bF += f * 0.5F;
+            if (this.bK.a().a()) {
+                this.bE += 0.1F;
+            } else if (this.bF) {
+                this.bE += f * 0.5F;
             } else {
-                this.bF += f;
+                this.bE += f;
             }
 
             this.yaw = MathHelper.g(this.yaw);
             if (this.hasAI()) {
-                this.bF = 0.5F;
+                this.bE = 0.5F;
             } else {
                 if (this.c < 0) {
                     for (int i = 0; i < this.b.length; ++i) {
@@ -143,28 +143,29 @@
                 double d1;
                 double d2;
                 float f3;
+                float f4;
 
                 if (this.world.isClientSide) {
-                    if (this.bi > 0) {
-                        double d3 = this.locX + (this.bj - this.locX) / (double) this.bi;
+                    if (this.bh > 0) {
+                        double d3 = this.locX + (this.bi - this.locX) / (double) this.bh;
 
-                        d0 = this.locY + (this.bk - this.locY) / (double) this.bi;
-                        d1 = this.locZ + (this.bl - this.locZ) / (double) this.bi;
-                        d2 = MathHelper.g(this.bm - (double) this.yaw);
-                        this.yaw = (float) ((double) this.yaw + d2 / (double) this.bi);
-                        this.pitch = (float) ((double) this.pitch + (this.bn - (double) this.pitch) / (double) this.bi);
-                        --this.bi;
+                        d0 = this.locY + (this.bj - this.locY) / (double) this.bh;
+                        d1 = this.locZ + (this.bk - this.locZ) / (double) this.bh;
+                        d2 = MathHelper.g(this.bl - (double) this.yaw);
+                        this.yaw = (float) ((double) this.yaw + d2 / (double) this.bh);
+                        this.pitch = (float) ((double) this.pitch + (this.bm - (double) this.pitch) / (double) this.bh);
+                        --this.bh;
                         this.setPosition(d3, d0, d1);
                         this.setYawPitch(this.yaw, this.pitch);
                     }
 
-                    this.bL.a().b();
+                    this.bK.a().b();
                 } else {
-                    IDragonController idragoncontroller = this.bL.a();
+                    IDragonController idragoncontroller = this.bK.a();
 
                     idragoncontroller.c();
-                    if (this.bL.a() != idragoncontroller) {
-                        idragoncontroller = this.bL.a();
+                    if (this.bK.a() != idragoncontroller) {
+                        idragoncontroller = this.bK.a();
                         idragoncontroller.c();
                     }
 
@@ -180,22 +181,22 @@
                         d1 = MathHelper.a(d1 / (double) MathHelper.sqrt(d0 * d0 + d2 * d2), (double) (-f3), (double) f3);
                         this.motY += d1 * 0.10000000149011612D;
                         this.yaw = MathHelper.g(this.yaw);
-                        double d5 = MathHelper.a(MathHelper.g(180.0D - MathHelper.b(d0, d2) * 57.2957763671875D - (double) this.yaw), -50.0D, 50.0D);
+                        double d5 = MathHelper.a(MathHelper.g(180.0D - MathHelper.c(d0, d2) * 57.2957763671875D - (double) this.yaw), -50.0D, 50.0D);
                         Vec3D vec3d1 = (new Vec3D(vec3d.x - this.locX, vec3d.y - this.locY, vec3d.z - this.locZ)).a();
                         Vec3D vec3d2 = (new Vec3D((double) MathHelper.sin(this.yaw * 0.017453292F), this.motY, (double) (-MathHelper.cos(this.yaw * 0.017453292F)))).a();
-                        float f4 = Math.max(((float) vec3d2.b(vec3d1) + 0.5F) / 1.5F, 0.0F);
 
-                        this.bh *= 0.8F;
-                        this.bh = (float) ((double) this.bh + d5 * (double) idragoncontroller.h());
-                        this.yaw += this.bh * 0.1F;
+                        f4 = Math.max(((float) vec3d2.b(vec3d1) + 0.5F) / 1.5F, 0.0F);
+                        this.bg *= 0.8F;
+                        this.bg = (float) ((double) this.bg + d5 * (double) idragoncontroller.h());
+                        this.yaw += this.bg * 0.1F;
                         float f5 = (float) (2.0D / (d4 + 1.0D));
                         float f6 = 0.06F;
 
                         this.a(0.0F, -1.0F, 0.06F * (f4 * f5 + (1.0F - f5)));
-                        if (this.bG) {
-                            this.move(this.motX * 0.800000011920929D, this.motY * 0.800000011920929D, this.motZ * 0.800000011920929D);
+                        if (this.bF) {
+                            this.move(EnumMoveType.SELF, this.motX * 0.800000011920929D, this.motY * 0.800000011920929D, this.motZ * 0.800000011920929D);
                         } else {
-                            this.move(this.motX, this.motY, this.motZ);
+                            this.move(EnumMoveType.SELF, this.motX, this.motY, this.motZ);
                         }
 
                         Vec3D vec3d3 = (new Vec3D(this.motX, this.motY, this.motZ)).a();
@@ -208,88 +209,100 @@
                     }
                 }
 
-                this.aO = this.yaw;
-                this.bw.width = 1.0F;
-                this.bw.length = 1.0F;
-                this.bx.width = 3.0F;
-                this.bx.length = 3.0F;
+                this.aN = this.yaw;
+                this.bv.width = 1.0F;
+                this.bv.length = 1.0F;
+                this.bw.width = 3.0F;
+                this.bw.length = 3.0F;
+                this.by.width = 2.0F;
+                this.by.length = 2.0F;
                 this.bz.width = 2.0F;
                 this.bz.length = 2.0F;
                 this.bA.width = 2.0F;
                 this.bA.length = 2.0F;
-                this.bB.width = 2.0F;
+                this.bx.length = 3.0F;
+                this.bx.width = 5.0F;
                 this.bB.length = 2.0F;
-                this.by.length = 3.0F;
-                this.by.width = 5.0F;
-                this.bC.length = 2.0F;
+                this.bB.width = 4.0F;
+                this.bC.length = 3.0F;
                 this.bC.width = 4.0F;
-                this.bD.length = 3.0F;
-                this.bD.width = 4.0F;
-                f1 = (float) (this.a(5, 1.0F)[1] - this.a(10, 1.0F)[1]) * 10.0F * 0.017453292F;
-                f2 = MathHelper.cos(f1);
-                float f8 = MathHelper.sin(f1);
-                float f9 = this.yaw * 0.017453292F;
-                float f10 = MathHelper.sin(f9);
-                float f11 = MathHelper.cos(f9);
-
-                this.by.m();
-                this.by.setPositionRotation(this.locX + (double) (f10 * 0.5F), this.locY, this.locZ - (double) (f11 * 0.5F), 0.0F, 0.0F);
-                this.bC.m();
-                this.bC.setPositionRotation(this.locX + (double) (f11 * 4.5F), this.locY + 2.0D, this.locZ + (double) (f10 * 4.5F), 0.0F, 0.0F);
-                this.bD.m();
-                this.bD.setPositionRotation(this.locX - (double) (f11 * 4.5F), this.locY + 2.0D, this.locZ - (double) (f10 * 4.5F), 0.0F, 0.0F);
+                Vec3D[] avec3d = new Vec3D[this.children.length];
+
+                for (int j = 0; j < this.children.length; ++j) {
+                    avec3d[j] = new Vec3D(this.children[j].locX, this.children[j].locY, this.children[j].locZ);
+                }
+
+                f2 = (float) (this.a(5, 1.0F)[1] - this.a(10, 1.0F)[1]) * 10.0F * 0.017453292F;
+                float f8 = MathHelper.cos(f2);
+                float f9 = MathHelper.sin(f2);
+                float f10 = this.yaw * 0.017453292F;
+                float f11 = MathHelper.sin(f10);
+                float f12 = MathHelper.cos(f10);
+
+                this.bx.A_();
+                this.bx.setPositionRotation(this.locX + (double) (f11 * 0.5F), this.locY, this.locZ - (double) (f12 * 0.5F), 0.0F, 0.0F);
+                this.bB.A_();
+                this.bB.setPositionRotation(this.locX + (double) (f12 * 4.5F), this.locY + 2.0D, this.locZ + (double) (f11 * 4.5F), 0.0F, 0.0F);
+                this.bC.A_();
+                this.bC.setPositionRotation(this.locX - (double) (f12 * 4.5F), this.locY + 2.0D, this.locZ - (double) (f11 * 4.5F), 0.0F, 0.0F);
                 if (!this.world.isClientSide && this.hurtTicks == 0) {
-                    this.a(this.world.getEntities(this, this.bC.getBoundingBox().grow(4.0D, 2.0D, 4.0D).c(0.0D, -2.0D, 0.0D)));
-                    this.a(this.world.getEntities(this, this.bD.getBoundingBox().grow(4.0D, 2.0D, 4.0D).c(0.0D, -2.0D, 0.0D)));
+                    this.a(this.world.getEntities(this, this.bB.getBoundingBox().grow(4.0D, 2.0D, 4.0D).d(0.0D, -2.0D, 0.0D)));
+                    this.a(this.world.getEntities(this, this.bC.getBoundingBox().grow(4.0D, 2.0D, 4.0D).d(0.0D, -2.0D, 0.0D)));
+                    this.b(this.world.getEntities(this, this.bv.getBoundingBox().g(1.0D)));
                     this.b(this.world.getEntities(this, this.bw.getBoundingBox().g(1.0D)));
-                    this.b(this.world.getEntities(this, this.bx.getBoundingBox().g(1.0D)));
                 }
 
                 double[] adouble = this.a(5, 1.0F);
-                float f12 = MathHelper.sin(this.yaw * 0.017453292F - this.bh * 0.01F);
-                float f13 = MathHelper.cos(this.yaw * 0.017453292F - this.bh * 0.01F);
+                float f13 = MathHelper.sin(this.yaw * 0.017453292F - this.bg * 0.01F);
+                float f14 = MathHelper.cos(this.yaw * 0.017453292F - this.bg * 0.01F);
 
-                this.bw.m();
-                this.bx.m();
-                float f14 = this.q(1.0F);
+                this.bv.A_();
+                this.bw.A_();
+                f3 = this.q(1.0F);
+                this.bv.setPositionRotation(this.locX + (double) (f13 * 6.5F * f8), this.locY + (double) f3 + (double) (f9 * 6.5F), this.locZ - (double) (f14 * 6.5F * f8), 0.0F, 0.0F);
+                this.bw.setPositionRotation(this.locX + (double) (f13 * 5.5F * f8), this.locY + (double) f3 + (double) (f9 * 5.5F), this.locZ - (double) (f14 * 5.5F * f8), 0.0F, 0.0F);
 
-                this.bw.setPositionRotation(this.locX + (double) (f12 * 6.5F * f2), this.locY + (double) f14 + (double) (f8 * 6.5F), this.locZ - (double) (f13 * 6.5F * f2), 0.0F, 0.0F);
-                this.bx.setPositionRotation(this.locX + (double) (f12 * 5.5F * f2), this.locY + (double) f14 + (double) (f8 * 5.5F), this.locZ - (double) (f13 * 5.5F * f2), 0.0F, 0.0F);
+                int k;
 
-                for (int j = 0; j < 3; ++j) {
+                for (k = 0; k < 3; ++k) {
                     EntityComplexPart entitycomplexpart = null;
 
-                    if (j == 0) {
-                        entitycomplexpart = this.bz;
+                    if (k == 0) {
+                        entitycomplexpart = this.by;
                     }
 
-                    if (j == 1) {
-                        entitycomplexpart = this.bA;
+                    if (k == 1) {
+                        entitycomplexpart = this.bz;
                     }
 
-                    if (j == 2) {
-                        entitycomplexpart = this.bB;
+                    if (k == 2) {
+                        entitycomplexpart = this.bA;
                     }
 
-                    double[] adouble1 = this.a(12 + j * 2, 1.0F);
-
-                    f3 = this.yaw * 0.017453292F + this.c(adouble1[0] - adouble[0]) * 0.017453292F;
-                    float f15 = MathHelper.sin(f3);
-                    float f16 = MathHelper.cos(f3);
-                    float f17 = 1.5F;
-                    float f18 = (float) (j + 1) * 2.0F;
-
-                    entitycomplexpart.m();
-                    entitycomplexpart.setPositionRotation(this.locX - (double) ((f10 * 1.5F + f15 * f18) * f2), this.locY + (adouble1[1] - adouble[1]) - (double) ((f18 + 1.5F) * f8) + 1.5D, this.locZ + (double) ((f11 * 1.5F + f16 * f18) * f2), 0.0F, 0.0F);
+                    double[] adouble1 = this.a(12 + k * 2, 1.0F);
+                    float f15 = this.yaw * 0.017453292F + this.c(adouble1[0] - adouble[0]) * 0.017453292F;
+                    float f16 = MathHelper.sin(f15);
+                    float f17 = MathHelper.cos(f15);
+                    float f18 = 1.5F;
+
+                    f4 = (float) (k + 1) * 2.0F;
+                    entitycomplexpart.A_();
+                    entitycomplexpart.setPositionRotation(this.locX - (double) ((f11 * 1.5F + f16 * f4) * f8), this.locY + (adouble1[1] - adouble[1]) - (double) ((f4 + 1.5F) * f9) + 1.5D, this.locZ + (double) ((f12 * 1.5F + f17 * f4) * f8), 0.0F, 0.0F);
                 }
 
                 if (!this.world.isClientSide) {
-                    this.bG = this.b(this.bw.getBoundingBox()) | this.b(this.bx.getBoundingBox()) | this.b(this.by.getBoundingBox());
-                    if (this.bK != null) {
-                        this.bK.b(this);
+                    this.bF = this.b(this.bv.getBoundingBox()) | this.b(this.bw.getBoundingBox()) | this.b(this.bx.getBoundingBox());
+                    if (this.bJ != null) {
+                        this.bJ.b(this);
                     }
                 }
 
+                for (k = 0; k < this.children.length; ++k) {
+                    this.children[k].lastX = avec3d[k].x;
+                    this.children[k].lastY = avec3d[k].y;
+                    this.children[k].lastZ = avec3d[k].z;
+                }
+
             }
         }
     }
@@ -297,19 +310,19 @@
     private float q(float f) {
         double d0;
 
-        if (this.bL.a().a()) {
+        if (this.bK.a().a()) {
             d0 = -1.0D;
         } else {
             double[] adouble = this.a(5, 1.0F);
             double[] adouble1 = this.a(0, 1.0F);
 
-            d0 = adouble[1] - adouble1[0];
+            d0 = adouble[1] - adouble1[1];
         }
 
         return (float) d0;
     }
 
-    private void da() {
+    private void dc() {
         if (this.currentEnderCrystal != null) {
             if (this.currentEnderCrystal.dead) {
                 this.currentEnderCrystal = null;
@@ -340,8 +353,8 @@
     }
 
     private void a(List<Entity> list) {
-        double d0 = (this.by.getBoundingBox().a + this.by.getBoundingBox().d) / 2.0D;
-        double d1 = (this.by.getBoundingBox().c + this.by.getBoundingBox().f) / 2.0D;
+        double d0 = (this.bx.getBoundingBox().a + this.bx.getBoundingBox().d) / 2.0D;
+        double d1 = (this.bx.getBoundingBox().c + this.bx.getBoundingBox().f) / 2.0D;
         Iterator iterator = list.iterator();
 
         while (iterator.hasNext()) {
@@ -352,8 +365,8 @@
                 double d3 = entity.locZ - d1;
                 double d4 = d2 * d2 + d3 * d3;
 
-                entity.g(d2 / d4 * 4.0D, 0.20000000298023224D, d3 / d4 * 4.0D);
-                if (!this.bL.a().a() && ((EntityLiving) entity).bK() < entity.ticksLived - 2) {
+                entity.f(d2 / d4 * 4.0D, 0.20000000298023224D, d3 / d4 * 4.0D);
+                if (!this.bK.a().a() && ((EntityLiving) entity).bL() < entity.ticksLived - 2) {
                     entity.damageEntity(DamageSource.mobAttack(this), 5.0F);
                     this.a((EntityLiving) this, entity);
                 }
@@ -424,8 +437,8 @@
     }
 
     public boolean a(EntityComplexPart entitycomplexpart, DamageSource damagesource, float f) {
-        f = this.bL.a().a(entitycomplexpart, damagesource, f);
-        if (entitycomplexpart != this.bw) {
+        f = this.bK.a().a(entitycomplexpart, damagesource, f);
+        if (entitycomplexpart != this.bv) {
             f = f / 4.0F + Math.min(f, 1.0F);
         }
 
@@ -436,16 +449,16 @@
                 float f1 = this.getHealth();
 
                 this.dealDamage(damagesource, f);
-                if (this.getHealth() <= 0.0F && !this.bL.a().a()) {
+                if (this.getHealth() <= 0.0F && !this.bK.a().a()) {
                     this.setHealth(1.0F);
-                    this.bL.setControllerPhase(DragonControllerPhase.j);
+                    this.bK.setControllerPhase(DragonControllerPhase.j);
                 }
 
-                if (this.bL.a().a()) {
-                    this.bN = (int) ((float) this.bN + (f1 - this.getHealth()));
-                    if ((float) this.bN > 0.25F * this.getMaxHealth()) {
-                        this.bN = 0;
-                        this.bL.setControllerPhase(DragonControllerPhase.e);
+                if (this.bK.a().a()) {
+                    this.bM = (int) ((float) this.bM + (f1 - this.getHealth()));
+                    if ((float) this.bM > 0.25F * this.getMaxHealth()) {
+                        this.bM = 0;
+                        this.bK.setControllerPhase(DragonControllerPhase.e);
                     }
                 }
             }
@@ -456,7 +469,7 @@
 
     public boolean damageEntity(DamageSource damagesource, float f) {
         if (damagesource instanceof EntityDamageSource && ((EntityDamageSource) damagesource).x()) {
-            this.a(this.by, damagesource, f);
+            this.a(this.bx, damagesource, f);
         }
 
         return false;
@@ -468,20 +481,20 @@
 
     public void Q() {
         this.die();
-        if (this.bK != null) {
-            this.bK.b(this);
-            this.bK.a(this);
+        if (this.bJ != null) {
+            this.bJ.b(this);
+            this.bJ.a(this);
         }
 
     }
 
-    protected void bF() {
-        if (this.bK != null) {
-            this.bK.b(this);
+    protected void bG() {
+        if (this.bJ != null) {
+            this.bJ.b(this);
         }
 
-        ++this.bH;
-        if (this.bH >= 180 && this.bH <= 200) {
+        ++this.bG;
+        if (this.bG >= 180 && this.bG <= 200) {
             float f = (this.random.nextFloat() - 0.5F) * 8.0F;
             float f1 = (this.random.nextFloat() - 0.5F) * 4.0F;
             float f2 = (this.random.nextFloat() - 0.5F) * 8.0F;
@@ -492,30 +505,30 @@
         boolean flag = this.world.getGameRules().getBoolean("doMobLoot");
         short short0 = 500;
 
-        if (this.bK != null && !this.bK.d()) {
+        if (this.bJ != null && !this.bJ.d()) {
             short0 = 12000;
         }
 
         if (!this.world.isClientSide) {
-            if (this.bH > 150 && this.bH % 5 == 0 && flag) {
+            if (this.bG > 150 && this.bG % 5 == 0 && flag) {
                 this.a(MathHelper.d((float) short0 * 0.08F));
             }
 
-            if (this.bH == 1) {
+            if (this.bG == 1) {
                 this.world.a(1028, new BlockPosition(this), 0);
             }
         }
 
-        this.move(0.0D, 0.10000000149011612D, 0.0D);
+        this.move(EnumMoveType.SELF, 0.0D, 0.10000000149011612D, 0.0D);
         this.yaw += 20.0F;
-        this.aO = this.yaw;
-        if (this.bH == 200 && !this.world.isClientSide) {
+        this.aN = this.yaw;
+        if (this.bG == 200 && !this.world.isClientSide) {
             if (flag) {
                 this.a(MathHelper.d((float) short0 * 0.2F));
             }
 
-            if (this.bK != null) {
-                this.bK.a(this);
+            if (this.bJ != null) {
+                this.bJ.a(this);
             }
 
             this.die();
@@ -534,7 +547,7 @@
     }
 
     public int o() {
-        if (this.bO[0] == null) {
+        if (this.bN[0] == null) {
             for (int i = 0; i < 24; ++i) {
                 int j = 5;
                 int k;
@@ -560,51 +573,51 @@
 
                 int j1 = Math.max(this.world.K() + 10, this.world.q(new BlockPosition(k, 0, l)).getY() + j);
 
-                this.bO[i] = new PathPoint(k, j1, l);
+                this.bN[i] = new PathPoint(k, j1, l);
             }
 
-            this.bP[0] = 6146;
-            this.bP[1] = 8197;
-            this.bP[2] = 8202;
-            this.bP[3] = 16404;
-            this.bP[4] = '\u8028';
-            this.bP[5] = '\u8050';
-            this.bP[6] = 65696;
-            this.bP[7] = 131392;
-            this.bP[8] = 131712;
-            this.bP[9] = 263424;
-            this.bP[10] = 526848;
-            this.bP[11] = 525313;
-            this.bP[12] = 1581057;
-            this.bP[13] = 3166214;
-            this.bP[14] = 2138120;
-            this.bP[15] = 6373424;
-            this.bP[16] = 4358208;
-            this.bP[17] = 12910976;
-            this.bP[18] = 9044480;
-            this.bP[19] = 9706496;
-            this.bP[20] = 15216640;
-            this.bP[21] = 13688832;
-            this.bP[22] = 11763712;
-            this.bP[23] = 8257536;
+            this.bO[0] = 6146;
+            this.bO[1] = 8197;
+            this.bO[2] = 8202;
+            this.bO[3] = 16404;
+            this.bO[4] = '\u8028';
+            this.bO[5] = '\u8050';
+            this.bO[6] = 65696;
+            this.bO[7] = 131392;
+            this.bO[8] = 131712;
+            this.bO[9] = 263424;
+            this.bO[10] = 526848;
+            this.bO[11] = 525313;
+            this.bO[12] = 1581057;
+            this.bO[13] = 3166214;
+            this.bO[14] = 2138120;
+            this.bO[15] = 6373424;
+            this.bO[16] = 4358208;
+            this.bO[17] = 12910976;
+            this.bO[18] = 9044480;
+            this.bO[19] = 9706496;
+            this.bO[20] = 15216640;
+            this.bO[21] = 13688832;
+            this.bO[22] = 11763712;
+            this.bO[23] = 8257536;
         }
 
-        return this.l(this.locX, this.locY, this.locZ);
+        return this.k(this.locX, this.locY, this.locZ);
     }
 
-    public int l(double d0, double d1, double d2) {
+    public int k(double d0, double d1, double d2) {
         float f = 10000.0F;
         int i = 0;
         PathPoint pathpoint = new PathPoint(MathHelper.floor(d0), MathHelper.floor(d1), MathHelper.floor(d2));
         byte b0 = 0;
 
-        if (this.bK == null || this.bK.c() == 0) {
+        if (this.bJ == null || this.bJ.c() == 0) {
             b0 = 12;
         }
 
         for (int j = b0; j < 24; ++j) {
-            if (this.bO[j] != null) {
-                float f1 = this.bO[j].b(pathpoint);
+            if (this.bN[j] != null) {
+                float f1 = this.bN[j].b(pathpoint);
 
                 if (f1 < f) {
                     f = f1;
@@ -621,7 +634,7 @@
         PathPoint pathpoint1;
 
         for (int k = 0; k < 24; ++k) {
-            pathpoint1 = this.bO[k];
+            pathpoint1 = this.bN[k];
             pathpoint1.i = false;
             pathpoint1.g = 0.0F;
             pathpoint1.e = 0.0F;
@@ -630,24 +643,24 @@
             pathpoint1.d = -1;
         }
 
-        PathPoint pathpoint2 = this.bO[i];
+        PathPoint pathpoint2 = this.bN[i];
 
-        pathpoint1 = this.bO[j];
+        pathpoint1 = this.bN[j];
         pathpoint2.e = 0.0F;
         pathpoint2.f = pathpoint2.a(pathpoint1);
         pathpoint2.g = pathpoint2.f;
-        this.bQ.a();
-        this.bQ.a(pathpoint2);
+        this.bP.a();
+        this.bP.a(pathpoint2);
         PathPoint pathpoint3 = pathpoint2;
         byte b0 = 0;
 
-        if (this.bK == null || this.bK.c() == 0) {
+        if (this.bJ == null || this.bJ.c() == 0) {
             b0 = 12;
         }
 
         label70:
-        while (!this.bQ.e()) {
-            PathPoint pathpoint4 = this.bQ.c();
+        while (!this.bP.e()) {
+            PathPoint pathpoint4 = this.bP.c();
 
             if (pathpoint4.equals(pathpoint1)) {
                 if (pathpoint != null) {
@@ -668,7 +681,7 @@
 
             while (true) {
                 if (i1 < 24) {
-                    if (this.bO[i1] != pathpoint4) {
+                    if (this.bN[i1] != pathpoint4) {
                         ++i1;
                         continue;
                     }
@@ -683,8 +696,8 @@
                         continue label70;
                     }
 
-                    if ((this.bP[l] & 1 << i1) > 0) {
-                        PathPoint pathpoint5 = this.bO[i1];
+                    if ((this.bO[l] & 1 << i1) > 0) {
+                        PathPoint pathpoint5 = this.bN[i1];
 
                         if (!pathpoint5.i) {
                             float f = pathpoint4.e + pathpoint4.a(pathpoint5);
@@ -694,10 +707,10 @@
                                 pathpoint5.e = f;
                                 pathpoint5.f = pathpoint5.a(pathpoint1);
                                 if (pathpoint5.a()) {
-                                    this.bQ.a(pathpoint5, pathpoint5.e + pathpoint5.f);
+                                    this.bP.a(pathpoint5, pathpoint5.e + pathpoint5.f);
                                 } else {
                                     pathpoint5.g = pathpoint5.e + pathpoint5.f;
-                                    this.bQ.a(pathpoint5);
+                                    this.bP.a(pathpoint5);
                                 }
                             }
                         }
@@ -711,7 +724,7 @@
         if (pathpoint3 == pathpoint2) {
             return null;
         } else {
-            EntityEnderDragon.bJ.debug("Failed to find path from {} to {}", new Object[] { Integer.valueOf(i), Integer.valueOf(j)});
+            EntityEnderDragon.bI.debug("Failed to find path from {} to {}", new Object[] { Integer.valueOf(i), Integer.valueOf(j)});
             if (pathpoint != null) {
                 pathpoint.h = pathpoint3;
                 pathpoint3 = pathpoint;
@@ -744,18 +757,18 @@
     }
 
     public static void b(DataConverterManager dataconvertermanager) {
-        EntityInsentient.a(dataconvertermanager, "EnderDragon");
+        EntityInsentient.a(dataconvertermanager, EntityEnderDragon.class);
     }
 
     public void b(NBTTagCompound nbttagcompound) {
         super.b(nbttagcompound);
-        nbttagcompound.setInt("DragonPhase", this.bL.a().getControllerPhase().b());
+        nbttagcompound.setInt("DragonPhase", this.bK.a().getControllerPhase().b());
     }
 
     public void a(NBTTagCompound nbttagcompound) {
         super.a(nbttagcompound);
         if (nbttagcompound.hasKey("DragonPhase")) {
-            this.bL.setControllerPhase(DragonControllerPhase.getById(nbttagcompound.getInt("DragonPhase")));
+            this.bK.setControllerPhase(DragonControllerPhase.getById(nbttagcompound.getInt("DragonPhase")));
         }
 
     }
@@ -779,19 +792,24 @@
     }
 
     protected SoundEffect G() {
-        return SoundEffects.aO;
+        return SoundEffects.aR;
     }
 
-    protected SoundEffect bV() {
-        return SoundEffects.aT;
+    protected SoundEffect bW() {
+        return SoundEffects.aW;
     }
 
-    protected float ch() {
+    protected float ci() {
         return 5.0F;
     }
 
+    @Nullable
+    protected MinecraftKey J() {
+        return LootTables.ay;
+    }
+
     public Vec3D a(float f) {
-        IDragonController idragoncontroller = this.bL.a();
+        IDragonController idragoncontroller = this.bK.a();
         DragonControllerPhase dragoncontrollerphase = idragoncontroller.getControllerPhase();
         Vec3D vec3d;
         float f1;
@@ -833,27 +851,27 @@
         }
 
         if (entityendercrystal == this.currentEnderCrystal) {
-            this.a(this.bw, DamageSource.b(entityhuman), 10.0F);
+            this.a(this.bv, DamageSource.b(entityhuman), 10.0F);
         }
 
-        this.bL.a().a(entityendercrystal, blockposition, damagesource, entityhuman);
+        this.bK.a().a(entityendercrystal, blockposition, damagesource, entityhuman);
     }
 
     public void a(DataWatcherObject<?> datawatcherobject) {
         if (EntityEnderDragon.PHASE.equals(datawatcherobject) && this.world.isClientSide) {
-            this.bL.setControllerPhase(DragonControllerPhase.getById(((Integer) this.getDataWatcher().get(EntityEnderDragon.PHASE)).intValue()));
+            this.bK.setControllerPhase(DragonControllerPhase.getById(((Integer) this.getDataWatcher().get(EntityEnderDragon.PHASE)).intValue()));
         }
 
         super.a(datawatcherobject);
     }
 
     public DragonControllerManager getDragonControllerManager() {
-        return this.bL;
+        return this.bK;
     }
 
     @Nullable
-    public EnderDragonBattle cZ() {
-        return this.bK;
+    public EnderDragonBattle db() {
+        return this.bJ;
     }
 
     public void addEffect(MobEffect mobeffect) {}
