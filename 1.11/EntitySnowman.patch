--- a/net/minecraft/server/EntitySnowman.java
+++ b/net/minecraft/server/EntitySnowman.java
@@ -12,12 +12,12 @@
     }
 
     public static void b(DataConverterManager dataconvertermanager) {
-        EntityInsentient.a(dataconvertermanager, "SnowMan");
+        EntityInsentient.a(dataconvertermanager, EntitySnowman.class);
     }
 
     protected void r() {
         this.goalSelector.a(1, new PathfinderGoalArrowAttack(this, 1.25D, 20, 10.0F));
-        this.goalSelector.a(2, new PathfinderGoalRandomStroll(this, 1.0D));
+        this.goalSelector.a(2, new PathfinderGoalRandomStrollLand(this, 1.0D, 1.0000001E-5F));
         this.goalSelector.a(3, new PathfinderGoalLookAtPlayer(this, EntityHuman.class, 6.0F));
         this.goalSelector.a(4, new PathfinderGoalRandomLookaround(this));
         this.targetSelector.a(1, new PathfinderGoalNearestAttackableTarget(this, EntityInsentient.class, 10, true, false, IMonster.d));
@@ -31,7 +31,20 @@
 
     protected void i() {
         super.i();
-        this.datawatcher.register(EntitySnowman.a, Byte.valueOf((byte) 0));
+        this.datawatcher.register(EntitySnowman.a, Byte.valueOf((byte) 16));
+    }
+
+    public void b(NBTTagCompound nbttagcompound) {
+        super.b(nbttagcompound);
+        nbttagcompound.setBoolean("Pumpkin", this.hasPumpkin());
+    }
+
+    public void a(NBTTagCompound nbttagcompound) {
+        super.a(nbttagcompound);
+        if (nbttagcompound.hasKey("Pumpkin")) {
+            this.setHasPumpkin(nbttagcompound.getBoolean("Pumpkin"));
+        }
+
     }
 
     public void n() {
@@ -59,7 +72,7 @@
                 k = MathHelper.floor(this.locZ + (double) ((float) (l / 2 % 2 * 2 - 1) * 0.25F));
                 BlockPosition blockposition = new BlockPosition(i, j, k);
 
-                if (this.world.getType(blockposition).getMaterial() == Material.AIR && this.world.getBiome(new BlockPosition(i, 0, k)).a(blockposition) < 0.8F && Blocks.SNOW_LAYER.canPlace(this.world, blockposition)) {
+                if (this.world.getType(blockposition).getMaterial() == Material.AIR && this.world.getBiome(blockposition).a(blockposition) < 0.8F && Blocks.SNOW_LAYER.canPlace(this.world, blockposition)) {
                     this.world.setTypeUpdate(blockposition, Blocks.SNOW_LAYER.getBlockData());
                 }
             }
@@ -69,7 +82,7 @@
 
     @Nullable
     protected MinecraftKey J() {
-        return LootTables.A;
+        return LootTables.B;
     }
 
     public void a(EntityLiving entityliving, float f) {
@@ -81,7 +94,7 @@
         float f1 = MathHelper.sqrt(d1 * d1 + d3 * d3) * 0.2F;
 
         entitysnowball.shoot(d1, d2 + (double) f1, d3, 1.6F, 12.0F);
-        this.a(SoundEffects.fW, 1.0F, 1.0F / (this.getRandom().nextFloat() * 0.4F + 0.8F));
+        this.a(SoundEffects.gs, 1.0F, 1.0F / (this.getRandom().nextFloat() * 0.4F + 0.8F));
         this.world.addEntity(entitysnowball);
     }
 
@@ -89,20 +102,22 @@
         return 1.7F;
     }
 
-    protected boolean a(EntityHuman entityhuman, EnumHand enumhand, @Nullable ItemStack itemstack) {
-        if (itemstack != null && itemstack.getItem() == Items.SHEARS && !this.isDerp() && !this.world.isClientSide) {
-            this.setDerp(true);
+    protected boolean a(EntityHuman entityhuman, EnumHand enumhand) {
+        ItemStack itemstack = entityhuman.b(enumhand);
+
+        if (itemstack.getItem() == Items.SHEARS && this.hasPumpkin() && !this.world.isClientSide) {
+            this.setHasPumpkin(false);
             itemstack.damage(1, entityhuman);
         }
 
-        return super.a(entityhuman, enumhand, itemstack);
+        return super.a(entityhuman, enumhand);
     }
 
-    public boolean isDerp() {
+    public boolean hasPumpkin() {
         return (((Byte) this.datawatcher.get(EntitySnowman.a)).byteValue() & 16) != 0;
     }
 
-    public void setDerp(boolean flag) {
+    public void setHasPumpkin(boolean flag) {
         byte b0 = ((Byte) this.datawatcher.get(EntitySnowman.a)).byteValue();
 
         if (flag) {
@@ -115,16 +130,16 @@
 
     @Nullable
     protected SoundEffect G() {
-        return SoundEffects.fT;
+        return SoundEffects.gp;
     }
 
     @Nullable
-    protected SoundEffect bV() {
-        return SoundEffects.fV;
+    protected SoundEffect bW() {
+        return SoundEffects.gr;
     }
 
     @Nullable
-    protected SoundEffect bW() {
-        return SoundEffects.fU;
+    protected SoundEffect bX() {
+        return SoundEffects.gq;
     }
 }
