--- a/net/minecraft/server/EntityPig.java
+++ b/net/minecraft/server/EntityPig.java
@@ -7,11 +7,11 @@
 
 public class EntityPig extends EntityAnimal {
 
-    private static final DataWatcherObject<Boolean> bx = DataWatcher.a(EntityPig.class, DataWatcherRegistry.h);
-    private static final Set<Item> by = Sets.newHashSet(new Item[] { Items.CARROT, Items.POTATO, Items.BEETROOT});
-    private boolean bz;
+    private static final DataWatcherObject<Boolean> bw = DataWatcher.a(EntityPig.class, DataWatcherRegistry.h);
+    private static final Set<Item> bx = Sets.newHashSet(new Item[] { Items.CARROT, Items.POTATO, Items.BEETROOT});
+    private boolean by;
+    private int bA;
     private int bB;
-    private int bC;
 
     public EntityPig(World world) {
         super(world);
@@ -23,9 +23,9 @@
         this.goalSelector.a(1, new PathfinderGoalPanic(this, 1.25D));
         this.goalSelector.a(3, new PathfinderGoalBreed(this, 1.0D));
         this.goalSelector.a(4, new PathfinderGoalTempt(this, 1.2D, Items.CARROT_ON_A_STICK, false));
-        this.goalSelector.a(4, new PathfinderGoalTempt(this, 1.2D, false, EntityPig.by));
+        this.goalSelector.a(4, new PathfinderGoalTempt(this, 1.2D, false, EntityPig.bx));
         this.goalSelector.a(5, new PathfinderGoalFollowParent(this, 1.1D));
-        this.goalSelector.a(6, new PathfinderGoalRandomStroll(this, 1.0D));
+        this.goalSelector.a(6, new PathfinderGoalRandomStrollLand(this, 1.0D));
         this.goalSelector.a(7, new PathfinderGoalLookAtPlayer(this, EntityHuman.class, 6.0F));
         this.goalSelector.a(8, new PathfinderGoalRandomLookaround(this));
     }
@@ -41,31 +41,25 @@
         return this.bx().isEmpty() ? null : (Entity) this.bx().get(0);
     }
 
-    public boolean cP() {
+    public boolean cR() {
         Entity entity = this.bw();
 
         if (!(entity instanceof EntityHuman)) {
             return false;
         } else {
             EntityHuman entityhuman = (EntityHuman) entity;
-            ItemStack itemstack = entityhuman.getItemInMainHand();
 
-            if (itemstack != null && itemstack.getItem() == Items.CARROT_ON_A_STICK) {
-                return true;
-            } else {
-                itemstack = entityhuman.getItemInOffHand();
-                return itemstack != null && itemstack.getItem() == Items.CARROT_ON_A_STICK;
-            }
+            return entityhuman.getItemInMainHand().getItem() == Items.CARROT_ON_A_STICK || entityhuman.getItemInOffHand().getItem() == Items.CARROT_ON_A_STICK;
         }
     }
 
     protected void i() {
         super.i();
-        this.datawatcher.register(EntityPig.bx, Boolean.valueOf(false));
+        this.datawatcher.register(EntityPig.bw, Boolean.valueOf(false));
     }
 
     public static void b(DataConverterManager dataconvertermanager) {
-        EntityInsentient.a(dataconvertermanager, "Pig");
+        EntityInsentient.a(dataconvertermanager, EntityPig.class);
     }
 
     public void b(NBTTagCompound nbttagcompound) {
@@ -79,25 +73,36 @@
     }
 
     protected SoundEffect G() {
-        return SoundEffects.dV;
+        return SoundEffects.ep;
     }
 
-    protected SoundEffect bV() {
-        return SoundEffects.dX;
+    protected SoundEffect bW() {
+        return SoundEffects.er;
     }
 
-    protected SoundEffect bW() {
-        return SoundEffects.dW;
+    protected SoundEffect bX() {
+        return SoundEffects.eq;
     }
 
     protected void a(BlockPosition blockposition, Block block) {
-        this.a(SoundEffects.dZ, 0.15F, 1.0F);
+        this.a(SoundEffects.et, 0.15F, 1.0F);
     }
 
-    public boolean a(EntityHuman entityhuman, EnumHand enumhand, @Nullable ItemStack itemstack) {
-        if (!super.a(entityhuman, enumhand, itemstack)) {
-            if (this.hasSaddle() && !this.world.isClientSide && !this.isVehicle()) {
-                entityhuman.startRiding(this);
+    public boolean a(EntityHuman entityhuman, EnumHand enumhand) {
+        if (!super.a(entityhuman, enumhand)) {
+            ItemStack itemstack = entityhuman.b(enumhand);
+
+            if (itemstack.getItem() == Items.NAME_TAG) {
+                itemstack.a(entityhuman, (EntityLiving) this, enumhand);
+                return true;
+            } else if (this.hasSaddle() && !this.isVehicle()) {
+                if (!this.world.isClientSide) {
+                    entityhuman.startRiding(this);
+                }
+
+                return true;
+            } else if (itemstack.getItem() == Items.SADDLE) {
+                itemstack.a(entityhuman, (EntityLiving) this, enumhand);
                 return true;
             } else {
                 return false;
@@ -107,28 +112,30 @@
         }
     }
 
-    protected void dropEquipment(boolean flag, int i) {
-        super.dropEquipment(flag, i);
-        if (this.hasSaddle()) {
-            this.a(Items.SADDLE, 1);
-        }
+    public void die(DamageSource damagesource) {
+        super.die(damagesource);
+        if (!this.world.isClientSide) {
+            if (this.hasSaddle()) {
+                this.a(Items.SADDLE, 1);
+            }
 
+        }
     }
 
     @Nullable
     protected MinecraftKey J() {
-        return LootTables.D;
+        return LootTables.E;
     }
 
     public boolean hasSaddle() {
-        return ((Boolean) this.datawatcher.get(EntityPig.bx)).booleanValue();
+        return ((Boolean) this.datawatcher.get(EntityPig.bw)).booleanValue();
     }
 
     public void setSaddle(boolean flag) {
         if (flag) {
-            this.datawatcher.set(EntityPig.bx, Boolean.valueOf(true));
+            this.datawatcher.set(EntityPig.bw, Boolean.valueOf(true));
         } else {
-            this.datawatcher.set(EntityPig.bx, Boolean.valueOf(false));
+            this.datawatcher.set(EntityPig.bw, Boolean.valueOf(false));
         }
 
     }
@@ -167,24 +174,24 @@
     public void g(float f, float f1) {
         Entity entity = this.bx().isEmpty() ? null : (Entity) this.bx().get(0);
 
-        if (this.isVehicle() && this.cP()) {
+        if (this.isVehicle() && this.cR()) {
             this.yaw = entity.yaw;
             this.lastYaw = this.yaw;
             this.pitch = entity.pitch * 0.5F;
             this.setYawPitch(this.yaw, this.pitch);
-            this.aO = this.yaw;
-            this.aQ = this.yaw;
+            this.aN = this.yaw;
+            this.aP = this.yaw;
             this.P = 1.0F;
-            this.aS = this.cp() * 0.1F;
+            this.aR = this.cq() * 0.1F;
             if (this.bA()) {
                 float f2 = (float) this.getAttributeInstance(GenericAttributes.MOVEMENT_SPEED).getValue() * 0.225F;
 
-                if (this.bz) {
-                    if (this.bB++ > this.bC) {
-                        this.bz = false;
+                if (this.by) {
+                    if (this.bA++ > this.bB) {
+                        this.by = false;
                     }
 
-                    f2 += f2 * 1.15F * MathHelper.sin((float) this.bB / (float) this.bC * 3.1415927F);
+                    f2 += f2 * 1.15F * MathHelper.sin((float) this.bA / (float) this.bB * 3.1415927F);
                 }
 
                 this.l(f2);
@@ -195,7 +202,7 @@
                 this.motZ = 0.0D;
             }
 
-            this.aG = this.aH;
+            this.aF = this.aG;
             double d0 = this.locX - this.lastX;
             double d1 = this.locZ - this.lastZ;
             float f3 = MathHelper.sqrt(d0 * d0 + d1 * d1) * 4.0F;
@@ -204,22 +211,22 @@
                 f3 = 1.0F;
             }
 
-            this.aH += (f3 - this.aH) * 0.4F;
-            this.aI += this.aH;
+            this.aG += (f3 - this.aG) * 0.4F;
+            this.aH += this.aG;
         } else {
             this.P = 0.5F;
-            this.aS = 0.02F;
+            this.aR = 0.02F;
             super.g(f, f1);
         }
     }
 
-    public boolean df() {
-        if (this.bz) {
+    public boolean di() {
+        if (this.by) {
             return false;
         } else {
-            this.bz = true;
-            this.bB = 0;
-            this.bC = this.getRandom().nextInt(841) + 140;
+            this.by = true;
+            this.bA = 0;
+            this.bB = this.getRandom().nextInt(841) + 140;
             return true;
         }
     }
@@ -228,8 +235,8 @@
         return new EntityPig(this.world);
     }
 
-    public boolean e(@Nullable ItemStack itemstack) {
-        return itemstack != null && EntityPig.by.contains(itemstack.getItem());
+    public boolean e(ItemStack itemstack) {
+        return EntityPig.bx.contains(itemstack.getItem());
     }
 
     public EntityAgeable createChild(EntityAgeable entityageable) {
