--- a/net/minecraft/server/WorldMap.java
+++ b/net/minecraft/server/WorldMap.java
@@ -13,10 +13,11 @@
     public int centerZ;
     public byte map;
     public boolean track;
+    public boolean unlimitedTracking;
     public byte scale;
     public byte[] colors = new byte[16384];
-    public List<WorldMap.WorldMapHumanTracker> h = Lists.newArrayList();
-    private final Map<EntityHuman, WorldMap.WorldMapHumanTracker> j = Maps.newHashMap();
+    public List<WorldMap.WorldMapHumanTracker> i = Lists.newArrayList();
+    private final Map<EntityHuman, WorldMap.WorldMapHumanTracker> k = Maps.newHashMap();
     public Map<String, MapIcon> decorations = Maps.newLinkedHashMap();
 
     public WorldMap(String s) {
@@ -44,6 +45,7 @@
             this.track = true;
         }
 
+        this.unlimitedTracking = nbttagcompound.getBoolean("unlimitedTracking");
         short short0 = nbttagcompound.getShort("width");
         short short1 = nbttagcompound.getShort("height");
 
@@ -82,39 +84,40 @@
         nbttagcompound.setShort("height", (short) 128);
         nbttagcompound.setByteArray("colors", this.colors);
         nbttagcompound.setBoolean("trackingPosition", this.track);
+        nbttagcompound.setBoolean("unlimitedTracking", this.unlimitedTracking);
         return nbttagcompound;
     }
 
     public void a(EntityHuman entityhuman, ItemStack itemstack) {
-        if (!this.j.containsKey(entityhuman)) {
+        if (!this.k.containsKey(entityhuman)) {
             WorldMap.WorldMapHumanTracker worldmap_worldmaphumantracker = new WorldMap.WorldMapHumanTracker(entityhuman);
 
-            this.j.put(entityhuman, worldmap_worldmaphumantracker);
-            this.h.add(worldmap_worldmaphumantracker);
+            this.k.put(entityhuman, worldmap_worldmaphumantracker);
+            this.i.add(worldmap_worldmaphumantracker);
         }
 
         if (!entityhuman.inventory.f(itemstack)) {
             this.decorations.remove(entityhuman.getName());
         }
 
-        for (int i = 0; i < this.h.size(); ++i) {
-            WorldMap.WorldMapHumanTracker worldmap_worldmaphumantracker1 = (WorldMap.WorldMapHumanTracker) this.h.get(i);
+        for (int i = 0; i < this.i.size(); ++i) {
+            WorldMap.WorldMapHumanTracker worldmap_worldmaphumantracker1 = (WorldMap.WorldMapHumanTracker) this.i.get(i);
 
-            if (!worldmap_worldmaphumantracker1.trackee.dead && (worldmap_worldmaphumantracker1.trackee.inventory.f(itemstack) || itemstack.y())) {
-                if (!itemstack.y() && worldmap_worldmaphumantracker1.trackee.dimension == this.map && this.track) {
-                    this.a(0, worldmap_worldmaphumantracker1.trackee.world, worldmap_worldmaphumantracker1.trackee.getName(), worldmap_worldmaphumantracker1.trackee.locX, worldmap_worldmaphumantracker1.trackee.locZ, (double) worldmap_worldmaphumantracker1.trackee.yaw);
+            if (!worldmap_worldmaphumantracker1.trackee.dead && (worldmap_worldmaphumantracker1.trackee.inventory.f(itemstack) || itemstack.z())) {
+                if (!itemstack.z() && worldmap_worldmaphumantracker1.trackee.dimension == this.map && this.track) {
+                    this.a(MapIcon.Type.PLAYER, worldmap_worldmaphumantracker1.trackee.world, worldmap_worldmaphumantracker1.trackee.getName(), worldmap_worldmaphumantracker1.trackee.locX, worldmap_worldmaphumantracker1.trackee.locZ, (double) worldmap_worldmaphumantracker1.trackee.yaw);
                 }
             } else {
-                this.j.remove(worldmap_worldmaphumantracker1.trackee);
-                this.h.remove(worldmap_worldmaphumantracker1);
+                this.k.remove(worldmap_worldmaphumantracker1.trackee);
+                this.i.remove(worldmap_worldmaphumantracker1);
             }
         }
 
-        if (itemstack.y() && this.track) {
-            EntityItemFrame entityitemframe = itemstack.z();
+        if (itemstack.z() && this.track) {
+            EntityItemFrame entityitemframe = itemstack.A();
             BlockPosition blockposition = entityitemframe.getBlockPosition();
 
-            this.a(1, entityhuman.world, "frame-" + entityitemframe.getId(), (double) blockposition.getX(), (double) blockposition.getZ(), (double) (entityitemframe.direction.get2DRotationValue() * 90));
+            this.a(MapIcon.Type.FRAME, entityhuman.world, "frame-" + entityitemframe.getId(), (double) blockposition.getX(), (double) blockposition.getZ(), (double) (entityitemframe.direction.get2DRotationValue() * 90));
         }
 
         if (itemstack.hasTag() && itemstack.getTag().hasKeyOfType("Decorations", 9)) {
@@ -124,17 +127,43 @@
                 NBTTagCompound nbttagcompound = nbttaglist.get(j);
 
                 if (!this.decorations.containsKey(nbttagcompound.getString("id"))) {
-                    this.a(nbttagcompound.getByte("type"), entityhuman.world, nbttagcompound.getString("id"), nbttagcompound.getDouble("x"), nbttagcompound.getDouble("z"), nbttagcompound.getDouble("rot"));
+                    this.a(MapIcon.Type.a(nbttagcompound.getByte("type")), entityhuman.world, nbttagcompound.getString("id"), nbttagcompound.getDouble("x"), nbttagcompound.getDouble("z"), nbttagcompound.getDouble("rot"));
                 }
             }
         }
 
     }
 
-    private void a(int i, World world, String s, double d0, double d1, double d2) {
-        int j = 1 << this.scale;
-        float f = (float) (d0 - (double) this.centerX) / (float) j;
-        float f1 = (float) (d1 - (double) this.centerZ) / (float) j;
+    public static void a(ItemStack itemstack, BlockPosition blockposition, String s, MapIcon.Type mapicon_type) {
+        NBTTagList nbttaglist;
+
+        if (itemstack.hasTag() && itemstack.getTag().hasKeyOfType("Decorations", 9)) {
+            nbttaglist = itemstack.getTag().getList("Decorations", 10);
+        } else {
+            nbttaglist = new NBTTagList();
+            itemstack.a("Decorations", (NBTBase) nbttaglist);
+        }
+
+        NBTTagCompound nbttagcompound = new NBTTagCompound();
+
+        nbttagcompound.setByte("type", mapicon_type.a());
+        nbttagcompound.setString("id", s);
+        nbttagcompound.setDouble("x", (double) blockposition.getX());
+        nbttagcompound.setDouble("z", (double) blockposition.getZ());
+        nbttagcompound.setDouble("rot", 180.0D);
+        nbttaglist.add(nbttagcompound);
+        if (mapicon_type.c()) {
+            NBTTagCompound nbttagcompound1 = itemstack.c("display");
+
+            nbttagcompound1.setInt("MapColor", mapicon_type.d());
+        }
+
+    }
+
+    private void a(MapIcon.Type mapicon_type, World world, String s, double d0, double d1, double d2) {
+        int i = 1 << this.scale;
+        float f = (float) (d0 - (double) this.centerX) / (float) i;
+        float f1 = (float) (d1 - (double) this.centerZ) / (float) i;
         byte b0 = (byte) ((int) ((double) (f * 2.0F) + 0.5D));
         byte b1 = (byte) ((int) ((double) (f1 * 2.0F) + 0.5D));
         boolean flag = true;
@@ -144,17 +173,29 @@
             d2 += d2 < 0.0D ? -8.0D : 8.0D;
             b2 = (byte) ((int) (d2 * 16.0D / 360.0D));
             if (this.map < 0) {
-                int k = (int) (world.getWorldData().getDayTime() / 10L);
+                int j = (int) (world.getWorldData().getDayTime() / 10L);
 
-                b2 = (byte) (k * k * 34187121 + k * 121 >> 15 & 15);
+                b2 = (byte) (j * j * 34187121 + j * 121 >> 15 & 15);
             }
         } else {
-            if (Math.abs(f) >= 320.0F || Math.abs(f1) >= 320.0F) {
+            if (mapicon_type != MapIcon.Type.PLAYER) {
                 this.decorations.remove(s);
                 return;
             }
 
-            i = 6;
+            boolean flag1 = true;
+
+            if (Math.abs(f) < 320.0F && Math.abs(f1) < 320.0F) {
+                mapicon_type = MapIcon.Type.PLAYER_OFF_MAP;
+            } else {
+                if (!this.unlimitedTracking) {
+                    this.decorations.remove(s);
+                    return;
+                }
+
+                mapicon_type = MapIcon.Type.PLAYER_OFF_LIMITS;
+            }
+
             b2 = 0;
             if (f <= -63.0F) {
                 b0 = -128;
@@ -173,19 +214,19 @@
             }
         }
 
-        this.decorations.put(s, new MapIcon((byte) i, b0, b1, b2));
+        this.decorations.put(s, new MapIcon(mapicon_type, b0, b1, b2));
     }
 
     @Nullable
     public Packet<?> a(ItemStack itemstack, World world, EntityHuman entityhuman) {
-        WorldMap.WorldMapHumanTracker worldmap_worldmaphumantracker = (WorldMap.WorldMapHumanTracker) this.j.get(entityhuman);
+        WorldMap.WorldMapHumanTracker worldmap_worldmaphumantracker = (WorldMap.WorldMapHumanTracker) this.k.get(entityhuman);
 
         return worldmap_worldmaphumantracker == null ? null : worldmap_worldmaphumantracker.a(itemstack);
     }
 
     public void flagDirty(int i, int j) {
         super.c();
-        Iterator iterator = this.h.iterator();
+        Iterator iterator = this.i.iterator();
 
         while (iterator.hasNext()) {
             WorldMap.WorldMapHumanTracker worldmap_worldmaphumantracker = (WorldMap.WorldMapHumanTracker) iterator.next();
@@ -196,12 +237,12 @@
     }
 
     public WorldMap.WorldMapHumanTracker a(EntityHuman entityhuman) {
-        WorldMap.WorldMapHumanTracker worldmap_worldmaphumantracker = (WorldMap.WorldMapHumanTracker) this.j.get(entityhuman);
+        WorldMap.WorldMapHumanTracker worldmap_worldmaphumantracker = (WorldMap.WorldMapHumanTracker) this.k.get(entityhuman);
 
         if (worldmap_worldmaphumantracker == null) {
             worldmap_worldmaphumantracker = new WorldMap.WorldMapHumanTracker(entityhuman);
-            this.j.put(entityhuman, worldmap_worldmaphumantracker);
-            this.h.add(worldmap_worldmaphumantracker);
+            this.k.put(entityhuman, worldmap_worldmaphumantracker);
+            this.i.add(worldmap_worldmaphumantracker);
         }
 
         return worldmap_worldmaphumantracker;
@@ -222,6 +263,7 @@
             this.trackee = entityhuman;
         }
 
+        @Nullable
         public Packet<?> a(ItemStack itemstack) {
             if (this.d) {
                 this.d = false;
