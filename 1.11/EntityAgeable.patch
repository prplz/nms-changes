--- a/net/minecraft/server/EntityAgeable.java
+++ b/net/minecraft/server/EntityAgeable.java
@@ -4,23 +4,26 @@
 
 public abstract class EntityAgeable extends EntityCreature {
 
-    private static final DataWatcherObject<Boolean> bx = DataWatcher.a(EntityAgeable.class, DataWatcherRegistry.h);
+    private static final DataWatcherObject<Boolean> bw = DataWatcher.a(EntityAgeable.class, DataWatcherRegistry.h);
     protected int a;
     protected int b;
     protected int c;
-    private float by = -1.0F;
-    private float bz;
+    private float bx = -1.0F;
+    private float by;
 
     public EntityAgeable(World world) {
         super(world);
     }
 
+    @Nullable
     public abstract EntityAgeable createChild(EntityAgeable entityageable);
 
-    public boolean a(EntityHuman entityhuman, EnumHand enumhand, @Nullable ItemStack itemstack) {
-        if (itemstack != null && itemstack.getItem() == Items.SPAWN_EGG) {
+    public boolean a(EntityHuman entityhuman, EnumHand enumhand) {
+        ItemStack itemstack = entityhuman.b(enumhand);
+
+        if (itemstack.getItem() == Items.SPAWN_EGG) {
             if (!this.world.isClientSide) {
-                Class oclass = EntityTypes.a(EntityTypes.a(ItemMonsterEgg.h(itemstack)));
+                Class oclass = (Class) EntityTypes.b.get(ItemMonsterEgg.h(itemstack));
 
                 if (oclass != null && this.getClass() == oclass) {
                     EntityAgeable entityageable = this.createChild(this);
@@ -34,7 +37,7 @@
                         }
 
                         if (!entityhuman.abilities.canInstantlyBuild) {
-                            --itemstack.count;
+                            itemstack.subtract(1);
                         }
                     }
                 }
@@ -46,13 +49,23 @@
         }
     }
 
+    protected boolean a(ItemStack itemstack, Class<? extends Entity> oclass) {
+        if (itemstack.getItem() != Items.SPAWN_EGG) {
+            return false;
+        } else {
+            Class oclass1 = (Class) EntityTypes.b.get(ItemMonsterEgg.h(itemstack));
+
+            return oclass1 != null && oclass == oclass1;
+        }
+    }
+
     protected void i() {
         super.i();
-        this.datawatcher.register(EntityAgeable.bx, Boolean.valueOf(false));
+        this.datawatcher.register(EntityAgeable.bw, Boolean.valueOf(false));
     }
 
     public int getAge() {
-        return this.world.isClientSide ? (((Boolean) this.datawatcher.get(EntityAgeable.bx)).booleanValue() ? -1 : 1) : this.a;
+        return this.world.isClientSide ? (((Boolean) this.datawatcher.get(EntityAgeable.bw)).booleanValue() ? -1 : 1) : this.a;
     }
 
     public void setAge(int i, boolean flag) {
@@ -88,7 +101,7 @@
     }
 
     public void setAgeRaw(int i) {
-        this.datawatcher.set(EntityAgeable.bx, Boolean.valueOf(i < 0));
+        this.datawatcher.set(EntityAgeable.bw, Boolean.valueOf(i < 0));
         this.a = i;
         this.a(this.isBaby());
     }
@@ -106,7 +119,7 @@
     }
 
     public void a(DataWatcherObject<?> datawatcherobject) {
-        if (EntityAgeable.bx.equals(datawatcherobject)) {
+        if (EntityAgeable.bw.equals(datawatcherobject)) {
             this.a(this.isBaby());
         }
 
@@ -151,10 +164,10 @@
     }
 
     public final void setSize(float f, float f1) {
-        boolean flag = this.by > 0.0F;
+        boolean flag = this.bx > 0.0F;
 
-        this.by = f;
-        this.bz = f1;
+        this.bx = f;
+        this.by = f1;
         if (!flag) {
             this.a(1.0F);
         }
@@ -162,6 +175,6 @@
     }
 
     protected final void a(float f) {
-        super.setSize(this.by * f, this.bz * f);
+        super.setSize(this.bx * f, this.by * f);
     }
 }
