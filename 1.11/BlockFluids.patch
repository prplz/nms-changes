--- a/net/minecraft/server/BlockFluids.java
+++ b/net/minecraft/server/BlockFluids.java
@@ -10,16 +10,16 @@
 
     protected BlockFluids(Material material) {
         super(material);
-        this.w(this.blockStateList.getBlockData().set(BlockFluids.LEVEL, Integer.valueOf(0)));
+        this.y(this.blockStateList.getBlockData().set(BlockFluids.LEVEL, Integer.valueOf(0)));
         this.a(true);
     }
 
-    public AxisAlignedBB a(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition) {
+    public AxisAlignedBB b(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition) {
         return BlockFluids.j;
     }
 
     @Nullable
-    public AxisAlignedBB a(IBlockData iblockdata, World world, BlockPosition blockposition) {
+    public AxisAlignedBB a(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition) {
         return BlockFluids.k;
     }
 
@@ -39,7 +39,7 @@
         return iblockdata.getMaterial() == this.material ? ((Integer) iblockdata.get(BlockFluids.LEVEL)).intValue() : -1;
     }
 
-    protected int x(IBlockData iblockdata) {
+    protected int z(IBlockData iblockdata) {
         int i = this.i(iblockdata);
 
         return i >= 8 ? 0 : i;
@@ -67,9 +67,8 @@
         return EnumRenderType.LIQUID;
     }
 
-    @Nullable
     public Item getDropType(IBlockData iblockdata, Random random, int i) {
-        return null;
+        return Items.a;
     }
 
     public int a(Random random) {
@@ -80,7 +79,7 @@
         double d0 = 0.0D;
         double d1 = 0.0D;
         double d2 = 0.0D;
-        int i = this.x(iblockdata);
+        int i = this.z(iblockdata);
         BlockPosition.PooledBlockPosition blockposition_pooledblockposition = BlockPosition.PooledBlockPosition.s();
         Iterator iterator = EnumDirection.EnumDirectionLimit.HORIZONTAL.iterator();
 
@@ -88,12 +87,12 @@
             EnumDirection enumdirection = (EnumDirection) iterator.next();
 
             blockposition_pooledblockposition.j(blockposition).d(enumdirection);
-            int j = this.x(iblockaccess.getType(blockposition_pooledblockposition));
+            int j = this.z(iblockaccess.getType(blockposition_pooledblockposition));
             int k;
 
             if (j < 0) {
                 if (!iblockaccess.getType(blockposition_pooledblockposition).getMaterial().isSolid()) {
-                    j = this.x(iblockaccess.getType(blockposition_pooledblockposition.down()));
+                    j = this.z(iblockaccess.getType(blockposition_pooledblockposition.down()));
                     if (j >= 0) {
                         k = j - (i - 8);
                         d0 += (double) (enumdirection.getAdjacentX() * k);
@@ -134,14 +133,14 @@
     }
 
     public int a(World world) {
-        return this.material == Material.WATER ? 5 : (this.material == Material.LAVA ? (world.worldProvider.m() ? 10 : 30) : 0);
+        return this.material == Material.WATER ? 5 : (this.material == Material.LAVA ? (world.worldProvider.n() ? 10 : 30) : 0);
     }
 
     public void onPlace(World world, BlockPosition blockposition, IBlockData iblockdata) {
         this.e(world, blockposition, iblockdata);
     }
 
-    public void a(IBlockData iblockdata, World world, BlockPosition blockposition, Block block) {
+    public void a(IBlockData iblockdata, World world, BlockPosition blockposition, Block block, BlockPosition blockposition1) {
         this.e(world, blockposition, iblockdata);
     }
 
@@ -185,7 +184,7 @@
         double d1 = (double) blockposition.getY();
         double d2 = (double) blockposition.getZ();
 
-        world.a((EntityHuman) null, blockposition, SoundEffects.dh, SoundCategory.BLOCKS, 0.5F, 2.6F + (world.random.nextFloat() - world.random.nextFloat()) * 0.8F);
+        world.a((EntityHuman) null, blockposition, SoundEffects.dr, SoundCategory.BLOCKS, 0.5F, 2.6F + (world.random.nextFloat() - world.random.nextFloat()) * 0.8F);
 
         for (int i = 0; i < 8; ++i) {
             world.addParticle(EnumParticle.SMOKE_LARGE, d0 + Math.random(), d1 + 1.2D, d2 + Math.random(), 0.0D, 0.0D, 0.0D, new int[0]);
@@ -224,4 +223,14 @@
             throw new IllegalArgumentException("Invalid material");
         }
     }
+
+    public static float f(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition) {
+        int i = ((Integer) iblockdata.get(BlockFluids.LEVEL)).intValue();
+
+        return (i & 7) == 0 && iblockaccess.getType(blockposition.up()).getMaterial() == Material.WATER ? 1.0F : 1.0F - e(i);
+    }
+
+    public static float g(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition) {
+        return (float) blockposition.getY() + f(iblockdata, iblockaccess, blockposition);
+    }
 }
