--- a/net/minecraft/server/EntityVillager.java
+++ b/net/minecraft/server/EntityVillager.java
@@ -1,17 +1,22 @@
 package net.minecraft.server;
 
 import java.util.Iterator;
+import java.util.Locale;
 import java.util.Random;
 import javax.annotation.Nullable;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 
-public class EntityVillager extends EntityAgeable implements IMerchant, NPC {
+public class EntityVillager extends EntityAgeable implements NPC, IMerchant {
 
+    private static final Logger bx = LogManager.getLogger();
     private static final DataWatcherObject<Integer> by = DataWatcher.a(EntityVillager.class, DataWatcherRegistry.b);
     private int profession;
     private boolean bA;
     private boolean bB;
     Village village;
     private EntityHuman tradingPlayer;
+    @Nullable
     private MerchantRecipeList trades;
     private int bE;
     private boolean bF;
@@ -23,7 +28,7 @@
     private boolean bL;
     private boolean bM;
     public final InventorySubcontainer inventory;
-    private static final EntityVillager.IMerchantRecipeOption[][][][] bO = new EntityVillager.IMerchantRecipeOption[][][][] { { { { new EntityVillager.MerchantRecipeOptionBuy(Items.WHEAT, new EntityVillager.MerchantOptionRandomRange(18, 22)), new EntityVillager.MerchantRecipeOptionBuy(Items.POTATO, new EntityVillager.MerchantOptionRandomRange(15, 19)), new EntityVillager.MerchantRecipeOptionBuy(Items.CARROT, new EntityVillager.MerchantOptionRandomRange(15, 19)), new EntityVillager.MerchantRecipeOptionSell(Items.BREAD, new EntityVillager.MerchantOptionRandomRange(-4, -2))}, { new EntityVillager.MerchantRecipeOptionBuy(Item.getItemOf(Blocks.PUMPKIN), new EntityVillager.MerchantOptionRandomRange(8, 13)), new EntityVillager.MerchantRecipeOptionSell(Items.PUMPKIN_PIE, new EntityVillager.MerchantOptionRandomRange(-3, -2))}, { new EntityVillager.MerchantRecipeOptionBuy(Item.getItemOf(Blocks.MELON_BLOCK), new EntityVillager.MerchantOptionRandomRange(7, 12)), new EntityVillager.MerchantRecipeOptionSell(Items.APPLE, new EntityVillager.MerchantOptionRandomRange(-5, -7))}, { new EntityVillager.MerchantRecipeOptionSell(Items.COOKIE, new EntityVillager.MerchantOptionRandomRange(-6, -10)), new EntityVillager.MerchantRecipeOptionSell(Items.CAKE, new EntityVillager.MerchantOptionRandomRange(1, 1))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.STRING, new EntityVillager.MerchantOptionRandomRange(15, 20)), new EntityVillager.MerchantRecipeOptionBuy(Items.COAL, new EntityVillager.MerchantOptionRandomRange(16, 24)), new EntityVillager.MerchantRecipeOptionProcess(Items.FISH, new EntityVillager.MerchantOptionRandomRange(6, 6), Items.COOKED_FISH, new EntityVillager.MerchantOptionRandomRange(6, 6))}, { new EntityVillager.MerchantRecipeOptionEnchant(Items.FISHING_ROD, new EntityVillager.MerchantOptionRandomRange(7, 8))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Item.getItemOf(Blocks.WOOL), new EntityVillager.MerchantOptionRandomRange(16, 22)), new EntityVillager.MerchantRecipeOptionSell(Items.SHEARS, new EntityVillager.MerchantOptionRandomRange(3, 4))}, { new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL)), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 1), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 2), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 3), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 4), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 5), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 6), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 7), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 8), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 9), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 10), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 11), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 12), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 13), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 14), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 15), new EntityVillager.MerchantOptionRandomRange(1, 2))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.STRING, new EntityVillager.MerchantOptionRandomRange(15, 20)), new EntityVillager.MerchantRecipeOptionSell(Items.ARROW, new EntityVillager.MerchantOptionRandomRange(-12, -8))}, { new EntityVillager.MerchantRecipeOptionSell(Items.BOW, new EntityVillager.MerchantOptionRandomRange(2, 3)), new EntityVillager.MerchantRecipeOptionProcess(Item.getItemOf(Blocks.GRAVEL), new EntityVillager.MerchantOptionRandomRange(10, 10), Items.FLINT, new EntityVillager.MerchantOptionRandomRange(6, 10))}}}, { { { new EntityVillager.MerchantRecipeOptionBuy(Items.PAPER, new EntityVillager.MerchantOptionRandomRange(24, 36)), new EntityVillager.MerchantRecipeOptionBook()}, { new EntityVillager.MerchantRecipeOptionBuy(Items.BOOK, new EntityVillager.MerchantOptionRandomRange(8, 10)), new EntityVillager.MerchantRecipeOptionSell(Items.COMPASS, new EntityVillager.MerchantOptionRandomRange(10, 12)), new EntityVillager.MerchantRecipeOptionSell(Item.getItemOf(Blocks.BOOKSHELF), new EntityVillager.MerchantOptionRandomRange(3, 4))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.WRITTEN_BOOK, new EntityVillager.MerchantOptionRandomRange(2, 2)), new EntityVillager.MerchantRecipeOptionSell(Items.CLOCK, new EntityVillager.MerchantOptionRandomRange(10, 12)), new EntityVillager.MerchantRecipeOptionSell(Item.getItemOf(Blocks.GLASS), new EntityVillager.MerchantOptionRandomRange(-5, -3))}, { new EntityVillager.MerchantRecipeOptionBook()}, { new EntityVillager.MerchantRecipeOptionBook()}, { new EntityVillager.MerchantRecipeOptionSell(Items.NAME_TAG, new EntityVillager.MerchantOptionRandomRange(20, 22))}}}, { { { new EntityVillager.MerchantRecipeOptionBuy(Items.ROTTEN_FLESH, new EntityVillager.MerchantOptionRandomRange(36, 40)), new EntityVillager.MerchantRecipeOptionBuy(Items.GOLD_INGOT, new EntityVillager.MerchantOptionRandomRange(8, 10))}, { new EntityVillager.MerchantRecipeOptionSell(Items.REDSTONE, new EntityVillager.MerchantOptionRandomRange(-4, -1)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Items.DYE, 1, EnumColor.BLUE.getInvColorIndex()), new EntityVillager.MerchantOptionRandomRange(-2, -1))}, { new EntityVillager.MerchantRecipeOptionSell(Items.ENDER_PEARL, new EntityVillager.MerchantOptionRandomRange(4, 7)), new EntityVillager.MerchantRecipeOptionSell(Item.getItemOf(Blocks.GLOWSTONE), new EntityVillager.MerchantOptionRandomRange(-3, -1))}, { new EntityVillager.MerchantRecipeOptionSell(Items.EXPERIENCE_BOTTLE, new EntityVillager.MerchantOptionRandomRange(3, 11))}}}, { { { new EntityVillager.MerchantRecipeOptionBuy(Items.COAL, new EntityVillager.MerchantOptionRandomRange(16, 24)), new EntityVillager.MerchantRecipeOptionSell(Items.IRON_HELMET, new EntityVillager.MerchantOptionRandomRange(4, 6))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.IRON_INGOT, new EntityVillager.MerchantOptionRandomRange(7, 9)), new EntityVillager.MerchantRecipeOptionSell(Items.IRON_CHESTPLATE, new EntityVillager.MerchantOptionRandomRange(10, 14))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.DIAMOND, new EntityVillager.MerchantOptionRandomRange(3, 4)), new EntityVillager.MerchantRecipeOptionEnchant(Items.DIAMOND_CHESTPLATE, new EntityVillager.MerchantOptionRandomRange(16, 19))}, { new EntityVillager.MerchantRecipeOptionSell(Items.CHAINMAIL_BOOTS, new EntityVillager.MerchantOptionRandomRange(5, 7)), new EntityVillager.MerchantRecipeOptionSell(Items.CHAINMAIL_LEGGINGS, new EntityVillager.MerchantOptionRandomRange(9, 11)), new EntityVillager.MerchantRecipeOptionSell(Items.CHAINMAIL_HELMET, new EntityVillager.MerchantOptionRandomRange(5, 7)), new EntityVillager.MerchantRecipeOptionSell(Items.CHAINMAIL_CHESTPLATE, new EntityVillager.MerchantOptionRandomRange(11, 15))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.COAL, new EntityVillager.MerchantOptionRandomRange(16, 24)), new EntityVillager.MerchantRecipeOptionSell(Items.IRON_AXE, new EntityVillager.MerchantOptionRandomRange(6, 8))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.IRON_INGOT, new EntityVillager.MerchantOptionRandomRange(7, 9)), new EntityVillager.MerchantRecipeOptionEnchant(Items.IRON_SWORD, new EntityVillager.MerchantOptionRandomRange(9, 10))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.DIAMOND, new EntityVillager.MerchantOptionRandomRange(3, 4)), new EntityVillager.MerchantRecipeOptionEnchant(Items.DIAMOND_SWORD, new EntityVillager.MerchantOptionRandomRange(12, 15)), new EntityVillager.MerchantRecipeOptionEnchant(Items.DIAMOND_AXE, new EntityVillager.MerchantOptionRandomRange(9, 12))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.COAL, new EntityVillager.MerchantOptionRandomRange(16, 24)), new EntityVillager.MerchantRecipeOptionEnchant(Items.IRON_SHOVEL, new EntityVillager.MerchantOptionRandomRange(5, 7))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.IRON_INGOT, new EntityVillager.MerchantOptionRandomRange(7, 9)), new EntityVillager.MerchantRecipeOptionEnchant(Items.IRON_PICKAXE, new EntityVillager.MerchantOptionRandomRange(9, 11))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.DIAMOND, new EntityVillager.MerchantOptionRandomRange(3, 4)), new EntityVillager.MerchantRecipeOptionEnchant(Items.DIAMOND_PICKAXE, new EntityVillager.MerchantOptionRandomRange(12, 15))}}}, { { { new EntityVillager.MerchantRecipeOptionBuy(Items.PORKCHOP, new EntityVillager.MerchantOptionRandomRange(14, 18)), new EntityVillager.MerchantRecipeOptionBuy(Items.CHICKEN, new EntityVillager.MerchantOptionRandomRange(14, 18))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.COAL, new EntityVillager.MerchantOptionRandomRange(16, 24)), new EntityVillager.MerchantRecipeOptionSell(Items.COOKED_PORKCHOP, new EntityVillager.MerchantOptionRandomRange(-7, -5)), new EntityVillager.MerchantRecipeOptionSell(Items.COOKED_CHICKEN, new EntityVillager.MerchantOptionRandomRange(-8, -6))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.LEATHER, new EntityVillager.MerchantOptionRandomRange(9, 12)), new EntityVillager.MerchantRecipeOptionSell(Items.LEATHER_LEGGINGS, new EntityVillager.MerchantOptionRandomRange(2, 4))}, { new EntityVillager.MerchantRecipeOptionEnchant(Items.LEATHER_CHESTPLATE, new EntityVillager.MerchantOptionRandomRange(7, 12))}, { new EntityVillager.MerchantRecipeOptionSell(Items.SADDLE, new EntityVillager.MerchantOptionRandomRange(8, 10))}}}};
+    private static final EntityVillager.IMerchantRecipeOption[][][][] bO = new EntityVillager.IMerchantRecipeOption[][][][] { { { { new EntityVillager.MerchantRecipeOptionBuy(Items.WHEAT, new EntityVillager.MerchantOptionRandomRange(18, 22)), new EntityVillager.MerchantRecipeOptionBuy(Items.POTATO, new EntityVillager.MerchantOptionRandomRange(15, 19)), new EntityVillager.MerchantRecipeOptionBuy(Items.CARROT, new EntityVillager.MerchantOptionRandomRange(15, 19)), new EntityVillager.MerchantRecipeOptionSell(Items.BREAD, new EntityVillager.MerchantOptionRandomRange(-4, -2))}, { new EntityVillager.MerchantRecipeOptionBuy(Item.getItemOf(Blocks.PUMPKIN), new EntityVillager.MerchantOptionRandomRange(8, 13)), new EntityVillager.MerchantRecipeOptionSell(Items.PUMPKIN_PIE, new EntityVillager.MerchantOptionRandomRange(-3, -2))}, { new EntityVillager.MerchantRecipeOptionBuy(Item.getItemOf(Blocks.MELON_BLOCK), new EntityVillager.MerchantOptionRandomRange(7, 12)), new EntityVillager.MerchantRecipeOptionSell(Items.APPLE, new EntityVillager.MerchantOptionRandomRange(-7, -5))}, { new EntityVillager.MerchantRecipeOptionSell(Items.COOKIE, new EntityVillager.MerchantOptionRandomRange(-10, -6)), new EntityVillager.MerchantRecipeOptionSell(Items.CAKE, new EntityVillager.MerchantOptionRandomRange(1, 1))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.STRING, new EntityVillager.MerchantOptionRandomRange(15, 20)), new EntityVillager.MerchantRecipeOptionBuy(Items.COAL, new EntityVillager.MerchantOptionRandomRange(16, 24)), new EntityVillager.MerchantRecipeOptionProcess(Items.FISH, new EntityVillager.MerchantOptionRandomRange(6, 6), Items.COOKED_FISH, new EntityVillager.MerchantOptionRandomRange(6, 6))}, { new EntityVillager.MerchantRecipeOptionEnchant(Items.FISHING_ROD, new EntityVillager.MerchantOptionRandomRange(7, 8))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Item.getItemOf(Blocks.WOOL), new EntityVillager.MerchantOptionRandomRange(16, 22)), new EntityVillager.MerchantRecipeOptionSell(Items.SHEARS, new EntityVillager.MerchantOptionRandomRange(3, 4))}, { new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL)), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 1), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 2), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 3), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 4), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 5), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 6), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 7), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 8), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 9), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 10), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 11), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 12), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 13), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 14), new EntityVillager.MerchantOptionRandomRange(1, 2)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, 15), new EntityVillager.MerchantOptionRandomRange(1, 2))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.STRING, new EntityVillager.MerchantOptionRandomRange(15, 20)), new EntityVillager.MerchantRecipeOptionSell(Items.ARROW, new EntityVillager.MerchantOptionRandomRange(-12, -8))}, { new EntityVillager.MerchantRecipeOptionSell(Items.BOW, new EntityVillager.MerchantOptionRandomRange(2, 3)), new EntityVillager.MerchantRecipeOptionProcess(Item.getItemOf(Blocks.GRAVEL), new EntityVillager.MerchantOptionRandomRange(10, 10), Items.FLINT, new EntityVillager.MerchantOptionRandomRange(6, 10))}}}, { { { new EntityVillager.MerchantRecipeOptionBuy(Items.PAPER, new EntityVillager.MerchantOptionRandomRange(24, 36)), new EntityVillager.MerchantRecipeOptionBook()}, { new EntityVillager.MerchantRecipeOptionBuy(Items.BOOK, new EntityVillager.MerchantOptionRandomRange(8, 10)), new EntityVillager.MerchantRecipeOptionSell(Items.COMPASS, new EntityVillager.MerchantOptionRandomRange(10, 12)), new EntityVillager.MerchantRecipeOptionSell(Item.getItemOf(Blocks.BOOKSHELF), new EntityVillager.MerchantOptionRandomRange(3, 4))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.WRITTEN_BOOK, new EntityVillager.MerchantOptionRandomRange(2, 2)), new EntityVillager.MerchantRecipeOptionSell(Items.CLOCK, new EntityVillager.MerchantOptionRandomRange(10, 12)), new EntityVillager.MerchantRecipeOptionSell(Item.getItemOf(Blocks.GLASS), new EntityVillager.MerchantOptionRandomRange(-5, -3))}, { new EntityVillager.MerchantRecipeOptionBook()}, { new EntityVillager.MerchantRecipeOptionBook()}, { new EntityVillager.MerchantRecipeOptionSell(Items.NAME_TAG, new EntityVillager.MerchantOptionRandomRange(20, 22))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.PAPER, new EntityVillager.MerchantOptionRandomRange(24, 36))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.COMPASS, new EntityVillager.MerchantOptionRandomRange(1, 1))}, { new EntityVillager.MerchantRecipeOptionSell(Items.MAP, new EntityVillager.MerchantOptionRandomRange(7, 11))}, { new EntityVillager.h(new EntityVillager.MerchantOptionRandomRange(12, 20), "Monument", MapIcon.Type.MONUMENT), new EntityVillager.h(new EntityVillager.MerchantOptionRandomRange(16, 28), "Mansion", MapIcon.Type.MANSION)}}}, { { { new EntityVillager.MerchantRecipeOptionBuy(Items.ROTTEN_FLESH, new EntityVillager.MerchantOptionRandomRange(36, 40)), new EntityVillager.MerchantRecipeOptionBuy(Items.GOLD_INGOT, new EntityVillager.MerchantOptionRandomRange(8, 10))}, { new EntityVillager.MerchantRecipeOptionSell(Items.REDSTONE, new EntityVillager.MerchantOptionRandomRange(-4, -1)), new EntityVillager.MerchantRecipeOptionSell(new ItemStack(Items.DYE, 1, EnumColor.BLUE.getInvColorIndex()), new EntityVillager.MerchantOptionRandomRange(-2, -1))}, { new EntityVillager.MerchantRecipeOptionSell(Items.ENDER_PEARL, new EntityVillager.MerchantOptionRandomRange(4, 7)), new EntityVillager.MerchantRecipeOptionSell(Item.getItemOf(Blocks.GLOWSTONE), new EntityVillager.MerchantOptionRandomRange(-3, -1))}, { new EntityVillager.MerchantRecipeOptionSell(Items.EXPERIENCE_BOTTLE, new EntityVillager.MerchantOptionRandomRange(3, 11))}}}, { { { new EntityVillager.MerchantRecipeOptionBuy(Items.COAL, new EntityVillager.MerchantOptionRandomRange(16, 24)), new EntityVillager.MerchantRecipeOptionSell(Items.IRON_HELMET, new EntityVillager.MerchantOptionRandomRange(4, 6))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.IRON_INGOT, new EntityVillager.MerchantOptionRandomRange(7, 9)), new EntityVillager.MerchantRecipeOptionSell(Items.IRON_CHESTPLATE, new EntityVillager.MerchantOptionRandomRange(10, 14))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.DIAMOND, new EntityVillager.MerchantOptionRandomRange(3, 4)), new EntityVillager.MerchantRecipeOptionEnchant(Items.DIAMOND_CHESTPLATE, new EntityVillager.MerchantOptionRandomRange(16, 19))}, { new EntityVillager.MerchantRecipeOptionSell(Items.CHAINMAIL_BOOTS, new EntityVillager.MerchantOptionRandomRange(5, 7)), new EntityVillager.MerchantRecipeOptionSell(Items.CHAINMAIL_LEGGINGS, new EntityVillager.MerchantOptionRandomRange(9, 11)), new EntityVillager.MerchantRecipeOptionSell(Items.CHAINMAIL_HELMET, new EntityVillager.MerchantOptionRandomRange(5, 7)), new EntityVillager.MerchantRecipeOptionSell(Items.CHAINMAIL_CHESTPLATE, new EntityVillager.MerchantOptionRandomRange(11, 15))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.COAL, new EntityVillager.MerchantOptionRandomRange(16, 24)), new EntityVillager.MerchantRecipeOptionSell(Items.IRON_AXE, new EntityVillager.MerchantOptionRandomRange(6, 8))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.IRON_INGOT, new EntityVillager.MerchantOptionRandomRange(7, 9)), new EntityVillager.MerchantRecipeOptionEnchant(Items.IRON_SWORD, new EntityVillager.MerchantOptionRandomRange(9, 10))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.DIAMOND, new EntityVillager.MerchantOptionRandomRange(3, 4)), new EntityVillager.MerchantRecipeOptionEnchant(Items.DIAMOND_SWORD, new EntityVillager.MerchantOptionRandomRange(12, 15)), new EntityVillager.MerchantRecipeOptionEnchant(Items.DIAMOND_AXE, new EntityVillager.MerchantOptionRandomRange(9, 12))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.COAL, new EntityVillager.MerchantOptionRandomRange(16, 24)), new EntityVillager.MerchantRecipeOptionEnchant(Items.IRON_SHOVEL, new EntityVillager.MerchantOptionRandomRange(5, 7))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.IRON_INGOT, new EntityVillager.MerchantOptionRandomRange(7, 9)), new EntityVillager.MerchantRecipeOptionEnchant(Items.IRON_PICKAXE, new EntityVillager.MerchantOptionRandomRange(9, 11))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.DIAMOND, new EntityVillager.MerchantOptionRandomRange(3, 4)), new EntityVillager.MerchantRecipeOptionEnchant(Items.DIAMOND_PICKAXE, new EntityVillager.MerchantOptionRandomRange(12, 15))}}}, { { { new EntityVillager.MerchantRecipeOptionBuy(Items.PORKCHOP, new EntityVillager.MerchantOptionRandomRange(14, 18)), new EntityVillager.MerchantRecipeOptionBuy(Items.CHICKEN, new EntityVillager.MerchantOptionRandomRange(14, 18))}, { new EntityVillager.MerchantRecipeOptionBuy(Items.COAL, new EntityVillager.MerchantOptionRandomRange(16, 24)), new EntityVillager.MerchantRecipeOptionSell(Items.COOKED_PORKCHOP, new EntityVillager.MerchantOptionRandomRange(-7, -5)), new EntityVillager.MerchantRecipeOptionSell(Items.COOKED_CHICKEN, new EntityVillager.MerchantOptionRandomRange(-8, -6))}}, { { new EntityVillager.MerchantRecipeOptionBuy(Items.LEATHER, new EntityVillager.MerchantOptionRandomRange(9, 12)), new EntityVillager.MerchantRecipeOptionSell(Items.LEATHER_LEGGINGS, new EntityVillager.MerchantOptionRandomRange(2, 4))}, { new EntityVillager.MerchantRecipeOptionEnchant(Items.LEATHER_CHESTPLATE, new EntityVillager.MerchantOptionRandomRange(7, 12))}, { new EntityVillager.MerchantRecipeOptionSell(Items.SADDLE, new EntityVillager.MerchantOptionRandomRange(8, 10))}}}, { new EntityVillager.IMerchantRecipeOption[0][]}};
 
     public EntityVillager(World world) {
         this(world, 0);
@@ -41,6 +46,9 @@
     protected void r() {
         this.goalSelector.a(0, new PathfinderGoalFloat(this));
         this.goalSelector.a(1, new PathfinderGoalAvoidTarget(this, EntityZombie.class, 8.0F, 0.6D, 0.6D));
+        this.goalSelector.a(1, new PathfinderGoalAvoidTarget(this, EntityEvoker.class, 12.0F, 0.8D, 0.8D));
+        this.goalSelector.a(1, new PathfinderGoalAvoidTarget(this, EntityVindicator.class, 8.0F, 0.8D, 0.8D));
+        this.goalSelector.a(1, new PathfinderGoalAvoidTarget(this, EntityVex.class, 8.0F, 0.6D, 0.6D));
         this.goalSelector.a(1, new PathfinderGoalTradeWithPlayer(this));
         this.goalSelector.a(1, new PathfinderGoalLookAtTradingPlayer(this));
         this.goalSelector.a(2, new PathfinderGoalMoveIndoors(this));
@@ -51,11 +59,11 @@
         this.goalSelector.a(7, new PathfinderGoalTakeFlower(this));
         this.goalSelector.a(9, new PathfinderGoalInteract(this, EntityHuman.class, 3.0F, 1.0F));
         this.goalSelector.a(9, new PathfinderGoalInteractVillagers(this));
-        this.goalSelector.a(9, new PathfinderGoalRandomStroll(this, 0.6D));
+        this.goalSelector.a(9, new PathfinderGoalRandomStrollLand(this, 0.6D));
         this.goalSelector.a(10, new PathfinderGoalLookAtPlayer(this, EntityInsentient.class, 8.0F));
     }
 
-    private void do_() {
+    private void ds() {
         if (!this.bM) {
             this.bM = true;
             if (this.isBaby()) {
@@ -88,7 +96,7 @@
             this.profession = 70 + this.random.nextInt(50);
             this.village = this.world.ai().getClosestVillage(blockposition, 32);
             if (this.village == null) {
-                this.dc();
+                this.de();
             } else {
                 BlockPosition blockposition1 = this.village.a();
 
@@ -100,7 +108,7 @@
             }
         }
 
-        if (!this.dh() && this.bE > 0) {
+        if (!this.dk() && this.bE > 0) {
             --this.bE;
             if (this.bE <= 0) {
                 if (this.bF) {
@@ -114,7 +122,7 @@
                         }
                     }
 
-                    this.dp();
+                    this.dt();
                     this.bF = false;
                     if (this.village != null && this.bI != null) {
                         this.world.broadcastEntityEffect(this, (byte) 14);
@@ -129,19 +137,32 @@
         super.M();
     }
 
-    public boolean a(EntityHuman entityhuman, EnumHand enumhand, @Nullable ItemStack itemstack) {
-        boolean flag = itemstack != null && itemstack.getItem() == Items.SPAWN_EGG;
+    public boolean a(EntityHuman entityhuman, EnumHand enumhand) {
+        ItemStack itemstack = entityhuman.b(enumhand);
+        boolean flag = itemstack.getItem() == Items.NAME_TAG;
+
+        if (flag) {
+            itemstack.a(entityhuman, (EntityLiving) this, enumhand);
+            return true;
+        } else if (!this.a(itemstack, this.getClass()) && this.isAlive() && !this.dk() && !this.isBaby()) {
+            if (this.trades == null) {
+                this.dt();
+            }
 
-        if (!flag && this.isAlive() && !this.dh() && !this.isBaby()) {
-            if (!this.world.isClientSide && (this.trades == null || !this.trades.isEmpty())) {
+            if (enumhand == EnumHand.MAIN_HAND) {
+                entityhuman.b(StatisticList.H);
+            }
+
+            if (!this.world.isClientSide && !this.trades.isEmpty()) {
                 this.setTradingPlayer(entityhuman);
                 entityhuman.openTrade(this);
+            } else if (this.trades.isEmpty()) {
+                return super.a(entityhuman, enumhand);
             }
 
-            entityhuman.b(StatisticList.H);
             return true;
         } else {
-            return super.a(entityhuman, enumhand, itemstack);
+            return super.a(entityhuman, enumhand);
         }
     }
 
@@ -151,11 +172,11 @@
     }
 
     public static void b(DataConverterManager dataconvertermanager) {
-        EntityInsentient.a(dataconvertermanager, "Villager");
-        dataconvertermanager.a(DataConverterTypes.ENTITY, (DataInspector) (new DataInspectorItemList("Villager", new String[] { "Inventory"})));
+        EntityInsentient.a(dataconvertermanager, EntityVillager.class);
+        dataconvertermanager.a(DataConverterTypes.ENTITY, (DataInspector) (new DataInspectorItemList(EntityVillager.class, new String[] { "Inventory"})));
         dataconvertermanager.a(DataConverterTypes.ENTITY, new DataInspector() {
             public NBTTagCompound a(DataConverter dataconverter, NBTTagCompound nbttagcompound, int i) {
-                if ("Villager".equals(nbttagcompound.getString("id")) && nbttagcompound.hasKeyOfType("Offers", 10)) {
+                if (EntityTypes.getName(EntityVillager.class).equals(new MinecraftKey(nbttagcompound.getString("id"))) && nbttagcompound.hasKeyOfType("Offers", 10)) {
                     NBTTagCompound nbttagcompound1 = nbttagcompound.getCompound("Offers");
 
                     if (nbttagcompound1.hasKeyOfType("Recipes", 9)) {
@@ -193,7 +214,7 @@
         for (int i = 0; i < this.inventory.getSize(); ++i) {
             ItemStack itemstack = this.inventory.getItem(i);
 
-            if (itemstack != null) {
+            if (!itemstack.isEmpty()) {
                 nbttaglist.add(itemstack.save(new NBTTagCompound()));
             }
         }
@@ -217,15 +238,15 @@
         NBTTagList nbttaglist = nbttagcompound.getList("Inventory", 10);
 
         for (int i = 0; i < nbttaglist.size(); ++i) {
-            ItemStack itemstack = ItemStack.createStack(nbttaglist.get(i));
+            ItemStack itemstack = new ItemStack(nbttaglist.get(i));
 
-            if (itemstack != null) {
+            if (!itemstack.isEmpty()) {
                 this.inventory.a(itemstack);
             }
         }
 
         this.m(true);
-        this.do_();
+        this.ds();
     }
 
     protected boolean isTypeNotPersistent() {
@@ -233,15 +254,20 @@
     }
 
     protected SoundEffect G() {
-        return this.dh() ? SoundEffects.gJ : SoundEffects.gF;
+        return this.dk() ? SoundEffects.hk : SoundEffects.hg;
     }
 
-    protected SoundEffect bV() {
-        return SoundEffects.gH;
+    protected SoundEffect bW() {
+        return SoundEffects.hi;
     }
 
-    protected SoundEffect bW() {
-        return SoundEffects.gG;
+    protected SoundEffect bX() {
+        return SoundEffects.hh;
+    }
+
+    @Nullable
+    protected MinecraftKey J() {
+        return LootTables.at;
     }
 
     public void setProfession(int i) {
@@ -249,10 +275,10 @@
     }
 
     public int getProfession() {
-        return Math.max(((Integer) this.datawatcher.get(EntityVillager.by)).intValue() % 5, 0);
+        return Math.max(((Integer) this.datawatcher.get(EntityVillager.by)).intValue() % 6, 0);
     }
 
-    public boolean df() {
+    public boolean di() {
         return this.bA;
     }
 
@@ -264,7 +290,7 @@
         this.bB = flag;
     }
 
-    public boolean dg() {
+    public boolean dj() {
         return this.bB;
     }
 
@@ -318,22 +344,22 @@
         return this.tradingPlayer;
     }
 
-    public boolean dh() {
+    public boolean dk() {
         return this.tradingPlayer != null;
     }
 
     public boolean r(boolean flag) {
-        if (!this.bG && flag && this.dk()) {
+        if (!this.bG && flag && this.dn()) {
             boolean flag1 = false;
 
             for (int i = 0; i < this.inventory.getSize(); ++i) {
                 ItemStack itemstack = this.inventory.getItem(i);
 
-                if (itemstack != null) {
-                    if (itemstack.getItem() == Items.BREAD && itemstack.count >= 3) {
+                if (!itemstack.isEmpty()) {
+                    if (itemstack.getItem() == Items.BREAD && itemstack.getCount() >= 3) {
                         flag1 = true;
                         this.inventory.splitStack(i, 3);
-                    } else if ((itemstack.getItem() == Items.POTATO || itemstack.getItem() == Items.CARROT) && itemstack.count >= 12) {
+                    } else if ((itemstack.getItem() == Items.POTATO || itemstack.getItem() == Items.CARROT) && itemstack.getCount() >= 12) {
                         flag1 = true;
                         this.inventory.splitStack(i, 12);
                     }
@@ -357,7 +383,7 @@
     public void a(MerchantRecipe merchantrecipe) {
         merchantrecipe.g();
         this.a_ = -this.C();
-        this.a(SoundEffects.gK, this.ch(), this.ci());
+        this.a(SoundEffects.hl, this.ci(), this.cj());
         int i = 3 + this.random.nextInt(4);
 
         if (merchantrecipe.e() == 1 || this.random.nextInt(5) == 0) {
@@ -374,7 +400,7 @@
         }
 
         if (merchantrecipe.getBuyItem1().getItem() == Items.EMERALD) {
-            this.riches += merchantrecipe.getBuyItem1().count;
+            this.riches += merchantrecipe.getBuyItem1().getCount();
         }
 
         if (merchantrecipe.j()) {
@@ -386,24 +412,21 @@
     public void a(ItemStack itemstack) {
         if (!this.world.isClientSide && this.a_ > -this.C() + 20) {
             this.a_ = -this.C();
-            if (itemstack != null) {
-                this.a(SoundEffects.gK, this.ch(), this.ci());
-            } else {
-                this.a(SoundEffects.gI, this.ch(), this.ci());
-            }
+            this.a(itemstack.isEmpty() ? SoundEffects.hj : SoundEffects.hl, this.ci(), this.cj());
         }
 
     }
 
+    @Nullable
     public MerchantRecipeList getOffers(EntityHuman entityhuman) {
         if (this.trades == null) {
-            this.dp();
+            this.dt();
         }
 
         return this.trades;
     }
 
-    private void dp() {
+    private void dt() {
         EntityVillager.IMerchantRecipeOption[][][] aentityvillager_imerchantrecipeoption = EntityVillager.bO[this.getProfession()];
 
         if (this.bJ != 0 && this.bK != 0) {
@@ -419,20 +442,31 @@
 
         int i = this.bJ - 1;
         int j = this.bK - 1;
-        EntityVillager.IMerchantRecipeOption[][] aentityvillager_imerchantrecipeoption1 = aentityvillager_imerchantrecipeoption[i];
 
-        if (j >= 0 && j < aentityvillager_imerchantrecipeoption1.length) {
-            EntityVillager.IMerchantRecipeOption[] aentityvillager_imerchantrecipeoption2 = aentityvillager_imerchantrecipeoption1[j];
-            EntityVillager.IMerchantRecipeOption[] aentityvillager_imerchantrecipeoption3 = aentityvillager_imerchantrecipeoption2;
-            int k = aentityvillager_imerchantrecipeoption2.length;
+        if (i >= 0 && i < aentityvillager_imerchantrecipeoption.length) {
+            EntityVillager.IMerchantRecipeOption[][] aentityvillager_imerchantrecipeoption1 = aentityvillager_imerchantrecipeoption[i];
+
+            if (j >= 0 && j < aentityvillager_imerchantrecipeoption1.length) {
+                EntityVillager.IMerchantRecipeOption[] aentityvillager_imerchantrecipeoption2 = aentityvillager_imerchantrecipeoption1[j];
+                EntityVillager.IMerchantRecipeOption[] aentityvillager_imerchantrecipeoption3 = aentityvillager_imerchantrecipeoption2;
+                int k = aentityvillager_imerchantrecipeoption2.length;
 
-            for (int l = 0; l < k; ++l) {
-                EntityVillager.IMerchantRecipeOption entityvillager_imerchantrecipeoption = aentityvillager_imerchantrecipeoption3[l];
+                for (int l = 0; l < k; ++l) {
+                    EntityVillager.IMerchantRecipeOption entityvillager_imerchantrecipeoption = aentityvillager_imerchantrecipeoption3[l];
 
-                entityvillager_imerchantrecipeoption.a(this.trades, this.random);
+                    entityvillager_imerchantrecipeoption.a(this, this.trades, this.random);
+                }
             }
+
         }
+    }
+
+    public World t_() {
+        return this.world;
+    }
 
+    public BlockPosition u_() {
+        return new BlockPosition(this);
     }
 
     public IChatBaseComponent getScoreboardDisplayName() {
@@ -447,7 +481,7 @@
             return chatcomponenttext;
         } else {
             if (this.trades == null) {
-                this.dp();
+                this.dt();
             }
 
             String s1 = null;
@@ -466,7 +500,11 @@
                 break;
 
             case 1:
-                s1 = "librarian";
+                if (this.bJ == 1) {
+                    s1 = "librarian";
+                } else if (this.bJ == 2) {
+                    s1 = "cartographer";
+                }
                 break;
 
             case 2:
@@ -489,6 +527,10 @@
                 } else if (this.bJ == 2) {
                     s1 = "leather";
                 }
+                break;
+
+            case 5:
+                s1 = "nitwit";
             }
 
             if (s1 != null) {
@@ -513,13 +555,21 @@
 
     @Nullable
     public GroupDataEntity prepare(DifficultyDamageScaler difficultydamagescaler, @Nullable GroupDataEntity groupdataentity) {
+        return this.a(difficultydamagescaler, groupdataentity, true);
+    }
+
+    public GroupDataEntity a(DifficultyDamageScaler difficultydamagescaler, @Nullable GroupDataEntity groupdataentity, boolean flag) {
         groupdataentity = super.prepare(difficultydamagescaler, groupdataentity);
-        this.setProfession(this.world.random.nextInt(5));
-        this.do_();
+        if (flag) {
+            this.setProfession(this.world.random.nextInt(6));
+        }
+
+        this.ds();
+        this.dt();
         return groupdataentity;
     }
 
-    public void di() {
+    public void dl() {
         this.bL = true;
     }
 
@@ -551,7 +601,7 @@
         }
     }
 
-    public InventorySubcontainer dj() {
+    public InventorySubcontainer dm() {
         return this.inventory;
     }
 
@@ -562,10 +612,10 @@
         if (this.a(item)) {
             ItemStack itemstack1 = this.inventory.a(itemstack);
 
-            if (itemstack1 == null) {
+            if (itemstack1.isEmpty()) {
                 entityitem.die();
             } else {
-                itemstack.count = itemstack1.count;
+                itemstack.setCount(itemstack1.getCount());
             }
         }
 
@@ -575,15 +625,15 @@
         return item == Items.BREAD || item == Items.POTATO || item == Items.CARROT || item == Items.WHEAT || item == Items.WHEAT_SEEDS || item == Items.BEETROOT || item == Items.BEETROOT_SEEDS;
     }
 
-    public boolean dk() {
+    public boolean dn() {
         return this.m(1);
     }
 
-    public boolean dl() {
+    public boolean do_() {
         return this.m(2);
     }
 
-    public boolean dm() {
+    public boolean dp() {
         boolean flag = this.getProfession() == 0;
 
         return flag ? !this.m(5) : !this.m(1);
@@ -595,12 +645,12 @@
         for (int j = 0; j < this.inventory.getSize(); ++j) {
             ItemStack itemstack = this.inventory.getItem(j);
 
-            if (itemstack != null) {
-                if (itemstack.getItem() == Items.BREAD && itemstack.count >= 3 * i || itemstack.getItem() == Items.POTATO && itemstack.count >= 12 * i || itemstack.getItem() == Items.CARROT && itemstack.count >= 12 * i || itemstack.getItem() == Items.BEETROOT && itemstack.count >= 12 * i) {
+            if (!itemstack.isEmpty()) {
+                if (itemstack.getItem() == Items.BREAD && itemstack.getCount() >= 3 * i || itemstack.getItem() == Items.POTATO && itemstack.getCount() >= 12 * i || itemstack.getItem() == Items.CARROT && itemstack.getCount() >= 12 * i || itemstack.getItem() == Items.BEETROOT && itemstack.getCount() >= 12 * i) {
                     return true;
                 }
 
-                if (flag && itemstack.getItem() == Items.WHEAT && itemstack.count >= 9 * i) {
+                if (flag && itemstack.getItem() == Items.WHEAT && itemstack.getCount() >= 9 * i) {
                     return true;
                 }
             }
@@ -609,11 +659,11 @@
         return false;
     }
 
-    public boolean dn() {
+    public boolean dq() {
         for (int i = 0; i < this.inventory.getSize(); ++i) {
             ItemStack itemstack = this.inventory.getItem(i);
 
-            if (itemstack != null && (itemstack.getItem() == Items.WHEAT_SEEDS || itemstack.getItem() == Items.POTATO || itemstack.getItem() == Items.CARROT || itemstack.getItem() == Items.BEETROOT_SEEDS)) {
+            if (!itemstack.isEmpty() && (itemstack.getItem() == Items.WHEAT_SEEDS || itemstack.getItem() == Items.POTATO || itemstack.getItem() == Items.CARROT || itemstack.getItem() == Items.BEETROOT_SEEDS)) {
                 return true;
             }
         }
@@ -621,7 +671,7 @@
         return false;
     }
 
-    public boolean c(int i, @Nullable ItemStack itemstack) {
+    public boolean c(int i, ItemStack itemstack) {
         if (super.c(i, itemstack)) {
             return true;
         } else {
@@ -654,20 +704,40 @@
             this.d = entityvillager_merchantoptionrandomrange1;
         }
 
-        public void a(MerchantRecipeList merchantrecipelist, Random random) {
-            int i = 1;
+        public void a(IMerchant imerchant, MerchantRecipeList merchantrecipelist, Random random) {
+            int i = this.b.a(random);
+            int j = this.d.a(random);
 
-            if (this.b != null) {
-                i = this.b.a(random);
-            }
+            merchantrecipelist.add(new MerchantRecipe(new ItemStack(this.a.getItem(), i, this.a.getData()), new ItemStack(Items.EMERALD), new ItemStack(this.c.getItem(), j, this.c.getData())));
+        }
+    }
 
-            int j = 1;
+    static class h implements EntityVillager.IMerchantRecipeOption {
 
-            if (this.d != null) {
-                j = this.d.a(random);
+        public EntityVillager.MerchantOptionRandomRange a;
+        public String b;
+        public MapIcon.Type c;
+
+        public h(EntityVillager.MerchantOptionRandomRange entityvillager_merchantoptionrandomrange, String s, MapIcon.Type mapicon_type) {
+            this.a = entityvillager_merchantoptionrandomrange;
+            this.b = s;
+            this.c = mapicon_type;
+        }
+
+        public void a(IMerchant imerchant, MerchantRecipeList merchantrecipelist, Random random) {
+            int i = this.a.a(random);
+            World world = imerchant.t_();
+            BlockPosition blockposition = world.a(this.b, imerchant.u_(), true);
+
+            if (blockposition != null) {
+                ItemStack itemstack = ItemWorldMap.a(world, (double) blockposition.getX(), (double) blockposition.getZ(), (byte) 2, true, true);
+
+                ItemWorldMap.a(world, itemstack);
+                WorldMap.a(itemstack, blockposition, "+", this.c);
+                itemstack.f("filled_map." + this.b.toLowerCase(Locale.ROOT));
+                merchantrecipelist.add(new MerchantRecipe(new ItemStack(Items.EMERALD, i), new ItemStack(Items.COMPASS), itemstack));
             }
 
-            merchantrecipelist.add(new MerchantRecipe(new ItemStack(this.a.getItem(), i, this.a.getData()), new ItemStack(Items.EMERALD), new ItemStack(this.c.getItem(), j, this.c.getData())));
         }
     }
 
@@ -675,13 +745,13 @@
 
         public MerchantRecipeOptionBook() {}
 
-        public void a(MerchantRecipeList merchantrecipelist, Random random) {
+        public void a(IMerchant imerchant, MerchantRecipeList merchantrecipelist, Random random) {
             Enchantment enchantment = (Enchantment) Enchantment.enchantments.a(random);
             int i = MathHelper.nextInt(random, enchantment.getStartLevel(), enchantment.getMaxLevel());
             ItemStack itemstack = Items.ENCHANTED_BOOK.a(new WeightedRandomEnchant(enchantment, i));
             int j = 2 + random.nextInt(5 + i * 10) + 3 * i;
 
-            if (enchantment.e()) {
+            if (enchantment.isTreasure()) {
                 j *= 2;
             }
 
@@ -703,7 +773,7 @@
             this.b = entityvillager_merchantoptionrandomrange;
         }
 
-        public void a(MerchantRecipeList merchantrecipelist, Random random) {
+        public void a(IMerchant imerchant, MerchantRecipeList merchantrecipelist, Random random) {
             int i = 1;
 
             if (this.b != null) {
@@ -711,9 +781,8 @@
             }
 
             ItemStack itemstack = new ItemStack(Items.EMERALD, i, 0);
-            ItemStack itemstack1 = new ItemStack(this.a.getItem(), 1, this.a.getData());
+            ItemStack itemstack1 = EnchantmentManager.a(random, new ItemStack(this.a.getItem(), 1, this.a.getData()), 5 + random.nextInt(15), false);
 
-            itemstack1 = EnchantmentManager.a(random, itemstack1, 5 + random.nextInt(15), false);
             merchantrecipelist.add(new MerchantRecipe(itemstack, itemstack1));
         }
     }
@@ -733,7 +802,7 @@
             this.b = entityvillager_merchantoptionrandomrange;
         }
 
-        public void a(MerchantRecipeList merchantrecipelist, Random random) {
+        public void a(IMerchant imerchant, MerchantRecipeList merchantrecipelist, Random random) {
             int i = 1;
 
             if (this.b != null) {
@@ -765,7 +834,7 @@
             this.b = entityvillager_merchantoptionrandomrange;
         }
 
-        public void a(MerchantRecipeList merchantrecipelist, Random random) {
+        public void a(IMerchant imerchant, MerchantRecipeList merchantrecipelist, Random random) {
             int i = 1;
 
             if (this.b != null) {
@@ -778,13 +847,17 @@
 
     interface IMerchantRecipeOption {
 
-        void a(MerchantRecipeList merchantrecipelist, Random random);
+        void a(IMerchant imerchant, MerchantRecipeList merchantrecipelist, Random random);
     }
 
     static class MerchantOptionRandomRange extends Tuple<Integer, Integer> {
 
         public MerchantOptionRandomRange(int i, int j) {
             super(Integer.valueOf(i), Integer.valueOf(j));
+            if (j < i) {
+                EntityVillager.bx.warn("PriceRange({}, {}) invalid, {} smaller than {}", new Object[] { Integer.valueOf(i), Integer.valueOf(j), Integer.valueOf(j), Integer.valueOf(i)});
+            }
+
         }
 
         public int a(Random random) {
