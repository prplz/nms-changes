--- a/net/minecraft/server/MerchantRecipe.java
+++ b/net/minecraft/server/MerchantRecipe.java
@@ -1,7 +1,5 @@
 package net.minecraft.server;
 
-import javax.annotation.Nullable;
-
 public class MerchantRecipe {
 
     public ItemStack buyingItem1;
@@ -12,14 +10,20 @@
     public boolean rewardExp;
 
     public MerchantRecipe(NBTTagCompound nbttagcompound) {
+        this.buyingItem1 = ItemStack.a;
+        this.buyingItem2 = ItemStack.a;
+        this.sellingItem = ItemStack.a;
         this.a(nbttagcompound);
     }
 
-    public MerchantRecipe(ItemStack itemstack, @Nullable ItemStack itemstack1, ItemStack itemstack2) {
+    public MerchantRecipe(ItemStack itemstack, ItemStack itemstack1, ItemStack itemstack2) {
         this(itemstack, itemstack1, itemstack2, 0, 7);
     }
 
-    public MerchantRecipe(ItemStack itemstack, @Nullable ItemStack itemstack1, ItemStack itemstack2, int i, int j) {
+    public MerchantRecipe(ItemStack itemstack, ItemStack itemstack1, ItemStack itemstack2, int i, int j) {
+        this.buyingItem1 = ItemStack.a;
+        this.buyingItem2 = ItemStack.a;
+        this.sellingItem = ItemStack.a;
         this.buyingItem1 = itemstack;
         this.buyingItem2 = itemstack1;
         this.sellingItem = itemstack2;
@@ -29,7 +33,7 @@
     }
 
     public MerchantRecipe(ItemStack itemstack, ItemStack itemstack1) {
-        this(itemstack, (ItemStack) null, itemstack1);
+        this(itemstack, ItemStack.a, itemstack1);
     }
 
     public MerchantRecipe(ItemStack itemstack, Item item) {
@@ -45,7 +49,7 @@
     }
 
     public boolean hasSecondItem() {
-        return this.buyingItem2 != null;
+        return !this.buyingItem2.isEmpty();
     }
 
     public ItemStack getBuyItem3() {
@@ -79,12 +83,12 @@
     public void a(NBTTagCompound nbttagcompound) {
         NBTTagCompound nbttagcompound1 = nbttagcompound.getCompound("buy");
 
-        this.buyingItem1 = ItemStack.createStack(nbttagcompound1);
+        this.buyingItem1 = new ItemStack(nbttagcompound1);
         NBTTagCompound nbttagcompound2 = nbttagcompound.getCompound("sell");
 
-        this.sellingItem = ItemStack.createStack(nbttagcompound2);
+        this.sellingItem = new ItemStack(nbttagcompound2);
         if (nbttagcompound.hasKeyOfType("buyB", 10)) {
-            this.buyingItem2 = ItemStack.createStack(nbttagcompound.getCompound("buyB"));
+            this.buyingItem2 = new ItemStack(nbttagcompound.getCompound("buyB"));
         }
 
         if (nbttagcompound.hasKeyOfType("uses", 99)) {
@@ -110,7 +114,7 @@
 
         nbttagcompound.set("buy", this.buyingItem1.save(new NBTTagCompound()));
         nbttagcompound.set("sell", this.sellingItem.save(new NBTTagCompound()));
-        if (this.buyingItem2 != null) {
+        if (!this.buyingItem2.isEmpty()) {
             nbttagcompound.set("buyB", this.buyingItem2.save(new NBTTagCompound()));
         }
 
