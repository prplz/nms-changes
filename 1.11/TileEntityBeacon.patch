--- a/net/minecraft/server/TileEntityBeacon.java
+++ b/net/minecraft/server/TileEntityBeacon.java
@@ -15,24 +15,26 @@
     private static final Set<MobEffectList> f = Sets.newHashSet();
     private final List<TileEntityBeacon.BeaconColorTracker> g = Lists.newArrayList();
     private boolean j;
-    private int k = -1;
+    public int levels = -1;
     @Nullable
-    private MobEffectList l;
+    public MobEffectList primaryEffect;
     @Nullable
-    private MobEffectList m;
+    public MobEffectList secondaryEffect;
     private ItemStack inventorySlot;
     private String o;
 
-    public TileEntityBeacon() {}
+    public TileEntityBeacon() {
+        this.inventorySlot = ItemStack.a;
+    }
 
-    public void E_() {
+    public void F_() {
         if (this.world.getTime() % 80L == 0L) {
-            this.m();
+            this.n();
         }
 
     }
 
-    public void m() {
+    public void n() {
         if (this.world != null) {
             this.F();
             this.E();
@@ -41,19 +43,19 @@
     }
 
     private void E() {
-        if (this.j && this.k > 0 && !this.world.isClientSide && this.l != null) {
-            double d0 = (double) (this.k * 10 + 10);
+        if (this.j && this.levels > 0 && !this.world.isClientSide && this.primaryEffect != null) {
+            double d0 = (double) (this.levels * 10 + 10);
             byte b0 = 0;
 
-            if (this.k >= 4 && this.l == this.m) {
+            if (this.levels >= 4 && this.primaryEffect == this.secondaryEffect) {
                 b0 = 1;
             }
 
-            int i = (9 + this.k * 2) * 20;
+            int i = (9 + this.levels * 2) * 20;
             int j = this.position.getX();
             int k = this.position.getY();
             int l = this.position.getZ();
-            AxisAlignedBB axisalignedbb = (new AxisAlignedBB((double) j, (double) k, (double) l, (double) (j + 1), (double) (k + 1), (double) (l + 1))).g(d0).a(0.0D, (double) this.world.getHeight(), 0.0D);
+            AxisAlignedBB axisalignedbb = (new AxisAlignedBB((double) j, (double) k, (double) l, (double) (j + 1), (double) (k + 1), (double) (l + 1))).g(d0).b(0.0D, (double) this.world.getHeight(), 0.0D);
             List list = this.world.a(EntityHuman.class, axisalignedbb);
             Iterator iterator = list.iterator();
 
@@ -61,15 +63,15 @@
 
             while (iterator.hasNext()) {
                 entityhuman = (EntityHuman) iterator.next();
-                entityhuman.addEffect(new MobEffect(this.l, i, b0, true, true));
+                entityhuman.addEffect(new MobEffect(this.primaryEffect, i, b0, true, true));
             }
 
-            if (this.k >= 4 && this.l != this.m && this.m != null) {
+            if (this.levels >= 4 && this.primaryEffect != this.secondaryEffect && this.secondaryEffect != null) {
                 iterator = list.iterator();
 
                 while (iterator.hasNext()) {
                     entityhuman = (EntityHuman) iterator.next();
-                    entityhuman.addEffect(new MobEffect(this.m, i, 0, true, true));
+                    entityhuman.addEffect(new MobEffect(this.secondaryEffect, i, 0, true, true));
                 }
             }
         }
@@ -77,12 +79,12 @@
     }
 
     private void F() {
-        int i = this.k;
+        int i = this.levels;
         int j = this.position.getX();
         int k = this.position.getY();
         int l = this.position.getZ();
 
-        this.k = 0;
+        this.levels = 0;
         this.g.clear();
         this.j = true;
         TileEntityBeacon.BeaconColorTracker tileentitybeacon_beaconcolortracker = new TileEntityBeacon.BeaconColorTracker(EntitySheep.a(EnumColor.WHITE));
@@ -129,7 +131,7 @@
         }
 
         if (this.j) {
-            for (i1 = 1; i1 <= 4; this.k = i1++) {
+            for (i1 = 1; i1 <= 4; this.levels = i1++) {
                 int j1 = k - i1;
 
                 if (j1 < 0) {
@@ -154,12 +156,12 @@
                 }
             }
 
-            if (this.k == 0) {
+            if (this.levels == 0) {
                 this.j = false;
             }
         }
 
-        if (!this.world.isClientSide && this.k == 4 && i < this.k) {
+        if (!this.world.isClientSide && this.levels == 4 && i < this.levels) {
             Iterator iterator = this.world.a(EntityHuman.class, (new AxisAlignedBB((double) j, (double) k, (double) l, (double) j, (double) (k - 4), (double) l)).grow(10.0D, 5.0D, 10.0D)).iterator();
 
             while (iterator.hasNext()) {
@@ -173,10 +175,10 @@
 
     @Nullable
     public PacketPlayOutTileEntityData getUpdatePacket() {
-        return new PacketPlayOutTileEntityData(this.position, 3, this.c());
+        return new PacketPlayOutTileEntityData(this.position, 3, this.d());
     }
 
-    public NBTTagCompound c() {
+    public NBTTagCompound d() {
         return this.save(new NBTTagCompound());
     }
 
@@ -189,16 +191,16 @@
 
     public void a(NBTTagCompound nbttagcompound) {
         super.a(nbttagcompound);
-        this.l = f(nbttagcompound.getInt("Primary"));
-        this.m = f(nbttagcompound.getInt("Secondary"));
-        this.k = nbttagcompound.getInt("Levels");
+        this.primaryEffect = f(nbttagcompound.getInt("Primary"));
+        this.secondaryEffect = f(nbttagcompound.getInt("Secondary"));
+        this.levels = nbttagcompound.getInt("Levels");
     }
 
     public NBTTagCompound save(NBTTagCompound nbttagcompound) {
         super.save(nbttagcompound);
-        nbttagcompound.setInt("Primary", MobEffectList.getId(this.l));
-        nbttagcompound.setInt("Secondary", MobEffectList.getId(this.m));
-        nbttagcompound.setInt("Levels", this.k);
+        nbttagcompound.setInt("Primary", MobEffectList.getId(this.primaryEffect));
+        nbttagcompound.setInt("Secondary", MobEffectList.getId(this.secondaryEffect));
+        nbttagcompound.setInt("Levels", this.levels);
         return nbttagcompound;
     }
 
@@ -206,41 +208,41 @@
         return 1;
     }
 
-    @Nullable
+    public boolean w_() {
+        return this.inventorySlot.isEmpty();
+    }
+
     public ItemStack getItem(int i) {
-        return i == 0 ? this.inventorySlot : null;
+        return i == 0 ? this.inventorySlot : ItemStack.a;
     }
 
-    @Nullable
     public ItemStack splitStack(int i, int j) {
-        if (i == 0 && this.inventorySlot != null) {
-            if (j >= this.inventorySlot.count) {
+        if (i == 0 && !this.inventorySlot.isEmpty()) {
+            if (j >= this.inventorySlot.getCount()) {
                 ItemStack itemstack = this.inventorySlot;
 
-                this.inventorySlot = null;
+                this.inventorySlot = ItemStack.a;
                 return itemstack;
             } else {
-                this.inventorySlot.count -= j;
-                return new ItemStack(this.inventorySlot.getItem(), j, this.inventorySlot.getData());
+                return this.inventorySlot.cloneAndSubtract(j);
             }
         } else {
-            return null;
+            return ItemStack.a;
         }
     }
 
-    @Nullable
     public ItemStack splitWithoutUpdate(int i) {
         if (i == 0) {
             ItemStack itemstack = this.inventorySlot;
 
-            this.inventorySlot = null;
+            this.inventorySlot = ItemStack.a;
             return itemstack;
         } else {
-            return null;
+            return ItemStack.a;
         }
     }
 
-    public void setItem(int i, @Nullable ItemStack itemstack) {
+    public void setItem(int i, ItemStack itemstack) {
         if (i == 0) {
             this.inventorySlot = itemstack;
         }
@@ -264,7 +266,7 @@
     }
 
     public boolean a(EntityHuman entityhuman) {
-        return this.world.getTileEntity(this.position) != this ? false : entityhuman.e((double) this.position.getX() + 0.5D, (double) this.position.getY() + 0.5D, (double) this.position.getZ() + 0.5D) <= 64.0D;
+        return this.world.getTileEntity(this.position) != this ? false : entityhuman.d((double) this.position.getX() + 0.5D, (double) this.position.getY() + 0.5D, (double) this.position.getZ() + 0.5D) <= 64.0D;
     }
 
     public void startOpen(EntityHuman entityhuman) {}
@@ -286,13 +288,13 @@
     public int getProperty(int i) {
         switch (i) {
         case 0:
-            return this.k;
+            return this.levels;
 
         case 1:
-            return MobEffectList.getId(this.l);
+            return MobEffectList.getId(this.primaryEffect);
 
         case 2:
-            return MobEffectList.getId(this.m);
+            return MobEffectList.getId(this.secondaryEffect);
 
         default:
             return 0;
@@ -302,30 +304,30 @@
     public void setProperty(int i, int j) {
         switch (i) {
         case 0:
-            this.k = j;
+            this.levels = j;
             break;
 
         case 1:
-            this.l = f(j);
+            this.primaryEffect = f(j);
             break;
 
         case 2:
-            this.m = f(j);
+            this.secondaryEffect = f(j);
         }
 
     }
 
-    public int g() {
+    public int h() {
         return 3;
     }
 
-    public void l() {
-        this.inventorySlot = null;
+    public void clear() {
+        this.inventorySlot = ItemStack.a;
     }
 
     public boolean c(int i, int j) {
         if (i == 1) {
-            this.m();
+            this.n();
             return true;
         } else {
             return super.c(i, j);
