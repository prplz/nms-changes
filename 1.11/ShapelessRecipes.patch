--- a/net/minecraft/server/ShapelessRecipes.java
+++ b/net/minecraft/server/ShapelessRecipes.java
@@ -4,7 +4,6 @@
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
-import javax.annotation.Nullable;
 
 public class ShapelessRecipes implements IRecipe {
 
@@ -16,33 +15,32 @@
         this.ingredients = list;
     }
 
-    @Nullable
     public ItemStack b() {
         return this.result;
     }
 
-    public ItemStack[] b(InventoryCrafting inventorycrafting) {
-        ItemStack[] aitemstack = new ItemStack[inventorycrafting.getSize()];
+    public NonNullList<ItemStack> b(InventoryCrafting inventorycrafting) {
+        NonNullList nonnulllist = NonNullList.a(inventorycrafting.getSize(), ItemStack.a);
 
-        for (int i = 0; i < aitemstack.length; ++i) {
+        for (int i = 0; i < nonnulllist.size(); ++i) {
             ItemStack itemstack = inventorycrafting.getItem(i);
 
-            if (itemstack != null && itemstack.getItem().r()) {
-                aitemstack[i] = new ItemStack(itemstack.getItem().q());
+            if (itemstack.getItem().s()) {
+                nonnulllist.set(i, new ItemStack(itemstack.getItem().r()));
             }
         }
 
-        return aitemstack;
+        return nonnulllist;
     }
 
     public boolean a(InventoryCrafting inventorycrafting, World world) {
         ArrayList arraylist = Lists.newArrayList(this.ingredients);
 
-        for (int i = 0; i < inventorycrafting.h(); ++i) {
-            for (int j = 0; j < inventorycrafting.i(); ++j) {
+        for (int i = 0; i < inventorycrafting.i(); ++i) {
+            for (int j = 0; j < inventorycrafting.j(); ++j) {
                 ItemStack itemstack = inventorycrafting.c(j, i);
 
-                if (itemstack != null) {
+                if (!itemstack.isEmpty()) {
                     boolean flag = false;
                     Iterator iterator = arraylist.iterator();
 
@@ -66,7 +64,6 @@
         return arraylist.isEmpty();
     }
 
-    @Nullable
     public ItemStack craftItem(InventoryCrafting inventorycrafting) {
         return this.result.cloneItemStack();
     }
