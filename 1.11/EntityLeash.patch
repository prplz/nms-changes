--- a/net/minecraft/server/EntityLeash.java
+++ b/net/minecraft/server/EntityLeash.java
@@ -18,6 +18,7 @@
         float f2 = 0.25F;
 
         this.a(new AxisAlignedBB(this.locX - 0.1875D, this.locY - 0.25D + 0.125D, this.locZ - 0.1875D, this.locX + 0.1875D, this.locY + 0.25D + 0.125D, this.locZ + 0.1875D));
+        this.attachedToPlayer = true;
     }
 
     public void setPosition(double d0, double d1, double d2) {
@@ -45,7 +46,7 @@
     }
 
     public void a(@Nullable Entity entity) {
-        this.a(SoundEffects.dj, 1.0F, 1.0F);
+        this.a(SoundEffects.dt, 1.0F, 1.0F);
     }
 
     public boolean d(NBTTagCompound nbttagcompound) {
@@ -56,35 +57,28 @@
 
     public void a(NBTTagCompound nbttagcompound) {}
 
-    public boolean a(EntityHuman entityhuman, @Nullable ItemStack itemstack, EnumHand enumhand) {
+    public boolean b(EntityHuman entityhuman, EnumHand enumhand) {
         if (this.world.isClientSide) {
             return true;
         } else {
             boolean flag = false;
-            double d0;
-            List list;
-            Iterator iterator;
+            double d0 = 7.0D;
+            List list = this.world.a(EntityInsentient.class, new AxisAlignedBB(this.locX - 7.0D, this.locY - 7.0D, this.locZ - 7.0D, this.locX + 7.0D, this.locY + 7.0D, this.locZ + 7.0D));
+            Iterator iterator = list.iterator();
+
             EntityInsentient entityinsentient;
 
-            if (itemstack != null && itemstack.getItem() == Items.LEAD) {
-                d0 = 7.0D;
-                list = this.world.a(EntityInsentient.class, new AxisAlignedBB(this.locX - 7.0D, this.locY - 7.0D, this.locZ - 7.0D, this.locX + 7.0D, this.locY + 7.0D, this.locZ + 7.0D));
-                iterator = list.iterator();
-
-                while (iterator.hasNext()) {
-                    entityinsentient = (EntityInsentient) iterator.next();
-                    if (entityinsentient.isLeashed() && entityinsentient.getLeashHolder() == entityhuman) {
-                        entityinsentient.setLeashHolder(this, true);
-                        flag = true;
-                    }
+            while (iterator.hasNext()) {
+                entityinsentient = (EntityInsentient) iterator.next();
+                if (entityinsentient.isLeashed() && entityinsentient.getLeashHolder() == entityhuman) {
+                    entityinsentient.setLeashHolder(this, true);
+                    flag = true;
                 }
             }
 
             if (!flag) {
                 this.die();
                 if (entityhuman.abilities.canInstantlyBuild) {
-                    d0 = 7.0D;
-                    list = this.world.a(EntityInsentient.class, new AxisAlignedBB(this.locX - 7.0D, this.locY - 7.0D, this.locZ - 7.0D, this.locX + 7.0D, this.locY + 7.0D, this.locZ + 7.0D));
                     iterator = list.iterator();
 
                     while (iterator.hasNext()) {
@@ -107,12 +101,12 @@
     public static EntityLeash a(World world, BlockPosition blockposition) {
         EntityLeash entityleash = new EntityLeash(world, blockposition);
 
-        entityleash.attachedToPlayer = true;
         world.addEntity(entityleash);
         entityleash.o();
         return entityleash;
     }
 
+    @Nullable
     public static EntityLeash b(World world, BlockPosition blockposition) {
         int i = blockposition.getX();
         int j = blockposition.getY();
@@ -134,6 +128,6 @@
     }
 
     public void o() {
-        this.a(SoundEffects.dk, 1.0F, 1.0F);
+        this.a(SoundEffects.du, 1.0F, 1.0F);
     }
 }
