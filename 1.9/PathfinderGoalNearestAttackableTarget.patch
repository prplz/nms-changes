--- a/net/minecraft/server/PathfinderGoalNearestAttackableTarget.java
+++ b/net/minecraft/server/PathfinderGoalNearestAttackableTarget.java
@@ -1,7 +1,7 @@
 package net.minecraft.server;
 
+import com.google.common.base.Function;
 import com.google.common.base.Predicate;
-import com.google.common.base.Predicates;
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.List;
@@ -9,10 +9,10 @@
 public class PathfinderGoalNearestAttackableTarget<T extends EntityLiving> extends PathfinderGoalTarget {
 
     protected final Class<T> a;
-    private final int g;
+    private final int i;
     protected final PathfinderGoalNearestAttackableTarget.DistanceComparator b;
-    protected Predicate<? super T> c;
-    protected EntityLiving d;
+    protected final Predicate<? super T> c;
+    protected T d;
 
     public PathfinderGoalNearestAttackableTarget(EntityCreature entitycreature, Class<T> oclass, boolean flag) {
         this(entitycreature, oclass, flag, false);
@@ -25,38 +25,12 @@
     public PathfinderGoalNearestAttackableTarget(EntityCreature entitycreature, Class<T> oclass, int i, boolean flag, boolean flag1, final Predicate<? super T> predicate) {
         super(entitycreature, flag, flag1);
         this.a = oclass;
-        this.g = i;
+        this.i = i;
         this.b = new PathfinderGoalNearestAttackableTarget.DistanceComparator(entitycreature);
         this.a(1);
         this.c = new Predicate() {
             public boolean a(T t0) {
-                if (predicate != null && !predicate.apply(t0)) {
-                    return false;
-                } else {
-                    if (t0 instanceof EntityHuman) {
-                        double d0 = PathfinderGoalNearestAttackableTarget.this.f();
-
-                        if (t0.isSneaking()) {
-                            d0 *= 0.800000011920929D;
-                        }
-
-                        if (t0.isInvisible()) {
-                            float f = ((EntityHuman) t0).bY();
-
-                            if (f < 0.1F) {
-                                f = 0.1F;
-                            }
-
-                            d0 *= (double) (0.7F * f);
-                        }
-
-                        if ((double) t0.g(PathfinderGoalNearestAttackableTarget.this.e) > d0) {
-                            return false;
-                        }
-                    }
-
-                    return PathfinderGoalNearestAttackableTarget.this.a(t0, false);
-                }
+                return t0 == null ? false : (predicate != null && !predicate.apply(t0) ? false : (!IEntitySelector.e.apply(t0) ? false : PathfinderGoalNearestAttackableTarget.this.a(t0, false)));
             }
 
             public boolean apply(Object object) {
@@ -66,22 +40,49 @@
     }
 
     public boolean a() {
-        if (this.g > 0 && this.e.bc().nextInt(this.g) != 0) {
+        if (this.i > 0 && this.e.getRandom().nextInt(this.i) != 0) {
             return false;
-        } else {
-            double d0 = this.f();
-            List list = this.e.world.a(this.a, this.e.getBoundingBox().grow(d0, 4.0D, d0), Predicates.and(this.c, IEntitySelector.d));
+        } else if (this.a != EntityHuman.class && this.a != EntityPlayer.class) {
+            List list = this.e.world.a(this.a, this.a(this.f()), this.c);
 
-            Collections.sort(list, this.b);
             if (list.isEmpty()) {
                 return false;
             } else {
+                Collections.sort(list, this.b);
                 this.d = (EntityLiving) list.get(0);
                 return true;
             }
+        } else {
+            this.d = this.e.world.a(this.e.locX, this.e.locY + (double) this.e.getHeadHeight(), this.e.locZ, this.f(), this.f(), new Function() {
+                public Double a(EntityHuman entityhuman) {
+                    ItemStack itemstack = entityhuman.getEquipment(EnumItemSlot.HEAD);
+
+                    if (itemstack != null && itemstack.getItem() == Items.SKULL) {
+                        int i = itemstack.h();
+                        boolean flag = PathfinderGoalNearestAttackableTarget.this.e instanceof EntitySkeleton && ((EntitySkeleton) PathfinderGoalNearestAttackableTarget.this.e).getSkeletonType() == 0 && i == 0;
+                        boolean flag1 = PathfinderGoalNearestAttackableTarget.this.e instanceof EntityZombie && i == 2;
+                        boolean flag2 = PathfinderGoalNearestAttackableTarget.this.e instanceof EntityCreeper && i == 4;
+
+                        if (flag || flag1 || flag2) {
+                            return Double.valueOf(0.5D);
+                        }
+                    }
+
+                    return Double.valueOf(1.0D);
+                }
+
+                public Object apply(Object object) {
+                    return this.a((EntityHuman) object);
+                }
+            }, this.c);
+            return this.d != null;
         }
     }
 
+    protected AxisAlignedBB a(double d0) {
+        return this.e.getBoundingBox().grow(d0, 4.0D, d0);
+    }
+
     public void c() {
         this.e.setGoalTarget(this.d);
         super.c();
