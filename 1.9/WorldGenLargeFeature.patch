--- a/net/minecraft/server/WorldGenLargeFeature.java
+++ b/net/minecraft/server/WorldGenLargeFeature.java
@@ -10,16 +10,16 @@
 
 public class WorldGenLargeFeature extends StructureGenerator {
 
-    private static final List<BiomeBase> d = Arrays.asList(new BiomeBase[] { BiomeBase.DESERT, BiomeBase.DESERT_HILLS, BiomeBase.JUNGLE, BiomeBase.JUNGLE_HILLS, BiomeBase.SWAMPLAND});
-    private List<BiomeBase.BiomeMeta> f;
-    private int g;
+    private static final List<BiomeBase> a = Arrays.asList(new BiomeBase[] { Biomes.d, Biomes.s, Biomes.w, Biomes.x, Biomes.h, Biomes.n, Biomes.F});
+    private List<BiomeBase.BiomeMeta> b;
+    private int d;
     private int h;
 
     public WorldGenLargeFeature() {
-        this.f = Lists.newArrayList();
-        this.g = 32;
+        this.b = Lists.newArrayList();
+        this.d = 32;
         this.h = 8;
-        this.f.add(new BiomeBase.BiomeMeta(EntityWitch.class, 1, 1, 1));
+        this.b.add(new BiomeBase.BiomeMeta(EntityWitch.class, 1, 1, 1));
     }
 
     public WorldGenLargeFeature(Map<String, String> map) {
@@ -30,7 +30,7 @@
             Entry entry = (Entry) iterator.next();
 
             if (((String) entry.getKey()).equals("distance")) {
-                this.g = MathHelper.a((String) entry.getValue(), this.g, this.h + 1);
+                this.d = MathHelper.a((String) entry.getValue(), this.d, this.h + 1);
             }
         }
 
@@ -45,29 +45,29 @@
         int l = j;
 
         if (i < 0) {
-            i -= this.g - 1;
+            i -= this.d - 1;
         }
 
         if (j < 0) {
-            j -= this.g - 1;
+            j -= this.d - 1;
         }
 
-        int i1 = i / this.g;
-        int j1 = j / this.g;
-        Random random = this.c.a(i1, j1, 14357617);
+        int i1 = i / this.d;
+        int j1 = j / this.d;
+        Random random = this.g.a(i1, j1, 14357617);
 
-        i1 *= this.g;
-        j1 *= this.g;
-        i1 += random.nextInt(this.g - this.h);
-        j1 += random.nextInt(this.g - this.h);
+        i1 *= this.d;
+        j1 *= this.d;
+        i1 += random.nextInt(this.d - this.h);
+        j1 += random.nextInt(this.d - this.h);
         if (k == i1 && l == j1) {
-            BiomeBase biomebase = this.c.getWorldChunkManager().getBiome(new BlockPosition(k * 16 + 8, 0, l * 16 + 8));
+            BiomeBase biomebase = this.g.getWorldChunkManager().getBiome(new BlockPosition(k * 16 + 8, 0, l * 16 + 8));
 
             if (biomebase == null) {
                 return false;
             }
 
-            Iterator iterator = WorldGenLargeFeature.d.iterator();
+            Iterator iterator = WorldGenLargeFeature.a.iterator();
 
             while (iterator.hasNext()) {
                 BiomeBase biomebase1 = (BiomeBase) iterator.next();
@@ -82,14 +82,14 @@
     }
 
     protected StructureStart b(int i, int j) {
-        return new WorldGenLargeFeature.WorldGenLargeFeatureStart(this.c, this.b, i, j);
+        return new WorldGenLargeFeature.WorldGenLargeFeatureStart(this.g, this.f, i, j);
     }
 
     public boolean a(BlockPosition blockposition) {
         StructureStart structurestart = this.c(blockposition);
 
         if (structurestart != null && structurestart instanceof WorldGenLargeFeature.WorldGenLargeFeatureStart && !structurestart.a.isEmpty()) {
-            StructurePiece structurepiece = (StructurePiece) structurestart.a.getFirst();
+            StructurePiece structurepiece = (StructurePiece) structurestart.a.get(0);
 
             return structurepiece instanceof WorldGenRegistration.WorldGenWitchHut;
         } else {
@@ -98,7 +98,7 @@
     }
 
     public List<BiomeBase.BiomeMeta> b() {
-        return this.f;
+        return this.b;
     }
 
     public static class WorldGenLargeFeatureStart extends StructureStart {
@@ -106,15 +106,23 @@
         public WorldGenLargeFeatureStart() {}
 
         public WorldGenLargeFeatureStart(World world, Random random, int i, int j) {
-            super(i, j);
-            BiomeBase biomebase = world.getBiome(new BlockPosition(i * 16 + 8, 0, j * 16 + 8));
+            this(world, random, i, j, world.getBiome(new BlockPosition(i * 16 + 8, 0, j * 16 + 8)));
+        }
 
-            if (biomebase != BiomeBase.JUNGLE && biomebase != BiomeBase.JUNGLE_HILLS) {
-                if (biomebase == BiomeBase.SWAMPLAND) {
+        public WorldGenLargeFeatureStart(World world, Random random, int i, int j, BiomeBase biomebase) {
+            super(i, j);
+            if (biomebase != Biomes.w && biomebase != Biomes.x) {
+                if (biomebase == Biomes.h) {
                     WorldGenRegistration.WorldGenWitchHut worldgenregistration_worldgenwitchhut = new WorldGenRegistration.WorldGenWitchHut(random, i * 16, j * 16);
 
                     this.a.add(worldgenregistration_worldgenwitchhut);
-                } else if (biomebase == BiomeBase.DESERT || biomebase == BiomeBase.DESERT_HILLS) {
+                } else if (biomebase != Biomes.d && biomebase != Biomes.s) {
+                    if (biomebase == Biomes.n || biomebase == Biomes.F) {
+                        WorldGenRegistration.b worldgenregistration_b = new WorldGenRegistration.b(random, i * 16, j * 16);
+
+                        this.a.add(worldgenregistration_b);
+                    }
+                } else {
                     WorldGenRegistration.WorldGenPyramidPiece worldgenregistration_worldgenpyramidpiece = new WorldGenRegistration.WorldGenPyramidPiece(random, i * 16, j * 16);
 
                     this.a.add(worldgenregistration_worldgenpyramidpiece);
@@ -125,7 +133,7 @@
                 this.a.add(worldgenregistration_worldgenjungletemple);
             }
 
-            this.c();
+            this.d();
         }
     }
 }
