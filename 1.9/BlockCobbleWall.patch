--- a/net/minecraft/server/BlockCobbleWall.java
+++ b/net/minecraft/server/BlockCobbleWall.java
@@ -8,82 +8,71 @@
     public static final BlockStateBoolean SOUTH = BlockStateBoolean.of("south");
     public static final BlockStateBoolean WEST = BlockStateBoolean.of("west");
     public static final BlockStateEnum<BlockCobbleWall.EnumCobbleVariant> VARIANT = BlockStateEnum.of("variant", BlockCobbleWall.EnumCobbleVariant.class);
+    protected static final AxisAlignedBB[] g = new AxisAlignedBB[] { new AxisAlignedBB(0.25D, 0.0D, 0.25D, 0.75D, 1.0D, 0.75D), new AxisAlignedBB(0.25D, 0.0D, 0.25D, 0.75D, 1.0D, 1.0D), new AxisAlignedBB(0.0D, 0.0D, 0.25D, 0.75D, 1.0D, 0.75D), new AxisAlignedBB(0.0D, 0.0D, 0.25D, 0.75D, 1.0D, 1.0D), new AxisAlignedBB(0.25D, 0.0D, 0.0D, 0.75D, 1.0D, 0.75D), new AxisAlignedBB(0.3125D, 0.0D, 0.0D, 0.6875D, 0.875D, 1.0D), new AxisAlignedBB(0.0D, 0.0D, 0.0D, 0.75D, 1.0D, 0.75D), new AxisAlignedBB(0.0D, 0.0D, 0.0D, 0.75D, 1.0D, 1.0D), new AxisAlignedBB(0.25D, 0.0D, 0.25D, 1.0D, 1.0D, 0.75D), new AxisAlignedBB(0.25D, 0.0D, 0.25D, 1.0D, 1.0D, 1.0D), new AxisAlignedBB(0.0D, 0.0D, 0.3125D, 1.0D, 0.875D, 0.6875D), new AxisAlignedBB(0.0D, 0.0D, 0.25D, 1.0D, 1.0D, 1.0D), new AxisAlignedBB(0.25D, 0.0D, 0.0D, 1.0D, 1.0D, 0.75D), new AxisAlignedBB(0.25D, 0.0D, 0.0D, 1.0D, 1.0D, 1.0D), new AxisAlignedBB(0.0D, 0.0D, 0.0D, 1.0D, 1.0D, 0.75D), new AxisAlignedBB(0.0D, 0.0D, 0.0D, 1.0D, 1.0D, 1.0D)};
+    protected static final AxisAlignedBB[] B = new AxisAlignedBB[] { BlockCobbleWall.g[0].e(1.5D), BlockCobbleWall.g[1].e(1.5D), BlockCobbleWall.g[2].e(1.5D), BlockCobbleWall.g[3].e(1.5D), BlockCobbleWall.g[4].e(1.5D), BlockCobbleWall.g[5].e(1.5D), BlockCobbleWall.g[6].e(1.5D), BlockCobbleWall.g[7].e(1.5D), BlockCobbleWall.g[8].e(1.5D), BlockCobbleWall.g[9].e(1.5D), BlockCobbleWall.g[10].e(1.5D), BlockCobbleWall.g[11].e(1.5D), BlockCobbleWall.g[12].e(1.5D), BlockCobbleWall.g[13].e(1.5D), BlockCobbleWall.g[14].e(1.5D), BlockCobbleWall.g[15].e(1.5D)};
 
     public BlockCobbleWall(Block block) {
         super(block.material);
-        this.j(this.blockStateList.getBlockData().set(BlockCobbleWall.UP, Boolean.valueOf(false)).set(BlockCobbleWall.NORTH, Boolean.valueOf(false)).set(BlockCobbleWall.EAST, Boolean.valueOf(false)).set(BlockCobbleWall.SOUTH, Boolean.valueOf(false)).set(BlockCobbleWall.WEST, Boolean.valueOf(false)).set(BlockCobbleWall.VARIANT, BlockCobbleWall.EnumCobbleVariant.NORMAL));
+        this.w(this.blockStateList.getBlockData().set(BlockCobbleWall.UP, Boolean.valueOf(false)).set(BlockCobbleWall.NORTH, Boolean.valueOf(false)).set(BlockCobbleWall.EAST, Boolean.valueOf(false)).set(BlockCobbleWall.SOUTH, Boolean.valueOf(false)).set(BlockCobbleWall.WEST, Boolean.valueOf(false)).set(BlockCobbleWall.VARIANT, BlockCobbleWall.EnumCobbleVariant.NORMAL));
         this.c(block.strength);
         this.b(block.durability / 3.0F);
         this.a(block.stepSound);
         this.a(CreativeModeTab.b);
     }
 
-    public String getName() {
-        return LocaleI18n.get(this.a() + "." + BlockCobbleWall.EnumCobbleVariant.NORMAL.c() + ".name");
-    }
-
-    public boolean d() {
-        return false;
-    }
-
-    public boolean b(IBlockAccess iblockaccess, BlockPosition blockposition) {
-        return false;
+    public AxisAlignedBB a(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition) {
+        iblockdata = this.updateState(iblockdata, iblockaccess, blockposition);
+        return BlockCobbleWall.g[i(iblockdata)];
     }
 
-    public boolean c() {
-        return false;
+    public AxisAlignedBB a(IBlockData iblockdata, World world, BlockPosition blockposition) {
+        iblockdata = this.updateState(iblockdata, world, blockposition);
+        return BlockCobbleWall.B[i(iblockdata)];
     }
 
-    public void updateShape(IBlockAccess iblockaccess, BlockPosition blockposition) {
-        boolean flag = this.e(iblockaccess, blockposition.north());
-        boolean flag1 = this.e(iblockaccess, blockposition.south());
-        boolean flag2 = this.e(iblockaccess, blockposition.west());
-        boolean flag3 = this.e(iblockaccess, blockposition.east());
-        float f = 0.25F;
-        float f1 = 0.75F;
-        float f2 = 0.25F;
-        float f3 = 0.75F;
-        float f4 = 1.0F;
+    private static int i(IBlockData iblockdata) {
+        int i = 0;
 
-        if (flag) {
-            f2 = 0.0F;
+        if (((Boolean) iblockdata.get(BlockCobbleWall.NORTH)).booleanValue()) {
+            i |= 1 << EnumDirection.NORTH.get2DRotationValue();
         }
 
-        if (flag1) {
-            f3 = 1.0F;
+        if (((Boolean) iblockdata.get(BlockCobbleWall.EAST)).booleanValue()) {
+            i |= 1 << EnumDirection.EAST.get2DRotationValue();
         }
 
-        if (flag2) {
-            f = 0.0F;
+        if (((Boolean) iblockdata.get(BlockCobbleWall.SOUTH)).booleanValue()) {
+            i |= 1 << EnumDirection.SOUTH.get2DRotationValue();
         }
 
-        if (flag3) {
-            f1 = 1.0F;
+        if (((Boolean) iblockdata.get(BlockCobbleWall.WEST)).booleanValue()) {
+            i |= 1 << EnumDirection.WEST.get2DRotationValue();
         }
 
-        if (flag && flag1 && !flag2 && !flag3) {
-            f4 = 0.8125F;
-            f = 0.3125F;
-            f1 = 0.6875F;
-        } else if (!flag && !flag1 && flag2 && flag3) {
-            f4 = 0.8125F;
-            f2 = 0.3125F;
-            f3 = 0.6875F;
-        }
+        return i;
+    }
 
-        this.a(f, 0.0F, f2, f1, f4, f3);
+    public String getName() {
+        return LocaleI18n.get(this.a() + "." + BlockCobbleWall.EnumCobbleVariant.NORMAL.c() + ".name");
     }
 
-    public AxisAlignedBB a(World world, BlockPosition blockposition, IBlockData iblockdata) {
-        this.updateShape(world, blockposition);
-        this.maxY = 1.5D;
-        return super.a(world, blockposition, iblockdata);
+    public boolean c(IBlockData iblockdata) {
+        return false;
     }
 
-    public boolean e(IBlockAccess iblockaccess, BlockPosition blockposition) {
-        Block block = iblockaccess.getType(blockposition).getBlock();
+    public boolean b(IBlockAccess iblockaccess, BlockPosition blockposition) {
+        return false;
+    }
 
-        return block == Blocks.BARRIER ? false : (block != this && !(block instanceof BlockFenceGate) ? (block.material.k() && block.d() ? block.material != Material.PUMPKIN : false) : true);
+    public boolean b(IBlockData iblockdata) {
+        return false;
+    }
+
+    private boolean c(IBlockAccess iblockaccess, BlockPosition blockposition) {
+        IBlockData iblockdata = iblockaccess.getType(blockposition);
+        Block block = iblockdata.getBlock();
+
+        return block == Blocks.BARRIER ? false : (block != this && !(block instanceof BlockFenceGate) ? (block.material.k() && iblockdata.h() ? block.material != Material.PUMPKIN : false) : true);
     }
 
     public int getDropData(IBlockData iblockdata) {
@@ -99,7 +88,13 @@
     }
 
     public IBlockData updateState(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition) {
-        return iblockdata.set(BlockCobbleWall.UP, Boolean.valueOf(!iblockaccess.isEmpty(blockposition.up()))).set(BlockCobbleWall.NORTH, Boolean.valueOf(this.e(iblockaccess, blockposition.north()))).set(BlockCobbleWall.EAST, Boolean.valueOf(this.e(iblockaccess, blockposition.east()))).set(BlockCobbleWall.SOUTH, Boolean.valueOf(this.e(iblockaccess, blockposition.south()))).set(BlockCobbleWall.WEST, Boolean.valueOf(this.e(iblockaccess, blockposition.west())));
+        boolean flag = this.c(iblockaccess, blockposition.north());
+        boolean flag1 = this.c(iblockaccess, blockposition.east());
+        boolean flag2 = this.c(iblockaccess, blockposition.south());
+        boolean flag3 = this.c(iblockaccess, blockposition.west());
+        boolean flag4 = flag && !flag1 && flag2 && !flag3 || !flag && flag1 && !flag2 && flag3;
+
+        return iblockdata.set(BlockCobbleWall.UP, Boolean.valueOf(!flag4 || !iblockaccess.isEmpty(blockposition.up()))).set(BlockCobbleWall.NORTH, Boolean.valueOf(flag)).set(BlockCobbleWall.EAST, Boolean.valueOf(flag1)).set(BlockCobbleWall.SOUTH, Boolean.valueOf(flag2)).set(BlockCobbleWall.WEST, Boolean.valueOf(flag3));
     }
 
     protected BlockStateList getStateList() {
