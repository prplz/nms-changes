--- a/net/minecraft/server/EntitySheep.java
+++ b/net/minecraft/server/EntitySheep.java
@@ -6,47 +6,50 @@
 
 public class EntitySheep extends EntityAnimal {
 
-    private final InventoryCrafting bm = new InventoryCrafting(new Container() {
+    private static final DataWatcherObject<Byte> bv = DataWatcher.a(EntitySheep.class, DataWatcherRegistry.a);
+    private final InventoryCrafting container = new InventoryCrafting(new Container() {
         public boolean a(EntityHuman entityhuman) {
             return false;
         }
     }, 2, 1);
-    private static final Map<EnumColor, float[]> bo = Maps.newEnumMap(EnumColor.class);
-    private int bp;
-    private PathfinderGoalEatTile bq = new PathfinderGoalEatTile(this);
+    private static final Map<EnumColor, float[]> bx = Maps.newEnumMap(EnumColor.class);
+    private int bz;
+    private PathfinderGoalEatTile bA;
 
     public static float[] a(EnumColor enumcolor) {
-        return (float[]) EntitySheep.bo.get(enumcolor);
+        return (float[]) EntitySheep.bx.get(enumcolor);
     }
 
     public EntitySheep(World world) {
         super(world);
         this.setSize(0.9F, 1.3F);
-        ((Navigation) this.getNavigation()).a(true);
+        this.container.setItem(0, new ItemStack(Items.DYE));
+        this.container.setItem(1, new ItemStack(Items.DYE));
+    }
+
+    protected void r() {
         this.goalSelector.a(0, new PathfinderGoalFloat(this));
         this.goalSelector.a(1, new PathfinderGoalPanic(this, 1.25D));
         this.goalSelector.a(2, new PathfinderGoalBreed(this, 1.0D));
         this.goalSelector.a(3, new PathfinderGoalTempt(this, 1.1D, Items.WHEAT, false));
         this.goalSelector.a(4, new PathfinderGoalFollowParent(this, 1.1D));
-        this.goalSelector.a(5, this.bq);
+        this.goalSelector.a(5, this.bA = new PathfinderGoalEatTile(this));
         this.goalSelector.a(6, new PathfinderGoalRandomStroll(this, 1.0D));
         this.goalSelector.a(7, new PathfinderGoalLookAtPlayer(this, EntityHuman.class, 6.0F));
         this.goalSelector.a(8, new PathfinderGoalRandomLookaround(this));
-        this.bm.setItem(0, new ItemStack(Items.DYE, 1, 0));
-        this.bm.setItem(1, new ItemStack(Items.DYE, 1, 0));
     }
 
-    protected void E() {
-        this.bp = this.bq.f();
-        super.E();
+    protected void M() {
+        this.bz = this.bA.f();
+        super.M();
     }
 
-    public void m() {
+    public void n() {
         if (this.world.isClientSide) {
-            this.bp = Math.max(0, this.bp - 1);
+            this.bz = Math.max(0, this.bz - 1);
         }
 
-        super.m();
+        super.n();
     }
 
     protected void initAttributes() {
@@ -55,35 +58,69 @@
         this.getAttributeInstance(GenericAttributes.MOVEMENT_SPEED).setValue(0.23000000417232513D);
     }
 
-    protected void h() {
-        super.h();
-        this.datawatcher.a(16, new Byte((byte) 0));
+    protected void i() {
+        super.i();
+        this.datawatcher.register(EntitySheep.bv, Byte.valueOf((byte) 0));
     }
 
-    protected void dropDeathLoot(boolean flag, int i) {
-        if (!this.isSheared()) {
-            this.a(new ItemStack(Item.getItemOf(Blocks.WOOL), 1, this.getColor().getColorIndex()), 0.0F);
-        }
+    protected MinecraftKey J() {
+        if (this.isSheared()) {
+            return LootTables.K;
+        } else {
+            switch (EntitySheep.SyntheticClass_1.a[this.getColor().ordinal()]) {
+            case 1:
+            default:
+                return LootTables.L;
 
-        int j = this.random.nextInt(2) + 1 + this.random.nextInt(1 + i);
+            case 2:
+                return LootTables.M;
 
-        for (int k = 0; k < j; ++k) {
-            if (this.isBurning()) {
-                this.a(Items.COOKED_MUTTON, 1);
-            } else {
-                this.a(Items.MUTTON, 1);
-            }
-        }
+            case 3:
+                return LootTables.N;
 
-    }
+            case 4:
+                return LootTables.O;
 
-    protected Item getLoot() {
-        return Item.getItemOf(Blocks.WOOL);
-    }
+            case 5:
+                return LootTables.P;
+
+            case 6:
+                return LootTables.Q;
+
+            case 7:
+                return LootTables.R;
+
+            case 8:
+                return LootTables.S;
+
+            case 9:
+                return LootTables.T;
+
+            case 10:
+                return LootTables.U;
+
+            case 11:
+                return LootTables.V;
 
-    public boolean a(EntityHuman entityhuman) {
-        ItemStack itemstack = entityhuman.inventory.getItemInHand();
+            case 12:
+                return LootTables.W;
 
+            case 13:
+                return LootTables.X;
+
+            case 14:
+                return LootTables.Y;
+
+            case 15:
+                return LootTables.Z;
+
+            case 16:
+                return LootTables.aa;
+            }
+        }
+    }
+
+    public boolean a(EntityHuman entityhuman, EnumHand enumhand, ItemStack itemstack) {
         if (itemstack != null && itemstack.getItem() == Items.SHEARS && !this.isSheared() && !this.isBaby()) {
             if (!this.world.isClientSide) {
                 this.setSheared(true);
@@ -99,10 +136,10 @@
             }
 
             itemstack.damage(1, entityhuman);
-            this.makeSound("mob.sheep.shear", 1.0F, 1.0F);
+            this.a(SoundEffects.eO, 1.0F, 1.0F);
         }
 
-        return super.a(entityhuman);
+        return super.a(entityhuman, enumhand, itemstack);
     }
 
     public void b(NBTTagCompound nbttagcompound) {
@@ -117,43 +154,43 @@
         this.setColor(EnumColor.fromColorIndex(nbttagcompound.getByte("Color")));
     }
 
-    protected String z() {
-        return "mob.sheep.say";
+    protected SoundEffect G() {
+        return SoundEffects.eL;
     }
 
-    protected String bo() {
-        return "mob.sheep.say";
+    protected SoundEffect bR() {
+        return SoundEffects.eN;
     }
 
-    protected String bp() {
-        return "mob.sheep.say";
+    protected SoundEffect bS() {
+        return SoundEffects.eM;
     }
 
     protected void a(BlockPosition blockposition, Block block) {
-        this.makeSound("mob.sheep.step", 0.15F, 1.0F);
+        this.a(SoundEffects.eP, 0.15F, 1.0F);
     }
 
     public EnumColor getColor() {
-        return EnumColor.fromColorIndex(this.datawatcher.getByte(16) & 15);
+        return EnumColor.fromColorIndex(((Byte) this.datawatcher.get(EntitySheep.bv)).byteValue() & 15);
     }
 
     public void setColor(EnumColor enumcolor) {
-        byte b0 = this.datawatcher.getByte(16);
+        byte b0 = ((Byte) this.datawatcher.get(EntitySheep.bv)).byteValue();
 
-        this.datawatcher.watch(16, Byte.valueOf((byte) (b0 & 240 | enumcolor.getColorIndex() & 15)));
+        this.datawatcher.set(EntitySheep.bv, Byte.valueOf((byte) (b0 & 240 | enumcolor.getColorIndex() & 15)));
     }
 
     public boolean isSheared() {
-        return (this.datawatcher.getByte(16) & 16) != 0;
+        return (((Byte) this.datawatcher.get(EntitySheep.bv)).byteValue() & 16) != 0;
     }
 
     public void setSheared(boolean flag) {
-        byte b0 = this.datawatcher.getByte(16);
+        byte b0 = ((Byte) this.datawatcher.get(EntitySheep.bv)).byteValue();
 
         if (flag) {
-            this.datawatcher.watch(16, Byte.valueOf((byte) (b0 | 16)));
+            this.datawatcher.set(EntitySheep.bv, Byte.valueOf((byte) (b0 | 16)));
         } else {
-            this.datawatcher.watch(16, Byte.valueOf((byte) (b0 & -17)));
+            this.datawatcher.set(EntitySheep.bv, Byte.valueOf((byte) (b0 & -17)));
         }
 
     }
@@ -172,7 +209,7 @@
         return entitysheep1;
     }
 
-    public void v() {
+    public void B() {
         this.setSheared(false);
         if (this.isBaby()) {
             this.setAge(60);
@@ -190,9 +227,9 @@
         int i = ((EntitySheep) entityanimal).getColor().getInvColorIndex();
         int j = ((EntitySheep) entityanimal1).getColor().getInvColorIndex();
 
-        this.bm.getItem(0).setData(i);
-        this.bm.getItem(1).setData(j);
-        ItemStack itemstack = CraftingManager.getInstance().craft(this.bm, ((EntitySheep) entityanimal).world);
+        this.container.getItem(0).setData(i);
+        this.container.getItem(1).setData(j);
+        ItemStack itemstack = CraftingManager.getInstance().craft(this.container, ((EntitySheep) entityanimal).world);
         int k;
 
         if (itemstack != null && itemstack.getItem() == Items.DYE) {
@@ -213,21 +250,125 @@
     }
 
     static {
-        EntitySheep.bo.put(EnumColor.WHITE, new float[] { 1.0F, 1.0F, 1.0F});
-        EntitySheep.bo.put(EnumColor.ORANGE, new float[] { 0.85F, 0.5F, 0.2F});
-        EntitySheep.bo.put(EnumColor.MAGENTA, new float[] { 0.7F, 0.3F, 0.85F});
-        EntitySheep.bo.put(EnumColor.LIGHT_BLUE, new float[] { 0.4F, 0.6F, 0.85F});
-        EntitySheep.bo.put(EnumColor.YELLOW, new float[] { 0.9F, 0.9F, 0.2F});
-        EntitySheep.bo.put(EnumColor.LIME, new float[] { 0.5F, 0.8F, 0.1F});
-        EntitySheep.bo.put(EnumColor.PINK, new float[] { 0.95F, 0.5F, 0.65F});
-        EntitySheep.bo.put(EnumColor.GRAY, new float[] { 0.3F, 0.3F, 0.3F});
-        EntitySheep.bo.put(EnumColor.SILVER, new float[] { 0.6F, 0.6F, 0.6F});
-        EntitySheep.bo.put(EnumColor.CYAN, new float[] { 0.3F, 0.5F, 0.6F});
-        EntitySheep.bo.put(EnumColor.PURPLE, new float[] { 0.5F, 0.25F, 0.7F});
-        EntitySheep.bo.put(EnumColor.BLUE, new float[] { 0.2F, 0.3F, 0.7F});
-        EntitySheep.bo.put(EnumColor.BROWN, new float[] { 0.4F, 0.3F, 0.2F});
-        EntitySheep.bo.put(EnumColor.GREEN, new float[] { 0.4F, 0.5F, 0.2F});
-        EntitySheep.bo.put(EnumColor.RED, new float[] { 0.6F, 0.2F, 0.2F});
-        EntitySheep.bo.put(EnumColor.BLACK, new float[] { 0.1F, 0.1F, 0.1F});
+        EntitySheep.bx.put(EnumColor.WHITE, new float[] { 1.0F, 1.0F, 1.0F});
+        EntitySheep.bx.put(EnumColor.ORANGE, new float[] { 0.85F, 0.5F, 0.2F});
+        EntitySheep.bx.put(EnumColor.MAGENTA, new float[] { 0.7F, 0.3F, 0.85F});
+        EntitySheep.bx.put(EnumColor.LIGHT_BLUE, new float[] { 0.4F, 0.6F, 0.85F});
+        EntitySheep.bx.put(EnumColor.YELLOW, new float[] { 0.9F, 0.9F, 0.2F});
+        EntitySheep.bx.put(EnumColor.LIME, new float[] { 0.5F, 0.8F, 0.1F});
+        EntitySheep.bx.put(EnumColor.PINK, new float[] { 0.95F, 0.5F, 0.65F});
+        EntitySheep.bx.put(EnumColor.GRAY, new float[] { 0.3F, 0.3F, 0.3F});
+        EntitySheep.bx.put(EnumColor.SILVER, new float[] { 0.6F, 0.6F, 0.6F});
+        EntitySheep.bx.put(EnumColor.CYAN, new float[] { 0.3F, 0.5F, 0.6F});
+        EntitySheep.bx.put(EnumColor.PURPLE, new float[] { 0.5F, 0.25F, 0.7F});
+        EntitySheep.bx.put(EnumColor.BLUE, new float[] { 0.2F, 0.3F, 0.7F});
+        EntitySheep.bx.put(EnumColor.BROWN, new float[] { 0.4F, 0.3F, 0.2F});
+        EntitySheep.bx.put(EnumColor.GREEN, new float[] { 0.4F, 0.5F, 0.2F});
+        EntitySheep.bx.put(EnumColor.RED, new float[] { 0.6F, 0.2F, 0.2F});
+        EntitySheep.bx.put(EnumColor.BLACK, new float[] { 0.1F, 0.1F, 0.1F});
+    }
+
+    static class SyntheticClass_1 {
+
+        static final int[] a = new int[EnumColor.values().length];
+
+        static {
+            try {
+                EntitySheep.SyntheticClass_1.a[EnumColor.WHITE.ordinal()] = 1;
+            } catch (NoSuchFieldError nosuchfielderror) {
+                ;
+            }
+
+            try {
+                EntitySheep.SyntheticClass_1.a[EnumColor.ORANGE.ordinal()] = 2;
+            } catch (NoSuchFieldError nosuchfielderror1) {
+                ;
+            }
+
+            try {
+                EntitySheep.SyntheticClass_1.a[EnumColor.MAGENTA.ordinal()] = 3;
+            } catch (NoSuchFieldError nosuchfielderror2) {
+                ;
+            }
+
+            try {
+                EntitySheep.SyntheticClass_1.a[EnumColor.LIGHT_BLUE.ordinal()] = 4;
+            } catch (NoSuchFieldError nosuchfielderror3) {
+                ;
+            }
+
+            try {
+                EntitySheep.SyntheticClass_1.a[EnumColor.YELLOW.ordinal()] = 5;
+            } catch (NoSuchFieldError nosuchfielderror4) {
+                ;
+            }
+
+            try {
+                EntitySheep.SyntheticClass_1.a[EnumColor.LIME.ordinal()] = 6;
+            } catch (NoSuchFieldError nosuchfielderror5) {
+                ;
+            }
+
+            try {
+                EntitySheep.SyntheticClass_1.a[EnumColor.PINK.ordinal()] = 7;
+            } catch (NoSuchFieldError nosuchfielderror6) {
+                ;
+            }
+
+            try {
+                EntitySheep.SyntheticClass_1.a[EnumColor.GRAY.ordinal()] = 8;
+            } catch (NoSuchFieldError nosuchfielderror7) {
+                ;
+            }
+
+            try {
+                EntitySheep.SyntheticClass_1.a[EnumColor.SILVER.ordinal()] = 9;
+            } catch (NoSuchFieldError nosuchfielderror8) {
+                ;
+            }
+
+            try {
+                EntitySheep.SyntheticClass_1.a[EnumColor.CYAN.ordinal()] = 10;
+            } catch (NoSuchFieldError nosuchfielderror9) {
+                ;
+            }
+
+            try {
+                EntitySheep.SyntheticClass_1.a[EnumColor.PURPLE.ordinal()] = 11;
+            } catch (NoSuchFieldError nosuchfielderror10) {
+                ;
+            }
+
+            try {
+                EntitySheep.SyntheticClass_1.a[EnumColor.BLUE.ordinal()] = 12;
+            } catch (NoSuchFieldError nosuchfielderror11) {
+                ;
+            }
+
+            try {
+                EntitySheep.SyntheticClass_1.a[EnumColor.BROWN.ordinal()] = 13;
+            } catch (NoSuchFieldError nosuchfielderror12) {
+                ;
+            }
+
+            try {
+                EntitySheep.SyntheticClass_1.a[EnumColor.GREEN.ordinal()] = 14;
+            } catch (NoSuchFieldError nosuchfielderror13) {
+                ;
+            }
+
+            try {
+                EntitySheep.SyntheticClass_1.a[EnumColor.RED.ordinal()] = 15;
+            } catch (NoSuchFieldError nosuchfielderror14) {
+                ;
+            }
+
+            try {
+                EntitySheep.SyntheticClass_1.a[EnumColor.BLACK.ordinal()] = 16;
+            } catch (NoSuchFieldError nosuchfielderror15) {
+                ;
+            }
+
+        }
     }
 }
