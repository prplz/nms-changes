--- a/net/minecraft/server/CommandHelp.java
+++ b/net/minecraft/server/CommandHelp.java
@@ -4,10 +4,14 @@
 import java.util.Collections;
 import java.util.List;
 import java.util.Map;
+import java.util.Random;
 import java.util.Set;
 
 public class CommandHelp extends CommandAbstract {
 
+    private static String[] a = new String[] { "Yolo", "/achievement take achievement.understandCommands @p", "Ask for help on twitter", "/deop @p", "Scoreboard deleted, commands blocked", "Contact helpdesk for help", "/testfornoob @p", "/trigger warning", "Oh my god, it\'s full of stats", "/kill @p[name=!Searge]", "Have you tried turning it off and on again?", "Sorry, no help today"};
+    private Random b = new Random();
+
     public CommandHelp() {}
 
     public String getCommand() {
@@ -26,72 +30,76 @@
         return Arrays.asList(new String[] { "?"});
     }
 
-    public void execute(ICommandListener icommandlistener, String[] astring) throws CommandException {
-        List list = this.d(icommandlistener);
-        boolean flag = true;
-        int i = (list.size() - 1) / 7;
-        boolean flag1 = false;
-
-        int j;
-
-        try {
-            j = astring.length == 0 ? 0 : a(astring[0], 1, i + 1) - 1;
-        } catch (ExceptionInvalidNumber exceptioninvalidnumber) {
-            Map map = this.d();
-            ICommand icommand = (ICommand) map.get(astring[0]);
-
-            if (icommand != null) {
-                throw new ExceptionUsage(icommand.getUsage(icommandlistener), new Object[0]);
-            }
+    public void execute(MinecraftServer minecraftserver, ICommandListener icommandlistener, String[] astring) throws CommandException {
+        if (icommandlistener instanceof CommandBlockListenerAbstract) {
+            icommandlistener.sendMessage((new ChatComponentText("Searge says: ")).a(CommandHelp.a[this.b.nextInt(CommandHelp.a.length) % CommandHelp.a.length]));
+        } else {
+            List list = this.a(icommandlistener, minecraftserver);
+            boolean flag = true;
+            int i = (list.size() - 1) / 7;
+            boolean flag1 = false;
+
+            int j;
+
+            try {
+                j = astring.length == 0 ? 0 : a(astring[0], 1, i + 1) - 1;
+            } catch (ExceptionInvalidNumber exceptioninvalidnumber) {
+                Map map = this.a(minecraftserver);
+                ICommand icommand = (ICommand) map.get(astring[0]);
+
+                if (icommand != null) {
+                    throw new ExceptionUsage(icommand.getUsage(icommandlistener), new Object[0]);
+                }
+
+                if (MathHelper.a(astring[0], -1) != -1) {
+                    throw exceptioninvalidnumber;
+                }
 
-            if (MathHelper.a(astring[0], -1) != -1) {
-                throw exceptioninvalidnumber;
+                throw new ExceptionUnknownCommand();
             }
 
-            throw new ExceptionUnknownCommand();
-        }
+            int k = Math.min((j + 1) * 7, list.size());
+            ChatMessage chatmessage = new ChatMessage("commands.help.header", new Object[] { Integer.valueOf(j + 1), Integer.valueOf(i + 1)});
 
-        int k = Math.min((j + 1) * 7, list.size());
-        ChatMessage chatmessage = new ChatMessage("commands.help.header", new Object[] { Integer.valueOf(j + 1), Integer.valueOf(i + 1)});
+            chatmessage.getChatModifier().setColor(EnumChatFormat.DARK_GREEN);
+            icommandlistener.sendMessage(chatmessage);
 
-        chatmessage.getChatModifier().setColor(EnumChatFormat.DARK_GREEN);
-        icommandlistener.sendMessage(chatmessage);
+            for (int l = j * 7; l < k; ++l) {
+                ICommand icommand1 = (ICommand) list.get(l);
+                ChatMessage chatmessage1 = new ChatMessage(icommand1.getUsage(icommandlistener), new Object[0]);
 
-        for (int l = j * 7; l < k; ++l) {
-            ICommand icommand1 = (ICommand) list.get(l);
-            ChatMessage chatmessage1 = new ChatMessage(icommand1.getUsage(icommandlistener), new Object[0]);
+                chatmessage1.getChatModifier().setChatClickable(new ChatClickable(ChatClickable.EnumClickAction.SUGGEST_COMMAND, "/" + icommand1.getCommand() + " "));
+                icommandlistener.sendMessage(chatmessage1);
+            }
 
-            chatmessage1.getChatModifier().setChatClickable(new ChatClickable(ChatClickable.EnumClickAction.SUGGEST_COMMAND, "/" + icommand1.getCommand() + " "));
-            icommandlistener.sendMessage(chatmessage1);
-        }
+            if (j == 0 && icommandlistener instanceof EntityHuman) {
+                ChatMessage chatmessage2 = new ChatMessage("commands.help.footer", new Object[0]);
 
-        if (j == 0 && icommandlistener instanceof EntityHuman) {
-            ChatMessage chatmessage2 = new ChatMessage("commands.help.footer", new Object[0]);
+                chatmessage2.getChatModifier().setColor(EnumChatFormat.GREEN);
+                icommandlistener.sendMessage(chatmessage2);
+            }
 
-            chatmessage2.getChatModifier().setColor(EnumChatFormat.GREEN);
-            icommandlistener.sendMessage(chatmessage2);
         }
-
     }
 
-    protected List<ICommand> d(ICommandListener icommandlistener) {
-        List list = MinecraftServer.getServer().getCommandHandler().a(icommandlistener);
+    protected List<ICommand> a(ICommandListener icommandlistener, MinecraftServer minecraftserver) {
+        List list = minecraftserver.getCommandHandler().a(icommandlistener);
 
         Collections.sort(list);
         return list;
     }
 
-    protected Map<String, ICommand> d() {
-        return MinecraftServer.getServer().getCommandHandler().getCommands();
+    protected Map<String, ICommand> a(MinecraftServer minecraftserver) {
+        return minecraftserver.getCommandHandler().getCommands();
     }
 
-    public List<String> tabComplete(ICommandListener icommandlistener, String[] astring, BlockPosition blockposition) {
+    public List<String> tabComplete(MinecraftServer minecraftserver, ICommandListener icommandlistener, String[] astring, BlockPosition blockposition) {
         if (astring.length == 1) {
-            Set set = this.d().keySet();
+            Set set = this.a(minecraftserver).keySet();
 
             return a(astring, (String[]) set.toArray(new String[set.size()]));
         } else {
-            return null;
+            return Collections.emptyList();
         }
     }
 }
