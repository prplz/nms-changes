--- a/net/minecraft/server/CommandEffect.java
+++ b/net/minecraft/server/CommandEffect.java
@@ -1,6 +1,7 @@
 package net.minecraft.server;
 
 import java.util.Collection;
+import java.util.Collections;
 import java.util.List;
 
 public class CommandEffect extends CommandAbstract {
@@ -19,54 +20,48 @@
         return "commands.effect.usage";
     }
 
-    public void execute(ICommandListener icommandlistener, String[] astring) throws CommandException {
+    public void execute(MinecraftServer minecraftserver, ICommandListener icommandlistener, String[] astring) throws CommandException {
         if (astring.length < 2) {
             throw new ExceptionUsage("commands.effect.usage", new Object[0]);
         } else {
-            EntityLiving entityliving = (EntityLiving) a(icommandlistener, astring[0], EntityLiving.class);
+            EntityLiving entityliving = (EntityLiving) a(minecraftserver, icommandlistener, astring[0], EntityLiving.class);
 
             if (astring[1].equals("clear")) {
                 if (entityliving.getEffects().isEmpty()) {
                     throw new CommandException("commands.effect.failure.notActive.all", new Object[] { entityliving.getName()});
                 } else {
                     entityliving.removeAllEffects();
-                    a(icommandlistener, this, "commands.effect.success.removed.all", new Object[] { entityliving.getName()});
+                    a(icommandlistener, (ICommand) this, "commands.effect.success.removed.all", new Object[] { entityliving.getName()});
                 }
             } else {
-                int i;
+                MobEffectList mobeffectlist;
 
                 try {
-                    i = a(astring[1], 1);
+                    mobeffectlist = MobEffectList.fromId(a(astring[1], 1));
                 } catch (ExceptionInvalidNumber exceptioninvalidnumber) {
-                    MobEffectList mobeffectlist = MobEffectList.b(astring[1]);
-
-                    if (mobeffectlist == null) {
-                        throw exceptioninvalidnumber;
-                    }
-
-                    i = mobeffectlist.id;
+                    mobeffectlist = MobEffectList.getByName(astring[1]);
                 }
 
-                int j = 600;
-                int k = 30;
-                int l = 0;
-
-                if (i >= 0 && i < MobEffectList.byId.length && MobEffectList.byId[i] != null) {
-                    MobEffectList mobeffectlist1 = MobEffectList.byId[i];
+                if (mobeffectlist == null) {
+                    throw new ExceptionInvalidNumber("commands.effect.notFound", new Object[] { astring[1]});
+                } else {
+                    int i = 600;
+                    int j = 30;
+                    int k = 0;
 
                     if (astring.length >= 3) {
-                        k = a(astring[2], 0, 1000000);
-                        if (mobeffectlist1.isInstant()) {
-                            j = k;
+                        j = a(astring[2], 0, 1000000);
+                        if (mobeffectlist.isInstant()) {
+                            i = j;
                         } else {
-                            j = k * 20;
+                            i = j * 20;
                         }
-                    } else if (mobeffectlist1.isInstant()) {
-                        j = 1;
+                    } else if (mobeffectlist.isInstant()) {
+                        i = 1;
                     }
 
                     if (astring.length >= 4) {
-                        l = a(astring[3], 0, 255);
+                        k = a(astring[3], 0, 255);
                     }
 
                     boolean flag = true;
@@ -75,30 +70,24 @@
                         flag = false;
                     }
 
-                    if (k > 0) {
-                        MobEffect mobeffect = new MobEffect(i, j, l, false, flag);
+                    if (j > 0) {
+                        MobEffect mobeffect = new MobEffect(mobeffectlist, i, k, false, flag);
 
                         entityliving.addEffect(mobeffect);
-                        a(icommandlistener, this, "commands.effect.success", new Object[] { new ChatMessage(mobeffect.g(), new Object[0]), Integer.valueOf(i), Integer.valueOf(l), entityliving.getName(), Integer.valueOf(k)});
-                    } else if (entityliving.hasEffect(i)) {
-                        entityliving.removeEffect(i);
-                        a(icommandlistener, this, "commands.effect.success.removed", new Object[] { new ChatMessage(mobeffectlist1.a(), new Object[0]), entityliving.getName()});
+                        a(icommandlistener, (ICommand) this, "commands.effect.success", new Object[] { new ChatMessage(mobeffect.f(), new Object[0]), Integer.valueOf(MobEffectList.getId(mobeffectlist)), Integer.valueOf(k), entityliving.getName(), Integer.valueOf(j)});
+                    } else if (entityliving.hasEffect(mobeffectlist)) {
+                        entityliving.removeEffect(mobeffectlist);
+                        a(icommandlistener, (ICommand) this, "commands.effect.success.removed", new Object[] { new ChatMessage(mobeffectlist.a(), new Object[0]), entityliving.getName()});
                     } else {
-                        throw new CommandException("commands.effect.failure.notActive", new Object[] { new ChatMessage(mobeffectlist1.a(), new Object[0]), entityliving.getName()});
+                        throw new CommandException("commands.effect.failure.notActive", new Object[] { new ChatMessage(mobeffectlist.a(), new Object[0]), entityliving.getName()});
                     }
-                } else {
-                    throw new ExceptionInvalidNumber("commands.effect.notFound", new Object[] { Integer.valueOf(i)});
                 }
             }
         }
     }
 
-    public List<String> tabComplete(ICommandListener icommandlistener, String[] astring, BlockPosition blockposition) {
-        return astring.length == 1 ? a(astring, this.d()) : (astring.length == 2 ? a(astring, (Collection) MobEffectList.c()) : (astring.length == 5 ? a(astring, new String[] { "true", "false"}) : null));
-    }
-
-    protected String[] d() {
-        return MinecraftServer.getServer().getPlayers();
+    public List<String> tabComplete(MinecraftServer minecraftserver, ICommandListener icommandlistener, String[] astring, BlockPosition blockposition) {
+        return astring.length == 1 ? a(astring, minecraftserver.getPlayers()) : (astring.length == 2 ? a(astring, (Collection) MobEffectList.REGISTRY.keySet()) : (astring.length == 5 ? a(astring, new String[] { "true", "false"}) : Collections.emptyList()));
     }
 
     public boolean isListStart(String[] astring, int i) {
