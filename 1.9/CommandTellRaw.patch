--- a/net/minecraft/server/CommandTellRaw.java
+++ b/net/minecraft/server/CommandTellRaw.java
@@ -1,8 +1,8 @@
 package net.minecraft.server;
 
 import com.google.gson.JsonParseException;
+import java.util.Collections;
 import java.util.List;
-import org.apache.commons.lang3.exception.ExceptionUtils;
 
 public class CommandTellRaw extends CommandAbstract {
 
@@ -20,11 +20,11 @@
         return "commands.tellraw.usage";
     }
 
-    public void execute(ICommandListener icommandlistener, String[] astring) throws CommandException {
+    public void execute(MinecraftServer minecraftserver, ICommandListener icommandlistener, String[] astring) throws CommandException {
         if (astring.length < 2) {
             throw new ExceptionUsage("commands.tellraw.usage", new Object[0]);
         } else {
-            EntityPlayer entityplayer = a(icommandlistener, astring[0]);
+            EntityPlayer entityplayer = a(minecraftserver, icommandlistener, astring[0]);
             String s = a(astring, 1);
 
             try {
@@ -32,15 +32,13 @@
 
                 entityplayer.sendMessage(ChatComponentUtils.filterForDisplay(icommandlistener, ichatbasecomponent, entityplayer));
             } catch (JsonParseException jsonparseexception) {
-                Throwable throwable = ExceptionUtils.getRootCause(jsonparseexception);
-
-                throw new ExceptionInvalidSyntax("commands.tellraw.jsonException", new Object[] { throwable == null ? "" : throwable.getMessage()});
+                throw a(jsonparseexception);
             }
         }
     }
 
-    public List<String> tabComplete(ICommandListener icommandlistener, String[] astring, BlockPosition blockposition) {
-        return astring.length == 1 ? a(astring, MinecraftServer.getServer().getPlayers()) : null;
+    public List<String> tabComplete(MinecraftServer minecraftserver, ICommandListener icommandlistener, String[] astring, BlockPosition blockposition) {
+        return astring.length == 1 ? a(astring, minecraftserver.getPlayers()) : Collections.emptyList();
     }
 
     public boolean isListStart(String[] astring, int i) {
