--- a/net/minecraft/server/EntityGuardian.java
+++ b/net/minecraft/server/EntityGuardian.java
@@ -6,20 +6,27 @@
 
 public class EntityGuardian extends EntityMonster {
 
-    private float a;
-    private float b;
+    private static final DataWatcherObject<Byte> a = DataWatcher.a(EntityGuardian.class, DataWatcherRegistry.a);
+    private static final DataWatcherObject<Integer> b = DataWatcher.a(EntityGuardian.class, DataWatcherRegistry.b);
     private float c;
-    private float bm;
-    private float bn;
-    private EntityLiving bo;
-    private int bp;
-    private boolean bq;
+    private float bv;
+    private float bw;
+    private float bx;
+    private float by;
+    private EntityLiving bz;
+    private int bA;
+    private boolean bB;
     public PathfinderGoalRandomStroll goalRandomStroll;
 
     public EntityGuardian(World world) {
         super(world);
         this.b_ = 10;
         this.setSize(0.85F, 0.85F);
+        this.moveController = new EntityGuardian.ControllerMoveGuardian(this);
+        this.bv = this.c = this.random.nextFloat();
+    }
+
+    protected void r() {
         this.goalSelector.a(4, new EntityGuardian.PathfinderGoalGuardianAttack(this));
         PathfinderGoalMoveTowardsRestriction pathfindergoalmovetowardsrestriction;
 
@@ -31,8 +38,6 @@
         this.goalRandomStroll.a(3);
         pathfindergoalmovetowardsrestriction.a(3);
         this.targetSelector.a(1, new PathfinderGoalNearestAttackableTarget(this, EntityLiving.class, 10, true, false, new EntityGuardian.EntitySelectorGuardianTargetHumanSquid(this)));
-        this.moveController = new EntityGuardian.ControllerMoveGuardian(this);
-        this.b = this.a = this.random.nextFloat();
     }
 
     public void initAttributes() {
@@ -57,36 +62,36 @@
         return new NavigationGuardian(this, world);
     }
 
-    protected void h() {
-        super.h();
-        this.datawatcher.a(16, Integer.valueOf(0));
-        this.datawatcher.a(17, Integer.valueOf(0));
+    protected void i() {
+        super.i();
+        this.datawatcher.register(EntityGuardian.a, Byte.valueOf((byte) 0));
+        this.datawatcher.register(EntityGuardian.b, Integer.valueOf(0));
     }
 
     private boolean a(int i) {
-        return (this.datawatcher.getInt(16) & i) != 0;
+        return (((Byte) this.datawatcher.get(EntityGuardian.a)).byteValue() & i) != 0;
     }
 
     private void a(int i, boolean flag) {
-        int j = this.datawatcher.getInt(16);
+        byte b0 = ((Byte) this.datawatcher.get(EntityGuardian.a)).byteValue();
 
         if (flag) {
-            this.datawatcher.watch(16, Integer.valueOf(j | i));
+            this.datawatcher.set(EntityGuardian.a, Byte.valueOf((byte) (b0 | i)));
         } else {
-            this.datawatcher.watch(16, Integer.valueOf(j & ~i));
+            this.datawatcher.set(EntityGuardian.a, Byte.valueOf((byte) (b0 & ~i)));
         }
 
     }
 
-    public boolean n() {
+    public boolean o() {
         return this.a(2);
     }
 
-    private void l(boolean flag) {
+    private void o(boolean flag) {
         this.a(2, flag);
     }
 
-    public int cm() {
+    public int da() {
         return this.isElder() ? 60 : 80;
     }
 
@@ -101,32 +106,34 @@
             this.getAttributeInstance(GenericAttributes.MOVEMENT_SPEED).setValue(0.30000001192092896D);
             this.getAttributeInstance(GenericAttributes.ATTACK_DAMAGE).setValue(8.0D);
             this.getAttributeInstance(GenericAttributes.maxHealth).setValue(80.0D);
-            this.bX();
-            this.goalRandomStroll.setTimeBetweenMovement(400);
+            this.cL();
+            if (this.goalRandomStroll != null) {
+                this.goalRandomStroll.setTimeBetweenMovement(400);
+            }
         }
 
     }
 
     private void b(int i) {
-        this.datawatcher.watch(17, Integer.valueOf(i));
+        this.datawatcher.set(EntityGuardian.b, Integer.valueOf(i));
     }
 
-    public boolean cp() {
-        return this.datawatcher.getInt(17) != 0;
+    public boolean dd() {
+        return ((Integer) this.datawatcher.get(EntityGuardian.b)).intValue() != 0;
     }
 
-    public EntityLiving cq() {
-        if (!this.cp()) {
+    public EntityLiving de() {
+        if (!this.dd()) {
             return null;
         } else if (this.world.isClientSide) {
-            if (this.bo != null) {
-                return this.bo;
+            if (this.bz != null) {
+                return this.bz;
             } else {
-                Entity entity = this.world.a(this.datawatcher.getInt(17));
+                Entity entity = this.world.getEntity(((Integer) this.datawatcher.get(EntityGuardian.b)).intValue());
 
                 if (entity instanceof EntityLiving) {
-                    this.bo = (EntityLiving) entity;
-                    return this.bo;
+                    this.bz = (EntityLiving) entity;
+                    return this.bz;
                 } else {
                     return null;
                 }
@@ -136,36 +143,36 @@
         }
     }
 
-    public void i(int i) {
-        super.i(i);
-        if (i == 16) {
+    public void a(DataWatcherObject<?> datawatcherobject) {
+        super.a(datawatcherobject);
+        if (EntityGuardian.a.equals(datawatcherobject)) {
             if (this.isElder() && this.width < 1.0F) {
                 this.setSize(1.9975F, 1.9975F);
             }
-        } else if (i == 17) {
-            this.bp = 0;
-            this.bo = null;
+        } else if (EntityGuardian.b.equals(datawatcherobject)) {
+            this.bA = 0;
+            this.bz = null;
         }
 
     }
 
-    public int w() {
+    public int C() {
         return 160;
     }
 
-    protected String z() {
-        return !this.V() ? "mob.guardian.land.idle" : (this.isElder() ? "mob.guardian.elder.idle" : "mob.guardian.idle");
+    protected SoundEffect G() {
+        return this.isElder() ? (this.isInWater() ? SoundEffects.aD : SoundEffects.aE) : (this.isInWater() ? SoundEffects.ce : SoundEffects.cf);
     }
 
-    protected String bo() {
-        return !this.V() ? "mob.guardian.land.hit" : (this.isElder() ? "mob.guardian.elder.hit" : "mob.guardian.hit");
+    protected SoundEffect bR() {
+        return this.isElder() ? (this.isInWater() ? SoundEffects.aI : SoundEffects.aJ) : (this.isInWater() ? SoundEffects.ck : SoundEffects.cl);
     }
 
-    protected String bp() {
-        return !this.V() ? "mob.guardian.land.death" : (this.isElder() ? "mob.guardian.elder.death" : "mob.guardian.death");
+    protected SoundEffect bS() {
+        return this.isElder() ? (this.isInWater() ? SoundEffects.aG : SoundEffects.aH) : (this.isInWater() ? SoundEffects.ch : SoundEffects.ci);
     }
 
-    protected boolean s_() {
+    protected boolean playStepSound() {
         return false;
     }
 
@@ -174,58 +181,58 @@
     }
 
     public float a(BlockPosition blockposition) {
-        return this.world.getType(blockposition).getBlock().getMaterial() == Material.WATER ? 10.0F + this.world.o(blockposition) - 0.5F : super.a(blockposition);
+        return this.world.getType(blockposition).getMaterial() == Material.WATER ? 10.0F + this.world.n(blockposition) - 0.5F : super.a(blockposition);
     }
 
-    public void m() {
+    public void n() {
         if (this.world.isClientSide) {
-            this.b = this.a;
-            if (!this.V()) {
-                this.c = 2.0F;
-                if (this.motY > 0.0D && this.bq && !this.R()) {
-                    this.world.a(this.locX, this.locY, this.locZ, "mob.guardian.flop", 1.0F, 1.0F, false);
+            this.bv = this.c;
+            if (!this.isInWater()) {
+                this.bw = 2.0F;
+                if (this.motY > 0.0D && this.bB && !this.ad()) {
+                    this.world.a(this.locX, this.locY, this.locZ, SoundEffects.cj, this.bz(), 1.0F, 1.0F, false);
                 }
 
-                this.bq = this.motY < 0.0D && this.world.d((new BlockPosition(this)).down(), false);
-            } else if (this.n()) {
-                if (this.c < 0.5F) {
-                    this.c = 4.0F;
+                this.bB = this.motY < 0.0D && this.world.d((new BlockPosition(this)).down(), false);
+            } else if (this.o()) {
+                if (this.bw < 0.5F) {
+                    this.bw = 4.0F;
                 } else {
-                    this.c += (0.5F - this.c) * 0.1F;
+                    this.bw += (0.5F - this.bw) * 0.1F;
                 }
             } else {
-                this.c += (0.125F - this.c) * 0.2F;
+                this.bw += (0.125F - this.bw) * 0.2F;
             }
 
-            this.a += this.c;
-            this.bn = this.bm;
-            if (!this.V()) {
-                this.bm = this.random.nextFloat();
-            } else if (this.n()) {
-                this.bm += (0.0F - this.bm) * 0.25F;
+            this.c += this.bw;
+            this.by = this.bx;
+            if (!this.isInWater()) {
+                this.bx = this.random.nextFloat();
+            } else if (this.o()) {
+                this.bx += (0.0F - this.bx) * 0.25F;
             } else {
-                this.bm += (1.0F - this.bm) * 0.06F;
+                this.bx += (1.0F - this.bx) * 0.06F;
             }
 
-            if (this.n() && this.V()) {
-                Vec3D vec3d = this.d(0.0F);
+            if (this.o() && this.isInWater()) {
+                Vec3D vec3d = this.f(0.0F);
 
                 for (int i = 0; i < 2; ++i) {
-                    this.world.addParticle(EnumParticle.WATER_BUBBLE, this.locX + (this.random.nextDouble() - 0.5D) * (double) this.width - vec3d.a * 1.5D, this.locY + this.random.nextDouble() * (double) this.length - vec3d.b * 1.5D, this.locZ + (this.random.nextDouble() - 0.5D) * (double) this.width - vec3d.c * 1.5D, 0.0D, 0.0D, 0.0D, new int[0]);
+                    this.world.addParticle(EnumParticle.WATER_BUBBLE, this.locX + (this.random.nextDouble() - 0.5D) * (double) this.width - vec3d.x * 1.5D, this.locY + this.random.nextDouble() * (double) this.length - vec3d.y * 1.5D, this.locZ + (this.random.nextDouble() - 0.5D) * (double) this.width - vec3d.z * 1.5D, 0.0D, 0.0D, 0.0D, new int[0]);
                 }
             }
 
-            if (this.cp()) {
-                if (this.bp < this.cm()) {
-                    ++this.bp;
+            if (this.dd()) {
+                if (this.bA < this.da()) {
+                    ++this.bA;
                 }
 
-                EntityLiving entityliving = this.cq();
+                EntityLiving entityliving = this.de();
 
                 if (entityliving != null) {
                     this.getControllerLook().a(entityliving, 90.0F, 90.0F);
                     this.getControllerLook().a();
-                    double d0 = (double) this.q(0.0F);
+                    double d0 = (double) this.s(0.0F);
                     double d1 = entityliving.locX - this.locX;
                     double d2 = entityliving.locY + (double) (entityliving.length * 0.5F) - (this.locY + (double) this.getHeadHeight());
                     double d3 = entityliving.locZ - this.locZ;
@@ -252,22 +259,22 @@
             this.motZ += (double) ((this.random.nextFloat() * 2.0F - 1.0F) * 0.4F);
             this.yaw = this.random.nextFloat() * 360.0F;
             this.onGround = false;
-            this.ai = true;
+            this.impulse = true;
         }
 
-        if (this.cp()) {
-            this.yaw = this.aK;
+        if (this.dd()) {
+            this.yaw = this.aO;
         }
 
-        super.m();
+        super.n();
     }
 
-    public float q(float f) {
-        return ((float) this.bp + f) / (float) this.cm();
+    public float s(float f) {
+        return ((float) this.bA + f) / (float) this.da();
     }
 
-    protected void E() {
-        super.E();
+    protected void M() {
+        super.M();
         if (this.isElder()) {
             boolean flag = true;
             boolean flag1 = true;
@@ -275,7 +282,7 @@
             boolean flag3 = true;
 
             if ((this.ticksLived + this.getId()) % 1200 == 0) {
-                MobEffectList mobeffectlist = MobEffectList.SLOWER_DIG;
+                MobEffectList mobeffectlist = MobEffects.SLOWER_DIG;
                 List list = this.world.b(EntityPlayer.class, new Predicate() {
                     public boolean a(EntityPlayer entityplayer) {
                         return EntityGuardian.this.h(entityplayer) < 2500.0D && entityplayer.playerInteractManager.c();
@@ -292,44 +299,23 @@
 
                     if (!entityplayer.hasEffect(mobeffectlist) || entityplayer.getEffect(mobeffectlist).getAmplifier() < 2 || entityplayer.getEffect(mobeffectlist).getDuration() < 1200) {
                         entityplayer.playerConnection.sendPacket(new PacketPlayOutGameStateChange(10, 0.0F));
-                        entityplayer.addEffect(new MobEffect(mobeffectlist.id, 6000, 2));
+                        entityplayer.addEffect(new MobEffect(mobeffectlist, 6000, 2));
                     }
                 }
             }
 
-            if (!this.ck()) {
+            if (!this.cY()) {
                 this.a(new BlockPosition(this), 16);
             }
         }
 
     }
 
-    protected void dropDeathLoot(boolean flag, int i) {
-        int j = this.random.nextInt(3) + this.random.nextInt(i + 1);
-
-        if (j > 0) {
-            this.a(new ItemStack(Items.PRISMARINE_SHARD, j, 0), 1.0F);
-        }
-
-        if (this.random.nextInt(3 + i) > 1) {
-            this.a(new ItemStack(Items.FISH, 1, ItemFish.EnumFish.COD.a()), 1.0F);
-        } else if (this.random.nextInt(3 + i) > 1) {
-            this.a(new ItemStack(Items.PRISMARINE_CRYSTALS, 1, 0), 1.0F);
-        }
-
-        if (flag && this.isElder()) {
-            this.a(new ItemStack(Blocks.SPONGE, 1, 1), 1.0F);
-        }
-
+    protected MinecraftKey J() {
+        return this.isElder() ? LootTables.w : LootTables.v;
     }
 
-    protected void getRareDrop() {
-        ItemStack itemstack = ((PossibleFishingResult) WeightedRandom.a(this.random, EntityFishingHook.j())).a(this.random);
-
-        this.a(itemstack, 1.0F);
-    }
-
-    protected boolean n_() {
+    protected boolean s_() {
         return true;
     }
 
@@ -337,37 +323,39 @@
         return this.world.a(this.getBoundingBox(), (Entity) this) && this.world.getCubes(this, this.getBoundingBox()).isEmpty();
     }
 
-    public boolean bR() {
-        return (this.random.nextInt(20) == 0 || !this.world.j(new BlockPosition(this))) && super.bR();
+    public boolean cF() {
+        return (this.random.nextInt(20) == 0 || !this.world.i(new BlockPosition(this))) && super.cF();
     }
 
     public boolean damageEntity(DamageSource damagesource, float f) {
-        if (!this.n() && !damagesource.isMagic() && damagesource.i() instanceof EntityLiving) {
+        if (!this.o() && !damagesource.isMagic() && damagesource.i() instanceof EntityLiving) {
             EntityLiving entityliving = (EntityLiving) damagesource.i();
 
             if (!damagesource.isExplosion()) {
                 entityliving.damageEntity(DamageSource.a(this), 2.0F);
-                entityliving.makeSound("damage.thorns", 0.5F, 1.0F);
             }
         }
 
-        this.goalRandomStroll.f();
+        if (this.goalRandomStroll != null) {
+            this.goalRandomStroll.f();
+        }
+
         return super.damageEntity(damagesource, f);
     }
 
-    public int bQ() {
+    public int N() {
         return 180;
     }
 
     public void g(float f, float f1) {
-        if (this.bM()) {
-            if (this.V()) {
+        if (this.co()) {
+            if (this.isInWater()) {
                 this.a(f, f1, 0.1F);
                 this.move(this.motX, this.motY, this.motZ);
                 this.motX *= 0.8999999761581421D;
                 this.motY *= 0.8999999761581421D;
                 this.motZ *= 0.8999999761581421D;
-                if (!this.n() && this.getGoalTarget() == null) {
+                if (!this.o() && this.getGoalTarget() == null) {
                     this.motY -= 0.005D;
                 }
             } else {
@@ -381,42 +369,42 @@
 
     static class ControllerMoveGuardian extends ControllerMove {
 
-        private EntityGuardian g;
+        private EntityGuardian i;
 
         public ControllerMoveGuardian(EntityGuardian entityguardian) {
             super(entityguardian);
-            this.g = entityguardian;
+            this.i = entityguardian;
         }
 
         public void c() {
-            if (this.f && !this.g.getNavigation().m()) {
-                double d0 = this.b - this.g.locX;
-                double d1 = this.c - this.g.locY;
-                double d2 = this.d - this.g.locZ;
+            if (this.h == ControllerMove.Operation.MOVE_TO && !this.i.getNavigation().n()) {
+                double d0 = this.b - this.i.locX;
+                double d1 = this.c - this.i.locY;
+                double d2 = this.d - this.i.locZ;
                 double d3 = d0 * d0 + d1 * d1 + d2 * d2;
 
                 d3 = (double) MathHelper.sqrt(d3);
                 d1 /= d3;
-                float f = (float) (MathHelper.b(d2, d0) * 180.0D / 3.1415927410125732D) - 90.0F;
+                float f = (float) (MathHelper.b(d2, d0) * 57.2957763671875D) - 90.0F;
 
-                this.g.yaw = this.a(this.g.yaw, f, 30.0F);
-                this.g.aI = this.g.yaw;
-                float f1 = (float) (this.e * this.g.getAttributeInstance(GenericAttributes.MOVEMENT_SPEED).getValue());
-
-                this.g.k(this.g.bI() + (f1 - this.g.bI()) * 0.125F);
-                double d4 = Math.sin((double) (this.g.ticksLived + this.g.getId()) * 0.5D) * 0.05D;
-                double d5 = Math.cos((double) (this.g.yaw * 3.1415927F / 180.0F));
-                double d6 = Math.sin((double) (this.g.yaw * 3.1415927F / 180.0F));
-
-                this.g.motX += d4 * d5;
-                this.g.motZ += d4 * d6;
-                d4 = Math.sin((double) (this.g.ticksLived + this.g.getId()) * 0.75D) * 0.05D;
-                this.g.motY += d4 * (d6 + d5) * 0.25D;
-                this.g.motY += (double) this.g.bI() * d1 * 0.1D;
-                ControllerLook controllerlook = this.g.getControllerLook();
-                double d7 = this.g.locX + d0 / d3 * 2.0D;
-                double d8 = (double) this.g.getHeadHeight() + this.g.locY + d1 / d3 * 1.0D;
-                double d9 = this.g.locZ + d2 / d3 * 2.0D;
+                this.i.yaw = this.a(this.i.yaw, f, 90.0F);
+                this.i.aM = this.i.yaw;
+                float f1 = (float) (this.e * this.i.getAttributeInstance(GenericAttributes.MOVEMENT_SPEED).getValue());
+
+                this.i.l(this.i.ck() + (f1 - this.i.ck()) * 0.125F);
+                double d4 = Math.sin((double) (this.i.ticksLived + this.i.getId()) * 0.5D) * 0.05D;
+                double d5 = Math.cos((double) (this.i.yaw * 0.017453292F));
+                double d6 = Math.sin((double) (this.i.yaw * 0.017453292F));
+
+                this.i.motX += d4 * d5;
+                this.i.motZ += d4 * d6;
+                d4 = Math.sin((double) (this.i.ticksLived + this.i.getId()) * 0.75D) * 0.05D;
+                this.i.motY += d4 * (d6 + d5) * 0.25D;
+                this.i.motY += (double) this.i.ck() * d1 * 0.1D;
+                ControllerLook controllerlook = this.i.getControllerLook();
+                double d7 = this.i.locX + d0 / d3 * 2.0D;
+                double d8 = (double) this.i.getHeadHeight() + this.i.locY + d1 / d3;
+                double d9 = this.i.locZ + d2 / d3 * 2.0D;
                 double d10 = controllerlook.e();
                 double d11 = controllerlook.f();
                 double d12 = controllerlook.g();
@@ -427,11 +415,11 @@
                     d12 = d9;
                 }
 
-                this.g.getControllerLook().a(d10 + (d7 - d10) * 0.125D, d11 + (d8 - d11) * 0.125D, d12 + (d9 - d12) * 0.125D, 10.0F, 40.0F);
-                this.g.l(true);
+                this.i.getControllerLook().a(d10 + (d7 - d10) * 0.125D, d11 + (d8 - d11) * 0.125D, d12 + (d9 - d12) * 0.125D, 10.0F, 40.0F);
+                this.i.o(true);
             } else {
-                this.g.k(0.0F);
-                this.g.l(false);
+                this.i.l(0.0F);
+                this.i.o(false);
             }
         }
     }
@@ -458,9 +446,9 @@
 
         public void c() {
             this.b = -10;
-            this.a.getNavigation().n();
+            this.a.getNavigation().o();
             this.a.getControllerLook().a(this.a.getGoalTarget(), 90.0F, 90.0F);
-            this.a.ai = true;
+            this.a.impulse = true;
         }
 
         public void d() {
@@ -472,7 +460,7 @@
         public void e() {
             EntityLiving entityliving = this.a.getGoalTarget();
 
-            this.a.getNavigation().n();
+            this.a.getNavigation().o();
             this.a.getControllerLook().a(entityliving, 90.0F, 90.0F);
             if (!this.a.hasLineOfSight(entityliving)) {
                 this.a.setGoalTarget((EntityLiving) null);
@@ -481,7 +469,7 @@
                 if (this.b == 0) {
                     this.a.b(this.a.getGoalTarget().getId());
                     this.a.world.broadcastEntityEffect(this.a, (byte) 21);
-                } else if (this.b >= this.a.cm()) {
+                } else if (this.b >= this.a.da()) {
                     float f = 1.0F;
 
                     if (this.a.world.getDifficulty() == EnumDifficulty.HARD) {
@@ -495,8 +483,6 @@
                     entityliving.damageEntity(DamageSource.b(this.a, this.a), f);
                     entityliving.damageEntity(DamageSource.mobAttack(this.a), (float) this.a.getAttributeInstance(GenericAttributes.ATTACK_DAMAGE).getValue());
                     this.a.setGoalTarget((EntityLiving) null);
-                } else if (this.b >= 60 && this.b % 20 == 0) {
-                    ;
                 }
 
                 super.e();
