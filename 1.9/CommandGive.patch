--- a/net/minecraft/server/CommandGive.java
+++ b/net/minecraft/server/CommandGive.java
@@ -1,6 +1,7 @@
 package net.minecraft.server;
 
 import java.util.Collection;
+import java.util.Collections;
 import java.util.List;
 
 public class CommandGive extends CommandAbstract {
@@ -19,18 +20,18 @@
         return "commands.give.usage";
     }
 
-    public void execute(ICommandListener icommandlistener, String[] astring) throws CommandException {
+    public void execute(MinecraftServer minecraftserver, ICommandListener icommandlistener, String[] astring) throws CommandException {
         if (astring.length < 2) {
             throw new ExceptionUsage("commands.give.usage", new Object[0]);
         } else {
-            EntityPlayer entityplayer = a(icommandlistener, astring[0]);
-            Item item = f(icommandlistener, astring[1]);
+            EntityPlayer entityplayer = a(minecraftserver, icommandlistener, astring[0]);
+            Item item = a(icommandlistener, astring[1]);
             int i = astring.length >= 3 ? a(astring[2], 1, 64) : 1;
             int j = astring.length >= 4 ? a(astring[3]) : 0;
             ItemStack itemstack = new ItemStack(item, i, j);
 
             if (astring.length >= 5) {
-                String s = a(icommandlistener, astring, 4).c();
+                String s = a(icommandlistener, astring, 4).toPlainText();
 
                 try {
                     itemstack.setTag(MojangsonParser.parse(s));
@@ -42,7 +43,7 @@
             boolean flag = entityplayer.inventory.pickup(itemstack);
 
             if (flag) {
-                entityplayer.world.makeSound(entityplayer, "random.pop", 0.2F, ((entityplayer.bc().nextFloat() - entityplayer.bc().nextFloat()) * 0.7F + 1.0F) * 2.0F);
+                entityplayer.world.a((EntityHuman) null, entityplayer.locX, entityplayer.locY, entityplayer.locZ, SoundEffects.cU, SoundCategory.PLAYERS, 0.2F, ((entityplayer.getRandom().nextFloat() - entityplayer.getRandom().nextFloat()) * 0.7F + 1.0F) * 2.0F);
                 entityplayer.defaultContainer.b();
             }
 
@@ -53,27 +54,23 @@
                 icommandlistener.a(CommandObjectiveExecutor.EnumCommandResult.AFFECTED_ITEMS, i);
                 entityitem = entityplayer.drop(itemstack, false);
                 if (entityitem != null) {
-                    entityitem.v();
+                    entityitem.w();
                 }
             } else {
                 icommandlistener.a(CommandObjectiveExecutor.EnumCommandResult.AFFECTED_ITEMS, i - itemstack.count);
                 entityitem = entityplayer.drop(itemstack, false);
                 if (entityitem != null) {
-                    entityitem.q();
-                    entityitem.b(entityplayer.getName());
+                    entityitem.r();
+                    entityitem.d(entityplayer.getName());
                 }
             }
 
-            a(icommandlistener, this, "commands.give.success", new Object[] { itemstack.C(), Integer.valueOf(i), entityplayer.getName()});
+            a(icommandlistener, (ICommand) this, "commands.give.success", new Object[] { itemstack.B(), Integer.valueOf(i), entityplayer.getName()});
         }
     }
 
-    public List<String> tabComplete(ICommandListener icommandlistener, String[] astring, BlockPosition blockposition) {
-        return astring.length == 1 ? a(astring, this.d()) : (astring.length == 2 ? a(astring, (Collection) Item.REGISTRY.keySet()) : null);
-    }
-
-    protected String[] d() {
-        return MinecraftServer.getServer().getPlayers();
+    public List<String> tabComplete(MinecraftServer minecraftserver, ICommandListener icommandlistener, String[] astring, BlockPosition blockposition) {
+        return astring.length == 1 ? a(astring, minecraftserver.getPlayers()) : (astring.length == 2 ? a(astring, (Collection) Item.REGISTRY.keySet()) : Collections.emptyList());
     }
 
     public boolean isListStart(String[] astring, int i) {
