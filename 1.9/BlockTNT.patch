--- a/net/minecraft/server/BlockTNT.java
+++ b/net/minecraft/server/BlockTNT.java
@@ -6,7 +6,7 @@
 
     public BlockTNT() {
         super(Material.TNT);
-        this.j(this.blockStateList.getBlockData().set(BlockTNT.EXPLODE, Boolean.valueOf(false)));
+        this.w(this.blockStateList.getBlockData().set(BlockTNT.EXPLODE, Boolean.valueOf(false)));
         this.a(CreativeModeTab.d);
     }
 
@@ -31,7 +31,7 @@
         if (!world.isClientSide) {
             EntityTNTPrimed entitytntprimed = new EntityTNTPrimed(world, (double) ((float) blockposition.getX() + 0.5F), (double) blockposition.getY(), (double) ((float) blockposition.getZ() + 0.5F), explosion.getSource());
 
-            entitytntprimed.fuseTicks = world.random.nextInt(entitytntprimed.fuseTicks / 4) + entitytntprimed.fuseTicks / 8;
+            entitytntprimed.setFuseTicks((short) (world.random.nextInt(entitytntprimed.getFuseTicks() / 4) + entitytntprimed.getFuseTicks() / 8));
             world.addEntity(entitytntprimed);
         }
     }
@@ -46,30 +46,26 @@
                 EntityTNTPrimed entitytntprimed = new EntityTNTPrimed(world, (double) ((float) blockposition.getX() + 0.5F), (double) blockposition.getY(), (double) ((float) blockposition.getZ() + 0.5F), entityliving);
 
                 world.addEntity(entitytntprimed);
-                world.makeSound(entitytntprimed, "game.tnt.primed", 1.0F, 1.0F);
+                world.a((EntityHuman) null, entitytntprimed.locX, entitytntprimed.locY, entitytntprimed.locZ, SoundEffects.gj, SoundCategory.BLOCKS, 1.0F, 1.0F);
             }
 
         }
     }
 
-    public boolean interact(World world, BlockPosition blockposition, IBlockData iblockdata, EntityHuman entityhuman, EnumDirection enumdirection, float f, float f1, float f2) {
-        if (entityhuman.bZ() != null) {
-            Item item = entityhuman.bZ().getItem();
-
-            if (item == Items.FLINT_AND_STEEL || item == Items.FIRE_CHARGE) {
-                this.a(world, blockposition, iblockdata.set(BlockTNT.EXPLODE, Boolean.valueOf(true)), (EntityLiving) entityhuman);
-                world.setAir(blockposition);
-                if (item == Items.FLINT_AND_STEEL) {
-                    entityhuman.bZ().damage(1, entityhuman);
-                } else if (!entityhuman.abilities.canInstantlyBuild) {
-                    --entityhuman.bZ().count;
-                }
-
-                return true;
+    public boolean interact(World world, BlockPosition blockposition, IBlockData iblockdata, EntityHuman entityhuman, EnumHand enumhand, ItemStack itemstack, EnumDirection enumdirection, float f, float f1, float f2) {
+        if (itemstack != null && (itemstack.getItem() == Items.FLINT_AND_STEEL || itemstack.getItem() == Items.FIRE_CHARGE)) {
+            this.a(world, blockposition, iblockdata.set(BlockTNT.EXPLODE, Boolean.valueOf(true)), (EntityLiving) entityhuman);
+            world.setTypeAndData(blockposition, Blocks.AIR.getBlockData(), 11);
+            if (itemstack.getItem() == Items.FLINT_AND_STEEL) {
+                itemstack.damage(1, entityhuman);
+            } else if (!entityhuman.abilities.canInstantlyBuild) {
+                --itemstack.count;
             }
-        }
 
-        return super.interact(world, blockposition, iblockdata, entityhuman, enumdirection, f, f1, f2);
+            return true;
+        } else {
+            return super.interact(world, blockposition, iblockdata, entityhuman, enumhand, itemstack, enumdirection, f, f1, f2);
+        }
     }
 
     public void a(World world, BlockPosition blockposition, IBlockData iblockdata, Entity entity) {
