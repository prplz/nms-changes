--- a/net/minecraft/server/ItemFishingRod.java
+++ b/net/minecraft/server/ItemFishingRod.java
@@ -4,34 +4,36 @@
 
     public ItemFishingRod() {
         this.setMaxDurability(64);
-        this.c(1);
+        this.d(1);
         this.a(CreativeModeTab.i);
+        this.a(new MinecraftKey("cast"), new IDynamicTexture() {
+        });
     }
 
-    public ItemStack a(ItemStack itemstack, World world, EntityHuman entityhuman) {
+    public InteractionResultWrapper<ItemStack> a(ItemStack itemstack, World world, EntityHuman entityhuman, EnumHand enumhand) {
         if (entityhuman.hookedFish != null) {
-            int i = entityhuman.hookedFish.l();
+            int i = entityhuman.hookedFish.j();
 
             itemstack.damage(i, entityhuman);
-            entityhuman.bw();
+            entityhuman.a(enumhand);
         } else {
-            world.makeSound(entityhuman, "random.bow", 0.5F, 0.4F / (ItemFishingRod.g.nextFloat() * 0.4F + 0.8F));
+            world.a((EntityHuman) null, entityhuman.locX, entityhuman.locY, entityhuman.locZ, SoundEffects.H, SoundCategory.NEUTRAL, 0.5F, 0.4F / (ItemFishingRod.i.nextFloat() * 0.4F + 0.8F));
             if (!world.isClientSide) {
                 world.addEntity(new EntityFishingHook(world, entityhuman));
             }
 
-            entityhuman.bw();
-            entityhuman.b(StatisticList.USE_ITEM_COUNT[Item.getId(this)]);
+            entityhuman.a(enumhand);
+            entityhuman.b(StatisticList.b((Item) this));
         }
 
-        return itemstack;
+        return new InteractionResultWrapper(EnumInteractionResult.SUCCESS, itemstack);
     }
 
-    public boolean f_(ItemStack itemstack) {
-        return super.f_(itemstack);
+    public boolean g_(ItemStack itemstack) {
+        return super.g_(itemstack);
     }
 
-    public int b() {
+    public int c() {
         return 1;
     }
 }
