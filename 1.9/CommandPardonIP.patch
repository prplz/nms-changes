--- a/net/minecraft/server/CommandPardonIP.java
+++ b/net/minecraft/server/CommandPardonIP.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import java.util.Collections;
 import java.util.List;
 import java.util.regex.Matcher;
 
@@ -15,21 +16,21 @@
         return 3;
     }
 
-    public boolean canUse(ICommandListener icommandlistener) {
-        return MinecraftServer.getServer().getPlayerList().getIPBans().isEnabled() && super.canUse(icommandlistener);
+    public boolean canUse(MinecraftServer minecraftserver, ICommandListener icommandlistener) {
+        return minecraftserver.getPlayerList().getIPBans().isEnabled() && super.canUse(minecraftserver, icommandlistener);
     }
 
     public String getUsage(ICommandListener icommandlistener) {
         return "commands.unbanip.usage";
     }
 
-    public void execute(ICommandListener icommandlistener, String[] astring) throws CommandException {
+    public void execute(MinecraftServer minecraftserver, ICommandListener icommandlistener, String[] astring) throws CommandException {
         if (astring.length == 1 && astring[0].length() > 1) {
             Matcher matcher = CommandBanIp.a.matcher(astring[0]);
 
             if (matcher.matches()) {
-                MinecraftServer.getServer().getPlayerList().getIPBans().remove(astring[0]);
-                a(icommandlistener, this, "commands.unbanip.success", new Object[] { astring[0]});
+                minecraftserver.getPlayerList().getIPBans().remove(astring[0]);
+                a(icommandlistener, (ICommand) this, "commands.unbanip.success", new Object[] { astring[0]});
             } else {
                 throw new ExceptionInvalidSyntax("commands.unbanip.invalid", new Object[0]);
             }
@@ -38,7 +39,7 @@
         }
     }
 
-    public List<String> tabComplete(ICommandListener icommandlistener, String[] astring, BlockPosition blockposition) {
-        return astring.length == 1 ? a(astring, MinecraftServer.getServer().getPlayerList().getIPBans().getEntries()) : null;
+    public List<String> tabComplete(MinecraftServer minecraftserver, ICommandListener icommandlistener, String[] astring, BlockPosition blockposition) {
+        return astring.length == 1 ? a(astring, minecraftserver.getPlayerList().getIPBans().getEntries()) : Collections.emptyList();
     }
 }
