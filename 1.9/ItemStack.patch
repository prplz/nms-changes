--- a/net/minecraft/server/ItemStack.java
+++ b/net/minecraft/server/ItemStack.java
@@ -7,7 +7,7 @@
 
 public final class ItemStack {
 
-    public static final DecimalFormat a = new DecimalFormat("#.###");
+    public static final DecimalFormat a = new DecimalFormat("#.##");
     public int count;
     public int c;
     private Item item;
@@ -68,6 +68,7 @@
     }
 
     public ItemStack cloneAndSubtract(int i) {
+        i = Math.min(i, this.count);
         ItemStack itemstack = new ItemStack(this.item, i, this.damage);
 
         if (this.tag != null) {
@@ -82,30 +83,30 @@
         return this.item;
     }
 
-    public boolean placeItem(EntityHuman entityhuman, World world, BlockPosition blockposition, EnumDirection enumdirection, float f, float f1, float f2) {
-        boolean flag = this.getItem().interactWith(this, entityhuman, world, blockposition, enumdirection, f, f1, f2);
+    public EnumInteractionResult placeItem(EntityHuman entityhuman, World world, BlockPosition blockposition, EnumHand enumhand, EnumDirection enumdirection, float f, float f1, float f2) {
+        EnumInteractionResult enuminteractionresult = this.getItem().a(this, entityhuman, world, blockposition, enumhand, enumdirection, f, f1, f2);
 
-        if (flag) {
-            entityhuman.b(StatisticList.USE_ITEM_COUNT[Item.getId(this.item)]);
+        if (enuminteractionresult == EnumInteractionResult.SUCCESS) {
+            entityhuman.b(StatisticList.b(this.item));
         }
 
-        return flag;
+        return enuminteractionresult;
     }
 
-    public float a(Block block) {
-        return this.getItem().getDestroySpeed(this, block);
+    public float a(IBlockData iblockdata) {
+        return this.getItem().getDestroySpeed(this, iblockdata);
     }
 
-    public ItemStack a(World world, EntityHuman entityhuman) {
-        return this.getItem().a(this, world, entityhuman);
+    public InteractionResultWrapper<ItemStack> a(World world, EntityHuman entityhuman, EnumHand enumhand) {
+        return this.getItem().a(this, world, entityhuman, enumhand);
     }
 
-    public ItemStack b(World world, EntityHuman entityhuman) {
-        return this.getItem().b(this, world, entityhuman);
+    public ItemStack a(World world, EntityLiving entityliving) {
+        return this.getItem().a(this, world, entityliving);
     }
 
     public NBTTagCompound save(NBTTagCompound nbttagcompound) {
-        MinecraftKey minecraftkey = (MinecraftKey) Item.REGISTRY.c(this.item);
+        MinecraftKey minecraftkey = (MinecraftKey) Item.REGISTRY.b(this.item);
 
         nbttagcompound.setString("id", minecraftkey == null ? "minecraft:air" : minecraftkey.toString());
         nbttagcompound.setByte("Count", (byte) this.count);
@@ -118,12 +119,7 @@
     }
 
     public void c(NBTTagCompound nbttagcompound) {
-        if (nbttagcompound.hasKeyOfType("id", 8)) {
-            this.item = Item.d(nbttagcompound.getString("id"));
-        } else {
-            this.item = Item.getById(nbttagcompound.getShort("id"));
-        }
-
+        this.item = Item.d(nbttagcompound.getString("id"));
         this.count = nbttagcompound.getByte("Count");
         this.damage = nbttagcompound.getShort("Damage");
         if (this.damage < 0) {
@@ -176,7 +172,7 @@
     }
 
     public int j() {
-        return this.item.getMaxDurability();
+        return this.item == null ? 0 : this.item.getMaxDurability();
     }
 
     public boolean isDamaged(int i, Random random) {
@@ -184,7 +180,7 @@
             return false;
         } else {
             if (i > 0) {
-                int j = EnchantmentManager.getEnchantmentLevel(Enchantment.DURABILITY.id, this);
+                int j = EnchantmentManager.getEnchantmentLevel(Enchantments.DURABILITY, this);
                 int k = 0;
 
                 for (int l = 0; j > 0 && l < i; ++l) {
@@ -207,16 +203,13 @@
     public void damage(int i, EntityLiving entityliving) {
         if (!(entityliving instanceof EntityHuman) || !((EntityHuman) entityliving).abilities.canInstantlyBuild) {
             if (this.e()) {
-                if (this.isDamaged(i, entityliving.bc())) {
+                if (this.isDamaged(i, entityliving.getRandom())) {
                     entityliving.b(this);
                     --this.count;
                     if (entityliving instanceof EntityHuman) {
                         EntityHuman entityhuman = (EntityHuman) entityliving;
 
-                        entityhuman.b(StatisticList.BREAK_ITEM_COUNT[Item.getId(this.item)]);
-                        if (this.count == 0 && this.getItem() instanceof ItemBow) {
-                            entityhuman.ca();
-                        }
+                        entityhuman.b(StatisticList.c(this.item));
                     }
 
                     if (this.count < 0) {
@@ -231,29 +224,29 @@
     }
 
     public void a(EntityLiving entityliving, EntityHuman entityhuman) {
-        boolean flag = this.item.a(this, entityliving, (EntityLiving) entityhuman);
+        boolean flag = this.item.a(this, entityliving, entityhuman);
 
         if (flag) {
-            entityhuman.b(StatisticList.USE_ITEM_COUNT[Item.getId(this.item)]);
+            entityhuman.b(StatisticList.b(this.item));
         }
 
     }
 
-    public void a(World world, Block block, BlockPosition blockposition, EntityHuman entityhuman) {
-        boolean flag = this.item.a(this, world, block, blockposition, entityhuman);
+    public void a(World world, IBlockData iblockdata, BlockPosition blockposition, EntityHuman entityhuman) {
+        boolean flag = this.item.a(this, world, iblockdata, blockposition, entityhuman);
 
         if (flag) {
-            entityhuman.b(StatisticList.USE_ITEM_COUNT[Item.getId(this.item)]);
+            entityhuman.b(StatisticList.b(this.item));
         }
 
     }
 
-    public boolean b(Block block) {
-        return this.item.canDestroySpecialBlock(block);
+    public boolean b(IBlockData iblockdata) {
+        return this.item.canDestroySpecialBlock(iblockdata);
     }
 
-    public boolean a(EntityHuman entityhuman, EntityLiving entityliving) {
-        return this.item.a(this, entityhuman, entityliving);
+    public boolean a(EntityHuman entityhuman, EntityLiving entityliving, EnumHand enumhand) {
+        return this.item.a(this, entityhuman, entityliving, enumhand);
     }
 
     public ItemStack cloneItemStack() {
@@ -271,26 +264,34 @@
     }
 
     public static boolean matches(ItemStack itemstack, ItemStack itemstack1) {
-        return itemstack == null && itemstack1 == null ? true : (itemstack != null && itemstack1 != null ? itemstack.d(itemstack1) : false);
+        return itemstack == null && itemstack1 == null ? true : (itemstack != null && itemstack1 != null ? itemstack.e(itemstack1) : false);
     }
 
-    private boolean d(ItemStack itemstack) {
+    private boolean e(ItemStack itemstack) {
         return this.count != itemstack.count ? false : (this.item != itemstack.item ? false : (this.damage != itemstack.damage ? false : (this.tag == null && itemstack.tag != null ? false : this.tag == null || this.tag.equals(itemstack.tag))));
     }
 
     public static boolean c(ItemStack itemstack, ItemStack itemstack1) {
-        return itemstack == null && itemstack1 == null ? true : (itemstack != null && itemstack1 != null ? itemstack.doMaterialsMatch(itemstack1) : false);
+        return itemstack == itemstack1 ? true : (itemstack != null && itemstack1 != null ? itemstack.doMaterialsMatch(itemstack1) : false);
+    }
+
+    public static boolean d(ItemStack itemstack, ItemStack itemstack1) {
+        return itemstack == itemstack1 ? true : (itemstack != null && itemstack1 != null ? itemstack.b(itemstack1) : false);
     }
 
     public boolean doMaterialsMatch(ItemStack itemstack) {
         return itemstack != null && this.item == itemstack.item && this.damage == itemstack.damage;
     }
 
+    public boolean b(ItemStack itemstack) {
+        return !this.e() ? this.doMaterialsMatch(itemstack) : itemstack != null && this.item == itemstack.item;
+    }
+
     public String a() {
-        return this.item.e_(this);
+        return this.item.f_(this);
     }
 
-    public static ItemStack b(ItemStack itemstack) {
+    public static ItemStack c(ItemStack itemstack) {
         return itemstack == null ? null : itemstack.cloneItemStack();
     }
 
@@ -303,24 +304,27 @@
             --this.c;
         }
 
-        this.item.a(this, world, entity, i, flag);
+        if (this.item != null) {
+            this.item.a(this, world, entity, i, flag);
+        }
+
     }
 
     public void a(World world, EntityHuman entityhuman, int i) {
-        entityhuman.a(StatisticList.CRAFT_BLOCK_COUNT[Item.getId(this.item)], i);
-        this.item.d(this, world, entityhuman);
+        entityhuman.a(StatisticList.a(this.item), i);
+        this.item.b(this, world, entityhuman);
     }
 
     public int l() {
-        return this.getItem().d(this);
+        return this.getItem().e(this);
     }
 
     public EnumAnimation m() {
-        return this.getItem().e(this);
+        return this.getItem().f(this);
     }
 
-    public void b(World world, EntityHuman entityhuman, int i) {
-        this.getItem().a(this, world, entityhuman, i);
+    public void a(World world, EntityLiving entityliving, int i) {
+        this.getItem().a(this, world, entityliving, i);
     }
 
     public boolean hasTag() {
@@ -405,7 +409,7 @@
     }
 
     public boolean v() {
-        return !this.getItem().f_(this) ? false : !this.hasEnchantments();
+        return !this.getItem().g_(this) ? false : !this.hasEnchantments();
     }
 
     public void addEnchantment(Enchantment enchantment, int i) {
@@ -420,7 +424,7 @@
         NBTTagList nbttaglist = this.tag.getList("ench", 10);
         NBTTagCompound nbttagcompound = new NBTTagCompound();
 
-        nbttagcompound.setShort("id", (short) enchantment.id);
+        nbttagcompound.setShort("id", (short) Enchantment.getId(enchantment));
         nbttagcompound.setShort("lvl", (short) ((byte) i));
         nbttaglist.add(nbttagcompound);
     }
@@ -465,7 +469,7 @@
         this.tag.setInt("RepairCost", i);
     }
 
-    public Multimap<String, AttributeModifier> B() {
+    public Multimap<String, AttributeModifier> a(EnumItemSlot enumitemslot) {
         Object object;
 
         if (this.hasTag() && this.tag.hasKeyOfType("AttributeModifiers", 9)) {
@@ -476,22 +480,42 @@
                 NBTTagCompound nbttagcompound = nbttaglist.get(i);
                 AttributeModifier attributemodifier = GenericAttributes.a(nbttagcompound);
 
-                if (attributemodifier != null && attributemodifier.a().getLeastSignificantBits() != 0L && attributemodifier.a().getMostSignificantBits() != 0L) {
+                if (attributemodifier != null && (!nbttagcompound.hasKeyOfType("Slot", 8) || nbttagcompound.getString("Slot").equals(enumitemslot.d())) && attributemodifier.a().getLeastSignificantBits() != 0L && attributemodifier.a().getMostSignificantBits() != 0L) {
                     ((Multimap) object).put(nbttagcompound.getString("AttributeName"), attributemodifier);
                 }
             }
         } else {
-            object = this.getItem().i();
+            object = this.getItem().a(enumitemslot);
         }
 
         return (Multimap) object;
     }
 
+    public void a(String s, AttributeModifier attributemodifier, EnumItemSlot enumitemslot) {
+        if (this.tag == null) {
+            this.tag = new NBTTagCompound();
+        }
+
+        if (!this.tag.hasKeyOfType("AttributeModifiers", 9)) {
+            this.tag.set("AttributeModifiers", new NBTTagList());
+        }
+
+        NBTTagList nbttaglist = this.tag.getList("AttributeModifiers", 10);
+        NBTTagCompound nbttagcompound = GenericAttributes.a(attributemodifier);
+
+        nbttagcompound.setString("AttributeName", s);
+        if (enumitemslot != null) {
+            nbttagcompound.setString("Slot", enumitemslot.d());
+        }
+
+        nbttaglist.add(nbttagcompound);
+    }
+
     public void setItem(Item item) {
         this.item = item;
     }
 
-    public IChatBaseComponent C() {
+    public IChatBaseComponent B() {
         ChatComponentText chatcomponenttext = new ChatComponentText(this.getName());
 
         if (this.hasName()) {
@@ -511,7 +535,7 @@
         return ichatbasecomponent;
     }
 
-    public boolean c(Block block) {
+    public boolean a(Block block) {
         if (block == this.h) {
             return this.i;
         } else {
@@ -534,7 +558,7 @@
         }
     }
 
-    public boolean d(Block block) {
+    public boolean b(Block block) {
         if (block == this.j) {
             return this.k;
         } else {
