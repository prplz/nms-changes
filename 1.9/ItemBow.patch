--- a/net/minecraft/server/ItemBow.java
+++ b/net/minecraft/server/ItemBow.java
@@ -2,89 +2,133 @@
 
 public class ItemBow extends Item {
 
-    public static final String[] a = new String[] { "pulling_0", "pulling_1", "pulling_2"};
-
     public ItemBow() {
         this.maxStackSize = 1;
         this.setMaxDurability(384);
         this.a(CreativeModeTab.j);
-    }
-
-    public void a(ItemStack itemstack, World world, EntityHuman entityhuman, int i) {
-        boolean flag = entityhuman.abilities.canInstantlyBuild || EnchantmentManager.getEnchantmentLevel(Enchantment.ARROW_INFINITE.id, itemstack) > 0;
-
-        if (flag || entityhuman.inventory.b(Items.ARROW)) {
-            int j = this.d(itemstack) - i;
-            float f = (float) j / 20.0F;
-
-            f = (f * f + f * 2.0F) / 3.0F;
-            if ((double) f < 0.1D) {
-                return;
-            }
-
-            if (f > 1.0F) {
-                f = 1.0F;
+        this.a(new MinecraftKey("pull"), new IDynamicTexture() {
+        });
+        this.a(new MinecraftKey("pulling"), new IDynamicTexture() {
+        });
+    }
+
+    private ItemStack a(EntityHuman entityhuman) {
+        if (this.h_(entityhuman.b(EnumHand.OFF_HAND))) {
+            return entityhuman.b(EnumHand.OFF_HAND);
+        } else if (this.h_(entityhuman.b(EnumHand.MAIN_HAND))) {
+            return entityhuman.b(EnumHand.MAIN_HAND);
+        } else {
+            for (int i = 0; i < entityhuman.inventory.getSize(); ++i) {
+                ItemStack itemstack = entityhuman.inventory.getItem(i);
+
+                if (this.h_(itemstack)) {
+                    return itemstack;
+                }
             }
 
-            EntityArrow entityarrow = new EntityArrow(world, entityhuman, f * 2.0F);
-
-            if (f == 1.0F) {
-                entityarrow.setCritical(true);
-            }
-
-            int k = EnchantmentManager.getEnchantmentLevel(Enchantment.ARROW_DAMAGE.id, itemstack);
-
-            if (k > 0) {
-                entityarrow.b(entityarrow.j() + (double) k * 0.5D + 0.5D);
-            }
+            return null;
+        }
+    }
 
-            int l = EnchantmentManager.getEnchantmentLevel(Enchantment.ARROW_KNOCKBACK.id, itemstack);
+    protected boolean h_(ItemStack itemstack) {
+        return itemstack != null && itemstack.getItem() instanceof ItemArrow;
+    }
 
-            if (l > 0) {
-                entityarrow.setKnockbackStrength(l);
-            }
+    public void a(ItemStack itemstack, World world, EntityLiving entityliving, int i) {
+        if (entityliving instanceof EntityHuman) {
+            EntityHuman entityhuman = (EntityHuman) entityliving;
+            boolean flag = entityhuman.abilities.canInstantlyBuild || EnchantmentManager.getEnchantmentLevel(Enchantments.ARROW_INFINITE, itemstack) > 0;
+            ItemStack itemstack1 = this.a(entityhuman);
+
+            if (itemstack1 != null || flag) {
+                if (itemstack1 == null) {
+                    itemstack1 = new ItemStack(Items.ARROW);
+                }
+
+                int j = this.e(itemstack) - i;
+                float f = b(j);
+
+                if ((double) f >= 0.1D) {
+                    boolean flag1 = flag && itemstack1.getItem() == Items.ARROW;
+
+                    if (!world.isClientSide) {
+                        ItemArrow itemarrow = (ItemArrow) ((ItemArrow) (itemstack1.getItem() instanceof ItemArrow ? itemstack1.getItem() : Items.ARROW));
+                        EntityArrow entityarrow = itemarrow.a(world, itemstack1, entityhuman);
+
+                        entityarrow.a(entityhuman, entityhuman.pitch, entityhuman.yaw, 0.0F, f * 3.0F, 1.0F);
+                        if (f == 1.0F) {
+                            entityarrow.setCritical(true);
+                        }
+
+                        int k = EnchantmentManager.getEnchantmentLevel(Enchantments.ARROW_DAMAGE, itemstack);
+
+                        if (k > 0) {
+                            entityarrow.c(entityarrow.k() + (double) k * 0.5D + 0.5D);
+                        }
+
+                        int l = EnchantmentManager.getEnchantmentLevel(Enchantments.ARROW_KNOCKBACK, itemstack);
+
+                        if (l > 0) {
+                            entityarrow.setKnockbackStrength(l);
+                        }
+
+                        if (EnchantmentManager.getEnchantmentLevel(Enchantments.ARROW_FIRE, itemstack) > 0) {
+                            entityarrow.setOnFire(100);
+                        }
+
+                        itemstack.damage(1, entityhuman);
+                        if (flag1) {
+                            entityarrow.fromPlayer = EntityArrow.PickupStatus.CREATIVE_ONLY;
+                        }
+
+                        world.addEntity(entityarrow);
+                    }
+
+                    world.a((EntityHuman) null, entityhuman.locX, entityhuman.locY, entityhuman.locZ, SoundEffects.v, SoundCategory.NEUTRAL, 1.0F, 1.0F / (ItemBow.i.nextFloat() * 0.4F + 1.2F) + f * 0.5F);
+                    if (!flag1) {
+                        --itemstack1.count;
+                        if (itemstack1.count == 0) {
+                            entityhuman.inventory.d(itemstack1);
+                        }
+                    }
 
-            if (EnchantmentManager.getEnchantmentLevel(Enchantment.ARROW_FIRE.id, itemstack) > 0) {
-                entityarrow.setOnFire(100);
+                    entityhuman.b(StatisticList.b((Item) this));
+                }
             }
+        }
+    }
 
-            itemstack.damage(1, entityhuman);
-            world.makeSound(entityhuman, "random.bow", 1.0F, 1.0F / (ItemBow.g.nextFloat() * 0.4F + 1.2F) + f * 0.5F);
-            if (flag) {
-                entityarrow.fromPlayer = 2;
-            } else {
-                entityhuman.inventory.a(Items.ARROW);
-            }
+    public static float b(int i) {
+        float f = (float) i / 20.0F;
 
-            entityhuman.b(StatisticList.USE_ITEM_COUNT[Item.getId(this)]);
-            if (!world.isClientSide) {
-                world.addEntity(entityarrow);
-            }
+        f = (f * f + f * 2.0F) / 3.0F;
+        if (f > 1.0F) {
+            f = 1.0F;
         }
 
+        return f;
     }
 
-    public ItemStack b(ItemStack itemstack, World world, EntityHuman entityhuman) {
-        return itemstack;
-    }
-
-    public int d(ItemStack itemstack) {
+    public int e(ItemStack itemstack) {
         return 72000;
     }
 
-    public EnumAnimation e(ItemStack itemstack) {
+    public EnumAnimation f(ItemStack itemstack) {
         return EnumAnimation.BOW;
     }
 
-    public ItemStack a(ItemStack itemstack, World world, EntityHuman entityhuman) {
-        if (entityhuman.abilities.canInstantlyBuild || entityhuman.inventory.b(Items.ARROW)) {
-            entityhuman.a(itemstack, this.d(itemstack));
-        }
+    public InteractionResultWrapper<ItemStack> a(ItemStack itemstack, World world, EntityHuman entityhuman, EnumHand enumhand) {
+        boolean flag = this.a(entityhuman) != null;
 
-        return itemstack;
+        if (!entityhuman.abilities.canInstantlyBuild && !flag) {
+            return !flag ? new InteractionResultWrapper(EnumInteractionResult.FAIL, itemstack) : new InteractionResultWrapper(EnumInteractionResult.PASS, itemstack);
+        } else {
+            entityhuman.c(enumhand);
+            return new InteractionResultWrapper(EnumInteractionResult.SUCCESS, itemstack);
+        }
     }
 
-    public int b() {
+    public int c() {
         return 1;
     }
 }
