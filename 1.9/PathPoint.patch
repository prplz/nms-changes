--- a/net/minecraft/server/PathPoint.java
+++ b/net/minecraft/server/PathPoint.java
@@ -5,22 +5,43 @@
     public final int a;
     public final int b;
     public final int c;
-    private final int j;
-    int d = -1;
-    float e;
-    float f;
-    float g;
-    PathPoint h;
+    private final int n;
+    public int d = -1;
+    public float e;
+    public float f;
+    public float g;
+    public PathPoint h;
     public boolean i;
+    public float j = 0.0F;
+    public float k = 0.0F;
+    public float l = 0.0F;
+    public PathType m;
 
     public PathPoint(int i, int j, int k) {
+        this.m = PathType.BLOCKED;
         this.a = i;
         this.b = j;
         this.c = k;
-        this.j = a(i, j, k);
+        this.n = b(i, j, k);
     }
 
-    public static int a(int i, int j, int k) {
+    public PathPoint a(int i, int j, int k) {
+        PathPoint pathpoint = new PathPoint(i, j, k);
+
+        pathpoint.d = this.d;
+        pathpoint.e = this.e;
+        pathpoint.f = this.f;
+        pathpoint.g = this.g;
+        pathpoint.h = this.h;
+        pathpoint.i = this.i;
+        pathpoint.j = this.j;
+        pathpoint.k = this.k;
+        pathpoint.l = this.l;
+        pathpoint.m = this.m;
+        return pathpoint;
+    }
+
+    public static int b(int i, int j, int k) {
         return j & 255 | (i & 32767) << 8 | (k & 32767) << 24 | (i < 0 ? Integer.MIN_VALUE : 0) | (k < 0 ? '\u8000' : 0);
     }
 
@@ -40,18 +61,26 @@
         return f * f + f1 * f1 + f2 * f2;
     }
 
+    public float c(PathPoint pathpoint) {
+        float f = (float) Math.abs(pathpoint.a - this.a);
+        float f1 = (float) Math.abs(pathpoint.b - this.b);
+        float f2 = (float) Math.abs(pathpoint.c - this.c);
+
+        return f + f1 + f2;
+    }
+
     public boolean equals(Object object) {
         if (!(object instanceof PathPoint)) {
             return false;
         } else {
             PathPoint pathpoint = (PathPoint) object;
 
-            return this.j == pathpoint.j && this.a == pathpoint.a && this.b == pathpoint.b && this.c == pathpoint.c;
+            return this.n == pathpoint.n && this.a == pathpoint.a && this.b == pathpoint.b && this.c == pathpoint.c;
         }
     }
 
     public int hashCode() {
-        return this.j;
+        return this.n;
     }
 
     public boolean a() {
