--- a/net/minecraft/server/EntityLightning.java
+++ b/net/minecraft/server/EntityLightning.java
@@ -7,24 +7,26 @@
     private int lifeTicks;
     public long a;
     private int c;
+    private final boolean d;
 
-    public EntityLightning(World world, double d0, double d1, double d2) {
+    public EntityLightning(World world, double d0, double d1, double d2, boolean flag) {
         super(world);
         this.setPositionRotation(d0, d1, d2, 0.0F, 0.0F);
         this.lifeTicks = 2;
         this.a = this.random.nextLong();
         this.c = this.random.nextInt(3) + 1;
+        this.d = flag;
         BlockPosition blockposition = new BlockPosition(this);
 
-        if (!world.isClientSide && world.getGameRules().getBoolean("doFireTick") && (world.getDifficulty() == EnumDifficulty.NORMAL || world.getDifficulty() == EnumDifficulty.HARD) && world.areChunksLoaded(blockposition, 10)) {
-            if (world.getType(blockposition).getBlock().getMaterial() == Material.AIR && Blocks.FIRE.canPlace(world, blockposition)) {
+        if (!flag && !world.isClientSide && world.getGameRules().getBoolean("doFireTick") && (world.getDifficulty() == EnumDifficulty.NORMAL || world.getDifficulty() == EnumDifficulty.HARD) && world.areChunksLoaded(blockposition, 10)) {
+            if (world.getType(blockposition).getMaterial() == Material.AIR && Blocks.FIRE.canPlace(world, blockposition)) {
                 world.setTypeUpdate(blockposition, Blocks.FIRE.getBlockData());
             }
 
             for (int i = 0; i < 4; ++i) {
                 BlockPosition blockposition1 = blockposition.a(this.random.nextInt(3) - 1, this.random.nextInt(3) - 1, this.random.nextInt(3) - 1);
 
-                if (world.getType(blockposition1).getBlock().getMaterial() == Material.AIR && Blocks.FIRE.canPlace(world, blockposition1)) {
+                if (world.getType(blockposition1).getMaterial() == Material.AIR && Blocks.FIRE.canPlace(world, blockposition1)) {
                     world.setTypeUpdate(blockposition1, Blocks.FIRE.getBlockData());
                 }
             }
@@ -32,11 +34,15 @@
 
     }
 
-    public void t_() {
-        super.t_();
+    public SoundCategory bz() {
+        return SoundCategory.WEATHER;
+    }
+
+    public void m() {
+        super.m();
         if (this.lifeTicks == 2) {
-            this.world.makeSound(this.locX, this.locY, this.locZ, "ambient.weather.thunder", 10000.0F, 0.8F + this.random.nextFloat() * 0.2F);
-            this.world.makeSound(this.locX, this.locY, this.locZ, "random.explode", 2.0F, 0.5F + this.random.nextFloat() * 0.2F);
+            this.world.a((EntityHuman) null, this.locX, this.locY, this.locZ, SoundEffects.dh, SoundCategory.WEATHER, 10000.0F, 0.8F + this.random.nextFloat() * 0.2F);
+            this.world.a((EntityHuman) null, this.locX, this.locY, this.locZ, SoundEffects.dg, SoundCategory.WEATHER, 2.0F, 0.5F + this.random.nextFloat() * 0.2F);
         }
 
         --this.lifeTicks;
@@ -46,11 +52,13 @@
             } else if (this.lifeTicks < -this.random.nextInt(10)) {
                 --this.c;
                 this.lifeTicks = 1;
-                this.a = this.random.nextLong();
-                BlockPosition blockposition = new BlockPosition(this);
-
-                if (!this.world.isClientSide && this.world.getGameRules().getBoolean("doFireTick") && this.world.areChunksLoaded(blockposition, 10) && this.world.getType(blockposition).getBlock().getMaterial() == Material.AIR && Blocks.FIRE.canPlace(this.world, blockposition)) {
-                    this.world.setTypeUpdate(blockposition, Blocks.FIRE.getBlockData());
+                if (!this.d && !this.world.isClientSide) {
+                    this.a = this.random.nextLong();
+                    BlockPosition blockposition = new BlockPosition(this);
+
+                    if (this.world.getGameRules().getBoolean("doFireTick") && this.world.areChunksLoaded(blockposition, 10) && this.world.getType(blockposition).getMaterial() == Material.AIR && Blocks.FIRE.canPlace(this.world, blockposition)) {
+                        this.world.setTypeUpdate(blockposition, Blocks.FIRE.getBlockData());
+                    }
                 }
             }
         }
@@ -58,7 +66,7 @@
         if (this.lifeTicks >= 0) {
             if (this.world.isClientSide) {
                 this.world.d(2);
-            } else {
+            } else if (!this.d) {
                 double d0 = 3.0D;
                 List list = this.world.getEntities(this, new AxisAlignedBB(this.locX - d0, this.locY - d0, this.locZ - d0, this.locX + d0, this.locY + 6.0D + d0, this.locZ + d0));
 
@@ -72,7 +80,7 @@
 
     }
 
-    protected void h() {}
+    protected void i() {}
 
     protected void a(NBTTagCompound nbttagcompound) {}
 
