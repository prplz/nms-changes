--- a/net/minecraft/server/CommandBanIp.java
+++ b/net/minecraft/server/CommandBanIp.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import java.util.Collections;
 import java.util.Date;
 import java.util.Iterator;
 import java.util.List;
@@ -20,29 +21,29 @@
         return 3;
     }
 
-    public boolean canUse(ICommandListener icommandlistener) {
-        return MinecraftServer.getServer().getPlayerList().getIPBans().isEnabled() && super.canUse(icommandlistener);
+    public boolean canUse(MinecraftServer minecraftserver, ICommandListener icommandlistener) {
+        return minecraftserver.getPlayerList().getIPBans().isEnabled() && super.canUse(minecraftserver, icommandlistener);
     }
 
     public String getUsage(ICommandListener icommandlistener) {
         return "commands.banip.usage";
     }
 
-    public void execute(ICommandListener icommandlistener, String[] astring) throws CommandException {
+    public void execute(MinecraftServer minecraftserver, ICommandListener icommandlistener, String[] astring) throws CommandException {
         if (astring.length >= 1 && astring[0].length() > 1) {
             IChatBaseComponent ichatbasecomponent = astring.length >= 2 ? a(icommandlistener, astring, 1) : null;
             Matcher matcher = CommandBanIp.a.matcher(astring[0]);
 
             if (matcher.matches()) {
-                this.a(icommandlistener, astring[0], ichatbasecomponent == null ? null : ichatbasecomponent.c());
+                this.a(minecraftserver, icommandlistener, astring[0], ichatbasecomponent == null ? null : ichatbasecomponent.toPlainText());
             } else {
-                EntityPlayer entityplayer = MinecraftServer.getServer().getPlayerList().getPlayer(astring[0]);
+                EntityPlayer entityplayer = minecraftserver.getPlayerList().getPlayer(astring[0]);
 
                 if (entityplayer == null) {
                     throw new ExceptionPlayerNotFound("commands.banip.invalid", new Object[0]);
                 }
 
-                this.a(icommandlistener, entityplayer.w(), ichatbasecomponent == null ? null : ichatbasecomponent.c());
+                this.a(minecraftserver, icommandlistener, entityplayer.A(), ichatbasecomponent == null ? null : ichatbasecomponent.toPlainText());
             }
 
         } else {
@@ -50,15 +51,15 @@
         }
     }
 
-    public List<String> tabComplete(ICommandListener icommandlistener, String[] astring, BlockPosition blockposition) {
-        return astring.length == 1 ? a(astring, MinecraftServer.getServer().getPlayers()) : null;
+    public List<String> tabComplete(MinecraftServer minecraftserver, ICommandListener icommandlistener, String[] astring, BlockPosition blockposition) {
+        return astring.length == 1 ? a(astring, minecraftserver.getPlayers()) : Collections.emptyList();
     }
 
-    protected void a(ICommandListener icommandlistener, String s, String s1) {
+    protected void a(MinecraftServer minecraftserver, ICommandListener icommandlistener, String s, String s1) {
         IpBanEntry ipbanentry = new IpBanEntry(s, (Date) null, icommandlistener.getName(), (Date) null, s1);
 
-        MinecraftServer.getServer().getPlayerList().getIPBans().add(ipbanentry);
-        List list = MinecraftServer.getServer().getPlayerList().b(s);
+        minecraftserver.getPlayerList().getIPBans().add(ipbanentry);
+        List list = minecraftserver.getPlayerList().b(s);
         String[] astring = new String[list.size()];
         int i = 0;
 
@@ -70,9 +71,9 @@
         }
 
         if (list.isEmpty()) {
-            a(icommandlistener, this, "commands.banip.success", new Object[] { s});
+            a(icommandlistener, (ICommand) this, "commands.banip.success", new Object[] { s});
         } else {
-            a(icommandlistener, this, "commands.banip.success.players", new Object[] { s, a((Object[]) astring)});
+            a(icommandlistener, (ICommand) this, "commands.banip.success.players", new Object[] { s, a((Object[]) astring)});
         }
 
     }
