--- a/net/minecraft/server/Container.java
+++ b/net/minecraft/server/Container.java
@@ -90,17 +90,17 @@
         return slot != null ? slot.getItem() : null;
     }
 
-    public ItemStack clickItem(int i, int j, int k, EntityHuman entityhuman) {
+    public ItemStack a(int i, int j, InventoryClickType inventoryclicktype, EntityHuman entityhuman) {
         ItemStack itemstack = null;
         PlayerInventory playerinventory = entityhuman.inventory;
-        int l;
+        int k;
         ItemStack itemstack1;
 
-        if (k == 5) {
-            int i1 = this.g;
+        if (inventoryclicktype == InventoryClickType.QUICK_CRAFT) {
+            int l = this.g;
 
             this.g = c(j);
-            if ((i1 != 1 || this.g != 2) && i1 != this.g) {
+            if ((l != 1 || this.g != 2) && l != this.g) {
                 this.d();
             } else if (playerinventory.getCarried() == null) {
                 this.d();
@@ -121,7 +121,7 @@
             } else if (this.g == 2) {
                 if (!this.h.isEmpty()) {
                     itemstack1 = playerinventory.getCarried().cloneItemStack();
-                    l = playerinventory.getCarried().count;
+                    k = playerinventory.getCarried().count;
                     Iterator iterator = this.h.iterator();
 
                     while (iterator.hasNext()) {
@@ -129,9 +129,9 @@
 
                         if (slot1 != null && a(slot1, playerinventory.getCarried(), true) && slot1.isAllowed(playerinventory.getCarried()) && playerinventory.getCarried().count >= this.h.size() && this.b(slot1)) {
                             ItemStack itemstack2 = itemstack1.cloneItemStack();
-                            int j1 = slot1.hasItem() ? slot1.getItem().count : 0;
+                            int i1 = slot1.hasItem() ? slot1.getItem().count : 0;
 
-                            a(this.h, this.dragType, itemstack2, j1);
+                            a(this.h, this.dragType, itemstack2, i1);
                             if (itemstack2.count > itemstack2.getMaxStackSize()) {
                                 itemstack2.count = itemstack2.getMaxStackSize();
                             }
@@ -140,12 +140,12 @@
                                 itemstack2.count = slot1.getMaxStackSize(itemstack2);
                             }
 
-                            l -= itemstack2.count - j1;
+                            k -= itemstack2.count - i1;
                             slot1.set(itemstack2);
                         }
                     }
 
-                    itemstack1.count = l;
+                    itemstack1.count = k;
                     if (itemstack1.count <= 0) {
                         itemstack1 = null;
                     }
@@ -161,10 +161,10 @@
             this.d();
         } else {
             Slot slot2;
-            int k1;
             ItemStack itemstack3;
+            int j1;
 
-            if ((k == 0 || k == 1) && (j == 0 || j == 1)) {
+            if ((inventoryclicktype == InventoryClickType.PICKUP || inventoryclicktype == InventoryClickType.QUICK_MOVE) && (j == 0 || j == 1)) {
                 if (i == -999) {
                     if (playerinventory.getCarried() != null) {
                         if (j == 0) {
@@ -179,18 +179,24 @@
                             }
                         }
                     }
-                } else if (k == 1) {
+                } else if (inventoryclicktype == InventoryClickType.QUICK_MOVE) {
                     if (i < 0) {
                         return null;
                     }
 
                     slot2 = (Slot) this.c.get(i);
                     if (slot2 != null && slot2.isAllowed(entityhuman)) {
-                        itemstack1 = this.b(entityhuman, i);
-                        if (itemstack1 != null) {
-                            Item item = itemstack1.getItem();
-
+                        itemstack1 = slot2.getItem();
+                        if (itemstack1 != null && itemstack1.count <= 0) {
                             itemstack = itemstack1.cloneItemStack();
+                            slot2.set((ItemStack) null);
+                        }
+
+                        itemstack3 = this.b(entityhuman, i);
+                        if (itemstack3 != null) {
+                            Item item = itemstack3.getItem();
+
+                            itemstack = itemstack3.cloneItemStack();
                             if (slot2.getItem() != null && slot2.getItem().getItem() == item) {
                                 this.a(i, j, true, entityhuman);
                             }
@@ -204,63 +210,63 @@
                     slot2 = (Slot) this.c.get(i);
                     if (slot2 != null) {
                         itemstack1 = slot2.getItem();
-                        ItemStack itemstack4 = playerinventory.getCarried();
-
+                        itemstack3 = playerinventory.getCarried();
                         if (itemstack1 != null) {
                             itemstack = itemstack1.cloneItemStack();
                         }
 
                         if (itemstack1 == null) {
-                            if (itemstack4 != null && slot2.isAllowed(itemstack4)) {
-                                k1 = j == 0 ? itemstack4.count : 1;
-                                if (k1 > slot2.getMaxStackSize(itemstack4)) {
-                                    k1 = slot2.getMaxStackSize(itemstack4);
+                            if (itemstack3 != null && slot2.isAllowed(itemstack3)) {
+                                j1 = j == 0 ? itemstack3.count : 1;
+                                if (j1 > slot2.getMaxStackSize(itemstack3)) {
+                                    j1 = slot2.getMaxStackSize(itemstack3);
                                 }
 
-                                if (itemstack4.count >= k1) {
-                                    slot2.set(itemstack4.cloneAndSubtract(k1));
-                                }
-
-                                if (itemstack4.count == 0) {
+                                slot2.set(itemstack3.cloneAndSubtract(j1));
+                                if (itemstack3.count == 0) {
                                     playerinventory.setCarried((ItemStack) null);
                                 }
                             }
                         } else if (slot2.isAllowed(entityhuman)) {
-                            if (itemstack4 == null) {
-                                k1 = j == 0 ? itemstack1.count : (itemstack1.count + 1) / 2;
-                                itemstack3 = slot2.a(k1);
-                                playerinventory.setCarried(itemstack3);
-                                if (itemstack1.count == 0) {
+                            if (itemstack3 == null) {
+                                if (itemstack1.count > 0) {
+                                    j1 = j == 0 ? itemstack1.count : (itemstack1.count + 1) / 2;
+                                    playerinventory.setCarried(slot2.a(j1));
+                                    if (itemstack1.count <= 0) {
+                                        slot2.set((ItemStack) null);
+                                    }
+
+                                    slot2.a(entityhuman, playerinventory.getCarried());
+                                } else {
                                     slot2.set((ItemStack) null);
+                                    playerinventory.setCarried((ItemStack) null);
                                 }
-
-                                slot2.a(entityhuman, playerinventory.getCarried());
-                            } else if (slot2.isAllowed(itemstack4)) {
-                                if (itemstack1.getItem() == itemstack4.getItem() && itemstack1.getData() == itemstack4.getData() && ItemStack.equals(itemstack1, itemstack4)) {
-                                    k1 = j == 0 ? itemstack4.count : 1;
-                                    if (k1 > slot2.getMaxStackSize(itemstack4) - itemstack1.count) {
-                                        k1 = slot2.getMaxStackSize(itemstack4) - itemstack1.count;
+                            } else if (slot2.isAllowed(itemstack3)) {
+                                if (itemstack1.getItem() == itemstack3.getItem() && itemstack1.getData() == itemstack3.getData() && ItemStack.equals(itemstack1, itemstack3)) {
+                                    j1 = j == 0 ? itemstack3.count : 1;
+                                    if (j1 > slot2.getMaxStackSize(itemstack3) - itemstack1.count) {
+                                        j1 = slot2.getMaxStackSize(itemstack3) - itemstack1.count;
                                     }
 
-                                    if (k1 > itemstack4.getMaxStackSize() - itemstack1.count) {
-                                        k1 = itemstack4.getMaxStackSize() - itemstack1.count;
+                                    if (j1 > itemstack3.getMaxStackSize() - itemstack1.count) {
+                                        j1 = itemstack3.getMaxStackSize() - itemstack1.count;
                                     }
 
-                                    itemstack4.cloneAndSubtract(k1);
-                                    if (itemstack4.count == 0) {
+                                    itemstack3.cloneAndSubtract(j1);
+                                    if (itemstack3.count == 0) {
                                         playerinventory.setCarried((ItemStack) null);
                                     }
 
-                                    itemstack1.count += k1;
-                                } else if (itemstack4.count <= slot2.getMaxStackSize(itemstack4)) {
-                                    slot2.set(itemstack4);
+                                    itemstack1.count += j1;
+                                } else if (itemstack3.count <= slot2.getMaxStackSize(itemstack3)) {
+                                    slot2.set(itemstack3);
                                     playerinventory.setCarried(itemstack1);
                                 }
-                            } else if (itemstack1.getItem() == itemstack4.getItem() && itemstack4.getMaxStackSize() > 1 && (!itemstack1.usesData() || itemstack1.getData() == itemstack4.getData()) && ItemStack.equals(itemstack1, itemstack4)) {
-                                k1 = itemstack1.count;
-                                if (k1 > 0 && k1 + itemstack4.count <= itemstack4.getMaxStackSize()) {
-                                    itemstack4.count += k1;
-                                    itemstack1 = slot2.a(k1);
+                            } else if (itemstack1.getItem() == itemstack3.getItem() && itemstack3.getMaxStackSize() > 1 && (!itemstack1.usesData() || itemstack1.getData() == itemstack3.getData()) && ItemStack.equals(itemstack1, itemstack3)) {
+                                j1 = itemstack1.count;
+                                if (j1 > 0 && j1 + itemstack3.count <= itemstack3.getMaxStackSize()) {
+                                    itemstack3.count += j1;
+                                    itemstack1 = slot2.a(j1);
                                     if (itemstack1.count == 0) {
                                         slot2.set((ItemStack) null);
                                     }
@@ -273,73 +279,86 @@
                         slot2.f();
                     }
                 }
-            } else if (k == 2 && j >= 0 && j < 9) {
+            } else if (inventoryclicktype == InventoryClickType.SWAP && j >= 0 && j < 9) {
                 slot2 = (Slot) this.c.get(i);
-                if (slot2.isAllowed(entityhuman)) {
-                    itemstack1 = playerinventory.getItem(j);
-                    boolean flag = itemstack1 == null || slot2.inventory == playerinventory && slot2.isAllowed(itemstack1);
-
-                    k1 = -1;
-                    if (!flag) {
-                        k1 = playerinventory.getFirstEmptySlotIndex();
-                        flag |= k1 > -1;
-                    }
-
-                    if (slot2.hasItem() && flag) {
-                        itemstack3 = slot2.getItem();
-                        playerinventory.setItem(j, itemstack3.cloneItemStack());
-                        if ((slot2.inventory != playerinventory || !slot2.isAllowed(itemstack1)) && itemstack1 != null) {
-                            if (k1 > -1) {
-                                playerinventory.pickup(itemstack1);
-                                slot2.a(itemstack3.count);
-                                slot2.set((ItemStack) null);
-                                slot2.a(entityhuman, itemstack3);
+                itemstack1 = playerinventory.getItem(j);
+                if (itemstack1 != null && itemstack1.count <= 0) {
+                    itemstack1 = null;
+                    playerinventory.setItem(j, (ItemStack) null);
+                }
+
+                itemstack3 = slot2.getItem();
+                if (itemstack1 != null || itemstack3 != null) {
+                    if (itemstack1 == null) {
+                        if (slot2.isAllowed(entityhuman)) {
+                            playerinventory.setItem(j, itemstack3);
+                            slot2.set((ItemStack) null);
+                            slot2.a(entityhuman, itemstack3);
+                        }
+                    } else if (itemstack3 == null) {
+                        if (slot2.isAllowed(itemstack1)) {
+                            j1 = slot2.getMaxStackSize(itemstack1);
+                            if (itemstack1.count > j1) {
+                                slot2.set(itemstack1.cloneAndSubtract(j1));
+                            } else {
+                                slot2.set(itemstack1);
+                                playerinventory.setItem(j, (ItemStack) null);
+                            }
+                        }
+                    } else if (slot2.isAllowed(entityhuman) && slot2.isAllowed(itemstack1)) {
+                        j1 = slot2.getMaxStackSize(itemstack1);
+                        if (itemstack1.count > j1) {
+                            slot2.set(itemstack1.cloneAndSubtract(j1));
+                            slot2.a(entityhuman, itemstack3);
+                            if (!playerinventory.pickup(itemstack3)) {
+                                entityhuman.drop(itemstack3, true);
                             }
                         } else {
-                            slot2.a(itemstack3.count);
                             slot2.set(itemstack1);
+                            playerinventory.setItem(j, itemstack3);
                             slot2.a(entityhuman, itemstack3);
                         }
-                    } else if (!slot2.hasItem() && itemstack1 != null && slot2.isAllowed(itemstack1)) {
-                        playerinventory.setItem(j, (ItemStack) null);
-                        slot2.set(itemstack1);
                     }
                 }
-            } else if (k == 3 && entityhuman.abilities.canInstantlyBuild && playerinventory.getCarried() == null && i >= 0) {
+            } else if (inventoryclicktype == InventoryClickType.CLONE && entityhuman.abilities.canInstantlyBuild && playerinventory.getCarried() == null && i >= 0) {
                 slot2 = (Slot) this.c.get(i);
                 if (slot2 != null && slot2.hasItem()) {
-                    itemstack1 = slot2.getItem().cloneItemStack();
-                    itemstack1.count = itemstack1.getMaxStackSize();
-                    playerinventory.setCarried(itemstack1);
+                    if (slot2.getItem().count > 0) {
+                        itemstack1 = slot2.getItem().cloneItemStack();
+                        itemstack1.count = itemstack1.getMaxStackSize();
+                        playerinventory.setCarried(itemstack1);
+                    } else {
+                        slot2.set((ItemStack) null);
+                    }
                 }
-            } else if (k == 4 && playerinventory.getCarried() == null && i >= 0) {
+            } else if (inventoryclicktype == InventoryClickType.THROW && playerinventory.getCarried() == null && i >= 0) {
                 slot2 = (Slot) this.c.get(i);
                 if (slot2 != null && slot2.hasItem() && slot2.isAllowed(entityhuman)) {
                     itemstack1 = slot2.a(j == 0 ? 1 : slot2.getItem().count);
                     slot2.a(entityhuman, itemstack1);
                     entityhuman.drop(itemstack1, true);
                 }
-            } else if (k == 6 && i >= 0) {
+            } else if (inventoryclicktype == InventoryClickType.PICKUP_ALL && i >= 0) {
                 slot2 = (Slot) this.c.get(i);
                 itemstack1 = playerinventory.getCarried();
                 if (itemstack1 != null && (slot2 == null || !slot2.hasItem() || !slot2.isAllowed(entityhuman))) {
-                    l = j == 0 ? 0 : this.c.size() - 1;
-                    k1 = j == 0 ? 1 : -1;
+                    k = j == 0 ? 0 : this.c.size() - 1;
+                    j1 = j == 0 ? 1 : -1;
 
-                    for (int l1 = 0; l1 < 2; ++l1) {
-                        for (int i2 = l; i2 >= 0 && i2 < this.c.size() && itemstack1.count < itemstack1.getMaxStackSize(); i2 += k1) {
-                            Slot slot3 = (Slot) this.c.get(i2);
-
-                            if (slot3.hasItem() && a(slot3, itemstack1, true) && slot3.isAllowed(entityhuman) && this.a(itemstack1, slot3) && (l1 != 0 || slot3.getItem().count != slot3.getItem().getMaxStackSize())) {
-                                int j2 = Math.min(itemstack1.getMaxStackSize() - itemstack1.count, slot3.getItem().count);
-                                ItemStack itemstack5 = slot3.a(j2);
+                    for (int k1 = 0; k1 < 2; ++k1) {
+                        for (int l1 = k; l1 >= 0 && l1 < this.c.size() && itemstack1.count < itemstack1.getMaxStackSize(); l1 += j1) {
+                            Slot slot3 = (Slot) this.c.get(l1);
+
+                            if (slot3.hasItem() && a(slot3, itemstack1, true) && slot3.isAllowed(entityhuman) && this.a(itemstack1, slot3) && (k1 != 0 || slot3.getItem().count != slot3.getItem().getMaxStackSize())) {
+                                int i2 = Math.min(itemstack1.getMaxStackSize() - itemstack1.count, slot3.getItem().count);
+                                ItemStack itemstack4 = slot3.a(i2);
 
-                                itemstack1.count += j2;
-                                if (itemstack5.count <= 0) {
+                                itemstack1.count += i2;
+                                if (itemstack4.count <= 0) {
                                     slot3.set((ItemStack) null);
                                 }
 
-                                slot3.a(entityhuman, itemstack5);
+                                slot3.a(entityhuman, itemstack4);
                             }
                         }
                     }
@@ -357,7 +376,7 @@
     }
 
     protected void a(int i, int j, boolean flag, EntityHuman entityhuman) {
-        this.clickItem(i, j, 1, entityhuman);
+        this.a(i, j, InventoryClickType.QUICK_MOVE, entityhuman);
     }
 
     public void b(EntityHuman entityhuman) {
@@ -408,7 +427,7 @@
             while (itemstack.count > 0 && (!flag && k < j || flag && k >= i)) {
                 slot = (Slot) this.c.get(k);
                 itemstack1 = slot.getItem();
-                if (itemstack1 != null && itemstack1.getItem() == itemstack.getItem() && (!itemstack.usesData() || itemstack.getData() == itemstack1.getData()) && ItemStack.equals(itemstack, itemstack1)) {
+                if (itemstack1 != null && a(itemstack, itemstack1)) {
                     int l = itemstack1.count + itemstack.count;
 
                     if (l <= itemstack.getMaxStackSize()) {
@@ -461,6 +480,10 @@
         return flag1;
     }
 
+    private static boolean a(ItemStack itemstack, ItemStack itemstack1) {
+        return itemstack1.getItem() == itemstack.getItem() && (!itemstack.usesData() || itemstack.getData() == itemstack1.getData()) && ItemStack.equals(itemstack, itemstack1);
+    }
+
     public static int b(int i) {
         return i >> 2 & 3;
     }
