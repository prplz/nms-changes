--- a/net/minecraft/server/EntityWither.java
+++ b/net/minecraft/server/EntityWither.java
@@ -7,14 +7,20 @@
 
 public class EntityWither extends EntityMonster implements IRangedEntity {
 
-    private float[] a = new float[2];
-    private float[] b = new float[2];
-    private float[] c = new float[2];
-    private float[] bm = new float[2];
-    private int[] bn = new int[2];
-    private int[] bo = new int[2];
-    private int bp;
-    private static final Predicate<Entity> bq = new Predicate() {
+    private static final DataWatcherObject<Integer> a = DataWatcher.a(EntityWither.class, DataWatcherRegistry.b);
+    private static final DataWatcherObject<Integer> b = DataWatcher.a(EntityWither.class, DataWatcherRegistry.b);
+    private static final DataWatcherObject<Integer> c = DataWatcher.a(EntityWither.class, DataWatcherRegistry.b);
+    private static final DataWatcherObject<Integer>[] bv = new DataWatcherObject[] { EntityWither.a, EntityWither.b, EntityWither.c};
+    private static final DataWatcherObject<Integer> bw = DataWatcher.a(EntityWither.class, DataWatcherRegistry.b);
+    private float[] bx = new float[2];
+    private float[] by = new float[2];
+    private float[] bz = new float[2];
+    private float[] bA = new float[2];
+    private int[] bB = new int[2];
+    private int[] bC = new int[2];
+    private int bD;
+    private final BossBattleServer bE;
+    private static final Predicate<Entity> bF = new Predicate() {
         public boolean a(Entity entity) {
             return entity instanceof EntityLiving && ((EntityLiving) entity).getMonsterType() != EnumMonsterType.UNDEAD;
         }
@@ -26,61 +32,66 @@
 
     public EntityWither(World world) {
         super(world);
+        this.bE = (BossBattleServer) (new BossBattleServer(this.getScoreboardDisplayName(), BossBattle.BarColor.PURPLE, BossBattle.BarStyle.PROGRESS)).setDarkenSky(true);
         this.setHealth(this.getMaxHealth());
         this.setSize(0.9F, 3.5F);
         this.fireProof = true;
-        ((Navigation) this.getNavigation()).d(true);
-        this.goalSelector.a(0, new PathfinderGoalFloat(this));
+        ((Navigation) this.getNavigation()).c(true);
+        this.b_ = 50;
+    }
+
+    protected void r() {
+        this.goalSelector.a(0, new EntityWither.a());
+        this.goalSelector.a(1, new PathfinderGoalFloat(this));
         this.goalSelector.a(2, new PathfinderGoalArrowAttack(this, 1.0D, 40, 20.0F));
         this.goalSelector.a(5, new PathfinderGoalRandomStroll(this, 1.0D));
         this.goalSelector.a(6, new PathfinderGoalLookAtPlayer(this, EntityHuman.class, 8.0F));
         this.goalSelector.a(7, new PathfinderGoalRandomLookaround(this));
         this.targetSelector.a(1, new PathfinderGoalHurtByTarget(this, false, new Class[0]));
-        this.targetSelector.a(2, new PathfinderGoalNearestAttackableTarget(this, EntityInsentient.class, 0, false, false, EntityWither.bq));
-        this.b_ = 50;
+        this.targetSelector.a(2, new PathfinderGoalNearestAttackableTarget(this, EntityInsentient.class, 0, false, false, EntityWither.bF));
     }
 
-    protected void h() {
-        super.h();
-        this.datawatcher.a(17, new Integer(0));
-        this.datawatcher.a(18, new Integer(0));
-        this.datawatcher.a(19, new Integer(0));
-        this.datawatcher.a(20, new Integer(0));
+    protected void i() {
+        super.i();
+        this.datawatcher.register(EntityWither.a, Integer.valueOf(0));
+        this.datawatcher.register(EntityWither.b, Integer.valueOf(0));
+        this.datawatcher.register(EntityWither.c, Integer.valueOf(0));
+        this.datawatcher.register(EntityWither.bw, Integer.valueOf(0));
     }
 
     public void b(NBTTagCompound nbttagcompound) {
         super.b(nbttagcompound);
-        nbttagcompound.setInt("Invul", this.cl());
+        nbttagcompound.setInt("Invul", this.cZ());
     }
 
     public void a(NBTTagCompound nbttagcompound) {
         super.a(nbttagcompound);
-        this.r(nbttagcompound.getInt("Invul"));
+        this.l(nbttagcompound.getInt("Invul"));
     }
 
-    protected String z() {
-        return "mob.wither.idle";
+    protected SoundEffect G() {
+        return SoundEffects.gE;
     }
 
-    protected String bo() {
-        return "mob.wither.hurt";
+    protected SoundEffect bR() {
+        return SoundEffects.gH;
     }
 
-    protected String bp() {
-        return "mob.wither.death";
+    protected SoundEffect bS() {
+        return SoundEffects.gG;
     }
 
-    public void m() {
+    public void n() {
         this.motY *= 0.6000000238418579D;
         double d0;
         double d1;
         double d2;
 
-        if (!this.world.isClientSide && this.s(0) > 0) {
-            Entity entity = this.world.a(this.s(0));
+        if (!this.world.isClientSide && this.m(0) > 0) {
+            Entity entity = this.world.getEntity(this.m(0));
 
             if (entity != null) {
-                if (this.locY < entity.locY || !this.cm() && this.locY < entity.locY + 5.0D) {
+                if (this.locY < entity.locY || !this.da() && this.locY < entity.locY + 5.0D) {
                     if (this.motY < 0.0D) {
                         this.motY = 0.0D;
                     }
@@ -104,49 +115,49 @@
             this.yaw = (float) MathHelper.b(this.motZ, this.motX) * 57.295776F - 90.0F;
         }
 
-        super.m();
+        super.n();
 
         int i;
 
         for (i = 0; i < 2; ++i) {
-            this.bm[i] = this.b[i];
-            this.c[i] = this.a[i];
+            this.bA[i] = this.by[i];
+            this.bz[i] = this.bx[i];
         }
 
         int j;
 
         for (i = 0; i < 2; ++i) {
-            j = this.s(i + 1);
+            j = this.m(i + 1);
             Entity entity1 = null;
 
             if (j > 0) {
-                entity1 = this.world.a(j);
+                entity1 = this.world.getEntity(j);
             }
 
             if (entity1 != null) {
-                d0 = this.t(i + 1);
-                d1 = this.u(i + 1);
-                d2 = this.v(i + 1);
+                d0 = this.n(i + 1);
+                d1 = this.o(i + 1);
+                d2 = this.p(i + 1);
                 double d4 = entity1.locX - d0;
                 double d5 = entity1.locY + (double) entity1.getHeadHeight() - d1;
                 double d6 = entity1.locZ - d2;
                 double d7 = (double) MathHelper.sqrt(d4 * d4 + d6 * d6);
-                float f = (float) (MathHelper.b(d6, d4) * 180.0D / 3.1415927410125732D) - 90.0F;
-                float f1 = (float) (-(MathHelper.b(d5, d7) * 180.0D / 3.1415927410125732D));
+                float f = (float) (MathHelper.b(d6, d4) * 57.2957763671875D) - 90.0F;
+                float f1 = (float) (-(MathHelper.b(d5, d7) * 57.2957763671875D));
 
-                this.a[i] = this.b(this.a[i], f1, 40.0F);
-                this.b[i] = this.b(this.b[i], f, 10.0F);
+                this.bx[i] = this.b(this.bx[i], f1, 40.0F);
+                this.by[i] = this.b(this.by[i], f, 10.0F);
             } else {
-                this.b[i] = this.b(this.b[i], this.aI, 10.0F);
+                this.by[i] = this.b(this.by[i], this.aM, 10.0F);
             }
         }
 
-        boolean flag = this.cm();
+        boolean flag = this.da();
 
         for (j = 0; j < 3; ++j) {
-            double d8 = this.t(j);
-            double d9 = this.u(j);
-            double d10 = this.v(j);
+            double d8 = this.n(j);
+            double d9 = this.o(j);
+            double d10 = this.p(j);
 
             this.world.addParticle(EnumParticle.SMOKE_NORMAL, d8 + this.random.nextGaussian() * 0.30000001192092896D, d9 + this.random.nextGaussian() * 0.30000001192092896D, d10 + this.random.nextGaussian() * 0.30000001192092896D, 0.0D, 0.0D, 0.0D, new int[0]);
             if (flag && this.world.random.nextInt(4) == 0) {
@@ -154,42 +165,42 @@
             }
         }
 
-        if (this.cl() > 0) {
+        if (this.cZ() > 0) {
             for (j = 0; j < 3; ++j) {
-                this.world.addParticle(EnumParticle.SPELL_MOB, this.locX + this.random.nextGaussian() * 1.0D, this.locY + (double) (this.random.nextFloat() * 3.3F), this.locZ + this.random.nextGaussian() * 1.0D, 0.699999988079071D, 0.699999988079071D, 0.8999999761581421D, new int[0]);
+                this.world.addParticle(EnumParticle.SPELL_MOB, this.locX + this.random.nextGaussian(), this.locY + (double) (this.random.nextFloat() * 3.3F), this.locZ + this.random.nextGaussian(), 0.699999988079071D, 0.699999988079071D, 0.8999999761581421D, new int[0]);
             }
         }
 
     }
 
-    protected void E() {
+    protected void M() {
         int i;
 
-        if (this.cl() > 0) {
-            i = this.cl() - 1;
+        if (this.cZ() > 0) {
+            i = this.cZ() - 1;
             if (i <= 0) {
                 this.world.createExplosion(this, this.locX, this.locY + (double) this.getHeadHeight(), this.locZ, 7.0F, false, this.world.getGameRules().getBoolean("mobGriefing"));
-                this.world.a(1013, new BlockPosition(this), 0);
+                this.world.a(1023, new BlockPosition(this), 0);
             }
 
-            this.r(i);
+            this.l(i);
             if (this.ticksLived % 10 == 0) {
                 this.heal(10.0F);
             }
 
         } else {
-            super.E();
+            super.M();
 
             int j;
 
             for (i = 1; i < 3; ++i) {
-                if (this.ticksLived >= this.bn[i - 1]) {
-                    this.bn[i - 1] = this.ticksLived + 10 + this.random.nextInt(10);
+                if (this.ticksLived >= this.bB[i - 1]) {
+                    this.bB[i - 1] = this.ticksLived + 10 + this.random.nextInt(10);
                     if (this.world.getDifficulty() == EnumDifficulty.NORMAL || this.world.getDifficulty() == EnumDifficulty.HARD) {
                         int k = i - 1;
-                        int l = this.bo[i - 1];
+                        int l = this.bC[i - 1];
 
-                        this.bo[k] = this.bo[i - 1] + 1;
+                        this.bC[k] = this.bC[i - 1] + 1;
                         if (l > 15) {
                             float f = 10.0F;
                             float f1 = 5.0F;
@@ -198,27 +209,27 @@
                             double d2 = MathHelper.a(this.random, this.locZ - (double) f, this.locZ + (double) f);
 
                             this.a(i + 1, d0, d1, d2, true);
-                            this.bo[i - 1] = 0;
+                            this.bC[i - 1] = 0;
                         }
                     }
 
-                    j = this.s(i);
+                    j = this.m(i);
                     if (j > 0) {
-                        Entity entity = this.world.a(j);
+                        Entity entity = this.world.getEntity(j);
 
                         if (entity != null && entity.isAlive() && this.h(entity) <= 900.0D && this.hasLineOfSight(entity)) {
                             if (entity instanceof EntityHuman && ((EntityHuman) entity).abilities.isInvulnerable) {
-                                this.b(i, 0);
+                                this.a(i, 0);
                             } else {
                                 this.a(i + 1, (EntityLiving) entity);
-                                this.bn[i - 1] = this.ticksLived + 40 + this.random.nextInt(20);
-                                this.bo[i - 1] = 0;
+                                this.bB[i - 1] = this.ticksLived + 40 + this.random.nextInt(20);
+                                this.bC[i - 1] = 0;
                             }
                         } else {
-                            this.b(i, 0);
+                            this.a(i, 0);
                         }
                     } else {
-                        List list = this.world.a(EntityLiving.class, this.getBoundingBox().grow(20.0D, 8.0D, 20.0D), Predicates.and(EntityWither.bq, IEntitySelector.d));
+                        List list = this.world.a(EntityLiving.class, this.getBoundingBox().grow(20.0D, 8.0D, 20.0D), Predicates.and(EntityWither.bF, IEntitySelector.e));
 
                         for (int i1 = 0; i1 < 10 && !list.isEmpty(); ++i1) {
                             EntityLiving entityliving = (EntityLiving) list.get(this.random.nextInt(list.size()));
@@ -226,10 +237,10 @@
                             if (entityliving != this && entityliving.isAlive() && this.hasLineOfSight(entityliving)) {
                                 if (entityliving instanceof EntityHuman) {
                                     if (!((EntityHuman) entityliving).abilities.isInvulnerable) {
-                                        this.b(i, entityliving.getId());
+                                        this.a(i, entityliving.getId());
                                     }
                                 } else {
-                                    this.b(i, entityliving.getId());
+                                    this.a(i, entityliving.getId());
                                 }
                                 break;
                             }
@@ -241,14 +252,14 @@
             }
 
             if (this.getGoalTarget() != null) {
-                this.b(0, this.getGoalTarget().getId());
+                this.a(0, this.getGoalTarget().getId());
             } else {
-                this.b(0, 0);
+                this.a(0, 0);
             }
 
-            if (this.bp > 0) {
-                --this.bp;
-                if (this.bp == 0 && this.world.getGameRules().getBoolean("mobGriefing")) {
+            if (this.bD > 0) {
+                --this.bD;
+                if (this.bD == 0 && this.world.getGameRules().getBoolean("mobGriefing")) {
                     i = MathHelper.floor(this.locY);
                     j = MathHelper.floor(this.locX);
                     int j1 = MathHelper.floor(this.locZ);
@@ -261,9 +272,10 @@
                                 int k2 = i + i2;
                                 int l2 = j1 + l1;
                                 BlockPosition blockposition = new BlockPosition(j2, k2, l2);
-                                Block block = this.world.getType(blockposition).getBlock();
+                                IBlockData iblockdata = this.world.getType(blockposition);
+                                Block block = iblockdata.getBlock();
 
-                                if (block.getMaterial() != Material.AIR && a(block)) {
+                                if (iblockdata.getMaterial() != Material.AIR && a(block)) {
                                     flag = this.world.setAir(blockposition, true) || flag;
                                 }
                             }
@@ -271,7 +283,7 @@
                     }
 
                     if (flag) {
-                        this.world.a((EntityHuman) null, 1012, new BlockPosition(this), 0);
+                        this.world.a((EntityHuman) null, 1022, new BlockPosition(this), 0);
                     }
                 }
             }
@@ -280,44 +292,51 @@
                 this.heal(1.0F);
             }
 
+            this.bE.setProgress(this.getHealth() / this.getMaxHealth());
         }
     }
 
     public static boolean a(Block block) {
-        return block != Blocks.BEDROCK && block != Blocks.END_PORTAL && block != Blocks.END_PORTAL_FRAME && block != Blocks.COMMAND_BLOCK && block != Blocks.BARRIER;
+        return block != Blocks.BEDROCK && block != Blocks.END_PORTAL && block != Blocks.END_PORTAL_FRAME && block != Blocks.COMMAND_BLOCK && block != Blocks.dc && block != Blocks.dd && block != Blocks.BARRIER;
     }
 
-    public void n() {
-        this.r(220);
+    public void o() {
+        this.l(220);
         this.setHealth(this.getMaxHealth() / 3.0F);
     }
 
-    public void aA() {}
+    public void aQ() {}
+
+    public void b(EntityPlayer entityplayer) {
+        super.b(entityplayer);
+        this.bE.addPlayer(entityplayer);
+    }
 
-    public int br() {
-        return 4;
+    public void c(EntityPlayer entityplayer) {
+        super.c(entityplayer);
+        this.bE.removePlayer(entityplayer);
     }
 
-    private double t(int i) {
+    private double n(int i) {
         if (i <= 0) {
             return this.locX;
         } else {
-            float f = (this.aI + (float) (180 * (i - 1))) / 180.0F * 3.1415927F;
+            float f = (this.aM + (float) (180 * (i - 1))) * 0.017453292F;
             float f1 = MathHelper.cos(f);
 
             return this.locX + (double) f1 * 1.3D;
         }
     }
 
-    private double u(int i) {
+    private double o(int i) {
         return i <= 0 ? this.locY + 3.0D : this.locY + 2.2D;
     }
 
-    private double v(int i) {
+    private double p(int i) {
         if (i <= 0) {
             return this.locZ;
         } else {
-            float f = (this.aI + (float) (180 * (i - 1))) / 180.0F * 3.1415927F;
+            float f = (this.aM + (float) (180 * (i - 1))) * 0.017453292F;
             float f1 = MathHelper.sin(f);
 
             return this.locZ + (double) f1 * 1.3D;
@@ -343,10 +362,10 @@
     }
 
     private void a(int i, double d0, double d1, double d2, boolean flag) {
-        this.world.a((EntityHuman) null, 1014, new BlockPosition(this), 0);
-        double d3 = this.t(i);
-        double d4 = this.u(i);
-        double d5 = this.v(i);
+        this.world.a((EntityHuman) null, 1024, new BlockPosition(this), 0);
+        double d3 = this.n(i);
+        double d4 = this.o(i);
+        double d5 = this.p(i);
         double d6 = d0 - d3;
         double d7 = d1 - d4;
         double d8 = d2 - d5;
@@ -370,12 +389,12 @@
         if (this.isInvulnerable(damagesource)) {
             return false;
         } else if (damagesource != DamageSource.DROWN && !(damagesource.getEntity() instanceof EntityWither)) {
-            if (this.cl() > 0 && damagesource != DamageSource.OUT_OF_WORLD) {
+            if (this.cZ() > 0 && damagesource != DamageSource.OUT_OF_WORLD) {
                 return false;
             } else {
                 Entity entity;
 
-                if (this.cm()) {
+                if (this.da()) {
                     entity = damagesource.i();
                     if (entity instanceof EntityArrow) {
                         return false;
@@ -386,12 +405,12 @@
                 if (entity != null && !(entity instanceof EntityHuman) && entity instanceof EntityLiving && ((EntityLiving) entity).getMonsterType() == this.getMonsterType()) {
                     return false;
                 } else {
-                    if (this.bp <= 0) {
-                        this.bp = 20;
+                    if (this.bD <= 0) {
+                        this.bD = 20;
                     }
 
-                    for (int i = 0; i < this.bo.length; ++i) {
-                        this.bo[i] += 3;
+                    for (int i = 0; i < this.bC.length; ++i) {
+                        this.bC[i] += 3;
                     }
 
                     return super.damageEntity(damagesource, f);
@@ -406,7 +425,7 @@
         EntityItem entityitem = this.a(Items.NETHER_STAR, 1);
 
         if (entityitem != null) {
-            entityitem.u();
+            entityitem.v();
         }
 
         if (!this.world.isClientSide) {
@@ -421,7 +440,7 @@
 
     }
 
-    protected void D() {
+    protected void L() {
         this.ticksFarFromPlayer = 0;
     }
 
@@ -434,25 +453,26 @@
         this.getAttributeInstance(GenericAttributes.maxHealth).setValue(300.0D);
         this.getAttributeInstance(GenericAttributes.MOVEMENT_SPEED).setValue(0.6000000238418579D);
         this.getAttributeInstance(GenericAttributes.FOLLOW_RANGE).setValue(40.0D);
+        this.getAttributeInstance(GenericAttributes.g).setValue(4.0D);
     }
 
-    public int cl() {
-        return this.datawatcher.getInt(20);
+    public int cZ() {
+        return ((Integer) this.datawatcher.get(EntityWither.bw)).intValue();
     }
 
-    public void r(int i) {
-        this.datawatcher.watch(20, Integer.valueOf(i));
+    public void l(int i) {
+        this.datawatcher.set(EntityWither.bw, Integer.valueOf(i));
     }
 
-    public int s(int i) {
-        return this.datawatcher.getInt(17 + i);
+    public int m(int i) {
+        return ((Integer) this.datawatcher.get(EntityWither.bv[i])).intValue();
     }
 
-    public void b(int i, int j) {
-        this.datawatcher.watch(17 + i, Integer.valueOf(j));
+    public void a(int i, int j) {
+        this.datawatcher.set(EntityWither.bv[i], Integer.valueOf(j));
     }
 
-    public boolean cm() {
+    public boolean da() {
         return this.getHealth() <= this.getMaxHealth() / 2.0F;
     }
 
@@ -460,7 +480,22 @@
         return EnumMonsterType.UNDEAD;
     }
 
-    public void mount(Entity entity) {
-        this.vehicle = null;
+    protected boolean n(Entity entity) {
+        return false;
+    }
+
+    public boolean aV() {
+        return false;
+    }
+
+    class a extends PathfinderGoal {
+
+        public a() {
+            this.a(7);
+        }
+
+        public boolean a() {
+            return EntityWither.this.cZ() > 0;
+        }
     }
 }
