--- a/net/minecraft/server/TileEntityBrewingStand.java
+++ b/net/minecraft/server/TileEntityBrewingStand.java
@@ -1,30 +1,31 @@
 package net.minecraft.server;
 
 import java.util.Arrays;
-import java.util.List;
 
-public class TileEntityBrewingStand extends TileEntityContainer implements IUpdatePlayerListBox, IWorldInventory {
+public class TileEntityBrewingStand extends TileEntityContainer implements ITickable, IWorldInventory {
 
     private static final int[] a = new int[] { 3};
-    private static final int[] f = new int[] { 0, 1, 2};
-    private ItemStack[] items = new ItemStack[4];
-    public int brewTime;
-    private boolean[] i;
-    private Item j;
-    private String k;
+    private static final int[] f = new int[] { 0, 1, 2, 3};
+    private static final int[] g = new int[] { 0, 1, 2, 4};
+    private ItemStack[] items = new ItemStack[5];
+    private int brewTime;
+    private boolean[] j;
+    private Item k;
+    private String l;
+    private int m;
 
     public TileEntityBrewingStand() {}
 
     public String getName() {
-        return this.hasCustomName() ? this.k : "container.brewing";
+        return this.hasCustomName() ? this.l : "container.brewing";
     }
 
     public boolean hasCustomName() {
-        return this.k != null && this.k.length() > 0;
+        return this.l != null && !this.l.isEmpty();
     }
 
     public void a(String s) {
-        this.k = s;
+        this.l = s;
     }
 
     public int getSize() {
@@ -32,28 +33,45 @@
     }
 
     public void c() {
-        if (this.brewTime > 0) {
+        if (this.m <= 0 && this.items[4] != null && this.items[4].getItem() == Items.BLAZE_POWDER) {
+            this.m = 20;
+            --this.items[4].count;
+            if (this.items[4].count <= 0) {
+                this.items[4] = null;
+            }
+
+            this.update();
+        }
+
+        boolean flag = this.n();
+        boolean flag1 = this.brewTime > 0;
+
+        if (flag1) {
             --this.brewTime;
-            if (this.brewTime == 0) {
+            boolean flag2 = this.brewTime == 0;
+
+            if (flag2 && flag) {
                 this.o();
                 this.update();
-            } else if (!this.n()) {
+            } else if (!flag) {
                 this.brewTime = 0;
                 this.update();
-            } else if (this.j != this.items[3].getItem()) {
+            } else if (this.k != this.items[3].getItem()) {
                 this.brewTime = 0;
                 this.update();
             }
-        } else if (this.n()) {
+        } else if (flag && this.m > 0) {
+            --this.m;
             this.brewTime = 400;
-            this.j = this.items[3].getItem();
+            this.k = this.items[3].getItem();
+            this.update();
         }
 
         if (!this.world.isClientSide) {
             boolean[] aboolean = this.m();
 
-            if (!Arrays.equals(aboolean, this.i)) {
-                this.i = aboolean;
+            if (!Arrays.equals(aboolean, this.j)) {
+                this.j = aboolean;
                 IBlockData iblockdata = this.world.getType(this.getPosition());
 
                 if (!(iblockdata.getBlock() instanceof BlockBrewingStand)) {
@@ -70,36 +88,34 @@
 
     }
 
+    public boolean[] m() {
+        boolean[] aboolean = new boolean[3];
+
+        for (int i = 0; i < 3; ++i) {
+            if (this.items[i] != null) {
+                aboolean[i] = true;
+            }
+        }
+
+        return aboolean;
+    }
+
     private boolean n() {
         if (this.items[3] != null && this.items[3].count > 0) {
             ItemStack itemstack = this.items[3];
 
-            if (!itemstack.getItem().l(itemstack)) {
+            if (!PotionBrewer.a(itemstack)) {
                 return false;
             } else {
-                boolean flag = false;
-
                 for (int i = 0; i < 3; ++i) {
-                    if (this.items[i] != null && this.items[i].getItem() == Items.POTION) {
-                        int j = this.items[i].getData();
-                        int k = this.c(j, itemstack);
-
-                        if (!ItemPotion.f(j) && ItemPotion.f(k)) {
-                            flag = true;
-                            break;
-                        }
-
-                        List list = Items.POTION.e(j);
-                        List list1 = Items.POTION.e(k);
-
-                        if ((j <= 0 || list != list1) && (list == null || !list.equals(list1) && list1 != null) && j != k) {
-                            flag = true;
-                            break;
-                        }
+                    ItemStack itemstack1 = this.items[i];
+
+                    if (itemstack1 != null && PotionBrewer.a(itemstack1, itemstack)) {
+                        return true;
                     }
                 }
 
-                return flag;
+                return false;
             }
         } else {
             return false;
@@ -107,40 +123,31 @@
     }
 
     private void o() {
-        if (this.n()) {
-            ItemStack itemstack = this.items[3];
+        ItemStack itemstack = this.items[3];
 
-            for (int i = 0; i < 3; ++i) {
-                if (this.items[i] != null && this.items[i].getItem() == Items.POTION) {
-                    int j = this.items[i].getData();
-                    int k = this.c(j, itemstack);
-                    List list = Items.POTION.e(j);
-                    List list1 = Items.POTION.e(k);
-
-                    if ((j <= 0 || list != list1) && (list == null || !list.equals(list1) && list1 != null)) {
-                        if (j != k) {
-                            this.items[i].setData(k);
-                        }
-                    } else if (!ItemPotion.f(j) && ItemPotion.f(k)) {
-                        this.items[i].setData(k);
-                    }
-                }
-            }
+        for (int i = 0; i < 3; ++i) {
+            this.items[i] = PotionBrewer.d(itemstack, this.items[i]);
+        }
+
+        --itemstack.count;
+        BlockPosition blockposition = this.getPosition();
+
+        if (itemstack.getItem().r()) {
+            ItemStack itemstack1 = new ItemStack(itemstack.getItem().q());
 
-            if (itemstack.getItem().r()) {
-                this.items[3] = new ItemStack(itemstack.getItem().q());
+            if (itemstack.count <= 0) {
+                itemstack = itemstack1;
             } else {
-                --this.items[3].count;
-                if (this.items[3].count <= 0) {
-                    this.items[3] = null;
-                }
+                InventoryUtils.dropItem(this.world, (double) blockposition.getX(), (double) blockposition.getY(), (double) blockposition.getZ(), itemstack1);
             }
+        }
 
+        if (itemstack.count <= 0) {
+            itemstack = null;
         }
-    }
 
-    private int c(int i, ItemStack itemstack) {
-        return itemstack == null ? i : (itemstack.getItem().l(itemstack) ? PotionBrewer.a(i, itemstack.getItem().j(itemstack)) : i);
+        this.items[3] = itemstack;
+        this.world.triggerEffect(1035, blockposition, 0);
     }
 
     public void a(NBTTagCompound nbttagcompound) {
@@ -160,13 +167,14 @@
 
         this.brewTime = nbttagcompound.getShort("BrewTime");
         if (nbttagcompound.hasKeyOfType("CustomName", 8)) {
-            this.k = nbttagcompound.getString("CustomName");
+            this.l = nbttagcompound.getString("CustomName");
         }
 
+        this.m = nbttagcompound.getByte("Fuel");
     }
 
-    public void b(NBTTagCompound nbttagcompound) {
-        super.b(nbttagcompound);
+    public void save(NBTTagCompound nbttagcompound) {
+        super.save(nbttagcompound);
         nbttagcompound.setShort("BrewTime", (short) this.brewTime);
         NBTTagList nbttaglist = new NBTTagList();
 
@@ -182,9 +190,10 @@
 
         nbttagcompound.set("Items", nbttaglist);
         if (this.hasCustomName()) {
-            nbttagcompound.setString("CustomName", this.k);
+            nbttagcompound.setString("CustomName", this.l);
         }
 
+        nbttagcompound.setByte("Fuel", (byte) this.m);
     }
 
     public ItemStack getItem(int i) {
@@ -192,25 +201,11 @@
     }
 
     public ItemStack splitStack(int i, int j) {
-        if (i >= 0 && i < this.items.length) {
-            ItemStack itemstack = this.items[i];
-
-            this.items[i] = null;
-            return itemstack;
-        } else {
-            return null;
-        }
+        return ContainerUtil.a(this.items, i, j);
     }
 
     public ItemStack splitWithoutUpdate(int i) {
-        if (i >= 0 && i < this.items.length) {
-            ItemStack itemstack = this.items[i];
-
-            this.items[i] = null;
-            return itemstack;
-        } else {
-            return null;
-        }
+        return ContainerUtil.a(this.items, i);
     }
 
     public void setItem(int i, ItemStack itemstack) {
@@ -233,23 +228,17 @@
     public void closeContainer(EntityHuman entityhuman) {}
 
     public boolean b(int i, ItemStack itemstack) {
-        return i == 3 ? itemstack.getItem().l(itemstack) : itemstack.getItem() == Items.POTION || itemstack.getItem() == Items.GLASS_BOTTLE;
-    }
-
-    public boolean[] m() {
-        boolean[] aboolean = new boolean[3];
+        if (i == 3) {
+            return PotionBrewer.a(itemstack);
+        } else {
+            Item item = itemstack.getItem();
 
-        for (int i = 0; i < 3; ++i) {
-            if (this.items[i] != null) {
-                aboolean[i] = true;
-            }
+            return i == 4 ? item == Items.BLAZE_POWDER : item == Items.POTION || item == Items.SPLASH_POTION || item == Items.LINGERING_POTION || item == Items.GLASS_BOTTLE;
         }
-
-        return aboolean;
     }
 
     public int[] getSlotsForFace(EnumDirection enumdirection) {
-        return enumdirection == EnumDirection.UP ? TileEntityBrewingStand.a : TileEntityBrewingStand.f;
+        return enumdirection == EnumDirection.UP ? TileEntityBrewingStand.a : (enumdirection == EnumDirection.DOWN ? TileEntityBrewingStand.f : TileEntityBrewingStand.g);
     }
 
     public boolean canPlaceItemThroughFace(int i, ItemStack itemstack, EnumDirection enumdirection) {
@@ -257,7 +246,7 @@
     }
 
     public boolean canTakeItemThroughFace(int i, ItemStack itemstack, EnumDirection enumdirection) {
-        return true;
+        return i == 3 ? itemstack.getItem() == Items.GLASS_BOTTLE : true;
     }
 
     public String getContainerName() {
@@ -273,28 +262,31 @@
         case 0:
             return this.brewTime;
 
+        case 1:
+            return this.m;
+
         default:
             return 0;
         }
     }
 
-    public void b(int i, int j) {
+    public void setProperty(int i, int j) {
         switch (i) {
         case 0:
             this.brewTime = j;
+            break;
 
-        default:
+        case 1:
+            this.m = j;
         }
+
     }
 
     public int g() {
-        return 1;
+        return 2;
     }
 
     public void l() {
-        for (int i = 0; i < this.items.length; ++i) {
-            this.items[i] = null;
-        }
-
+        Arrays.fill(this.items, (Object) null);
     }
 }
