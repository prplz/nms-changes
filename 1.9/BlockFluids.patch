--- a/net/minecraft/server/BlockFluids.java
+++ b/net/minecraft/server/BlockFluids.java
@@ -9,16 +9,23 @@
 
     protected BlockFluids(Material material) {
         super(material);
-        this.j(this.blockStateList.getBlockData().set(BlockFluids.LEVEL, Integer.valueOf(0)));
-        this.a(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
+        this.w(this.blockStateList.getBlockData().set(BlockFluids.LEVEL, Integer.valueOf(0)));
         this.a(true);
     }
 
+    public AxisAlignedBB a(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition) {
+        return BlockFluids.j;
+    }
+
+    public AxisAlignedBB a(IBlockData iblockdata, World world, BlockPosition blockposition) {
+        return BlockFluids.k;
+    }
+
     public boolean b(IBlockAccess iblockaccess, BlockPosition blockposition) {
         return this.material != Material.LAVA;
     }
 
-    public static float b(int i) {
+    public static float e(int i) {
         if (i >= 8) {
             i = 0;
         }
@@ -26,21 +33,21 @@
         return (float) (i + 1) / 9.0F;
     }
 
-    protected int e(IBlockAccess iblockaccess, BlockPosition blockposition) {
-        return iblockaccess.getType(blockposition).getBlock().getMaterial() == this.material ? ((Integer) iblockaccess.getType(blockposition).get(BlockFluids.LEVEL)).intValue() : -1;
+    protected int c(IBlockAccess iblockaccess, BlockPosition blockposition) {
+        return iblockaccess.getType(blockposition).getMaterial() == this.material ? ((Integer) iblockaccess.getType(blockposition).get(BlockFluids.LEVEL)).intValue() : -1;
     }
 
-    protected int f(IBlockAccess iblockaccess, BlockPosition blockposition) {
-        int i = this.e(iblockaccess, blockposition);
+    protected int d(IBlockAccess iblockaccess, BlockPosition blockposition) {
+        int i = this.c(iblockaccess, blockposition);
 
         return i >= 8 ? 0 : i;
     }
 
-    public boolean d() {
+    public boolean c(IBlockData iblockdata) {
         return false;
     }
 
-    public boolean c() {
+    public boolean b(IBlockData iblockdata) {
         return false;
     }
 
@@ -48,18 +55,14 @@
         return flag && ((Integer) iblockdata.get(BlockFluids.LEVEL)).intValue() == 0;
     }
 
-    public boolean b(IBlockAccess iblockaccess, BlockPosition blockposition, EnumDirection enumdirection) {
-        Material material = iblockaccess.getType(blockposition).getBlock().getMaterial();
+    public boolean a(IBlockAccess iblockaccess, BlockPosition blockposition, EnumDirection enumdirection) {
+        Material material = iblockaccess.getType(blockposition).getMaterial();
 
-        return material == this.material ? false : (enumdirection == EnumDirection.UP ? true : (material == Material.ICE ? false : super.b(iblockaccess, blockposition, enumdirection)));
+        return material == this.material ? false : (enumdirection == EnumDirection.UP ? true : (material == Material.ICE ? false : super.a(iblockaccess, blockposition, enumdirection)));
     }
 
-    public AxisAlignedBB a(World world, BlockPosition blockposition, IBlockData iblockdata) {
-        return null;
-    }
-
-    public int b() {
-        return 1;
+    public EnumRenderType a(IBlockData iblockdata) {
+        return EnumRenderType.LIQUID;
     }
 
     public Item getDropType(IBlockData iblockdata, Random random, int i) {
@@ -70,56 +73,65 @@
         return 0;
     }
 
-    protected Vec3D h(IBlockAccess iblockaccess, BlockPosition blockposition) {
-        Vec3D vec3d = new Vec3D(0.0D, 0.0D, 0.0D);
-        int i = this.f(iblockaccess, blockposition);
+    protected Vec3D f(IBlockAccess iblockaccess, BlockPosition blockposition) {
+        double d0 = 0.0D;
+        double d1 = 0.0D;
+        double d2 = 0.0D;
+        int i = this.d(iblockaccess, blockposition);
+        BlockPosition.PooledBlockPosition blockposition_pooledblockposition = BlockPosition.PooledBlockPosition.s();
         Iterator iterator = EnumDirection.EnumDirectionLimit.HORIZONTAL.iterator();
 
-        EnumDirection enumdirection;
-        BlockPosition blockposition1;
-
         while (iterator.hasNext()) {
-            enumdirection = (EnumDirection) iterator.next();
-            blockposition1 = blockposition.shift(enumdirection);
-            int j = this.f(iblockaccess, blockposition1);
+            EnumDirection enumdirection = (EnumDirection) iterator.next();
+
+            blockposition_pooledblockposition.h(blockposition).c(enumdirection);
+            int j = this.d(iblockaccess, blockposition_pooledblockposition);
             int k;
 
             if (j < 0) {
-                if (!iblockaccess.getType(blockposition1).getBlock().getMaterial().isSolid()) {
-                    j = this.f(iblockaccess, blockposition1.down());
+                if (!iblockaccess.getType(blockposition_pooledblockposition).getMaterial().isSolid()) {
+                    j = this.d(iblockaccess, blockposition_pooledblockposition.down());
                     if (j >= 0) {
                         k = j - (i - 8);
-                        vec3d = vec3d.add((double) ((blockposition1.getX() - blockposition.getX()) * k), (double) ((blockposition1.getY() - blockposition.getY()) * k), (double) ((blockposition1.getZ() - blockposition.getZ()) * k));
+                        d0 += (double) (enumdirection.getAdjacentX() * k);
+                        d1 += (double) (enumdirection.getAdjacentY() * k);
+                        d2 += (double) (enumdirection.getAdjacentZ() * k);
                     }
                 }
             } else if (j >= 0) {
                 k = j - i;
-                vec3d = vec3d.add((double) ((blockposition1.getX() - blockposition.getX()) * k), (double) ((blockposition1.getY() - blockposition.getY()) * k), (double) ((blockposition1.getZ() - blockposition.getZ()) * k));
+                d0 += (double) (enumdirection.getAdjacentX() * k);
+                d1 += (double) (enumdirection.getAdjacentY() * k);
+                d2 += (double) (enumdirection.getAdjacentZ() * k);
             }
         }
 
+        Vec3D vec3d = new Vec3D(d0, d1, d2);
+
         if (((Integer) iblockaccess.getType(blockposition).get(BlockFluids.LEVEL)).intValue() >= 8) {
-            iterator = EnumDirection.EnumDirectionLimit.HORIZONTAL.iterator();
+            Iterator iterator1 = EnumDirection.EnumDirectionLimit.HORIZONTAL.iterator();
+
+            while (iterator1.hasNext()) {
+                EnumDirection enumdirection1 = (EnumDirection) iterator1.next();
 
-            while (iterator.hasNext()) {
-                enumdirection = (EnumDirection) iterator.next();
-                blockposition1 = blockposition.shift(enumdirection);
-                if (this.b(iblockaccess, blockposition1, enumdirection) || this.b(iblockaccess, blockposition1.up(), enumdirection)) {
+                blockposition_pooledblockposition.h(blockposition).c(enumdirection1);
+                if (this.a(iblockaccess, (BlockPosition) blockposition_pooledblockposition, enumdirection1) || this.a(iblockaccess, blockposition_pooledblockposition.up(), enumdirection1)) {
                     vec3d = vec3d.a().add(0.0D, -6.0D, 0.0D);
                     break;
                 }
             }
         }
 
+        blockposition_pooledblockposition.t();
         return vec3d.a();
     }
 
     public Vec3D a(World world, BlockPosition blockposition, Entity entity, Vec3D vec3d) {
-        return vec3d.e(this.h(world, blockposition));
+        return vec3d.e(this.f(world, blockposition));
     }
 
     public int a(World world) {
-        return this.material == Material.WATER ? 5 : (this.material == Material.LAVA ? (world.worldProvider.o() ? 10 : 30) : 0);
+        return this.material == Material.WATER ? 5 : (this.material == Material.LAVA ? (world.worldProvider.m() ? 10 : 30) : 0);
     }
 
     public void onPlace(World world, BlockPosition blockposition, IBlockData iblockdata) {
@@ -139,7 +151,7 @@
             for (int j = 0; j < i; ++j) {
                 EnumDirection enumdirection = aenumdirection[j];
 
-                if (enumdirection != EnumDirection.DOWN && world.getType(blockposition.shift(enumdirection)).getBlock().getMaterial() == Material.WATER) {
+                if (enumdirection != EnumDirection.DOWN && world.getType(blockposition.shift(enumdirection)).getMaterial() == Material.WATER) {
                     flag = true;
                     break;
                 }
@@ -170,7 +182,7 @@
         double d1 = (double) blockposition.getY();
         double d2 = (double) blockposition.getZ();
 
-        world.makeSound(d0 + 0.5D, d1 + 0.5D, d2 + 0.5D, "random.fizz", 0.5F, 2.6F + (world.random.nextFloat() - world.random.nextFloat()) * 0.8F);
+        world.a((EntityHuman) null, blockposition, SoundEffects.db, SoundCategory.BLOCKS, 0.5F, 2.6F + (world.random.nextFloat() - world.random.nextFloat()) * 0.8F);
 
         for (int i = 0; i < 8; ++i) {
             world.addParticle(EnumParticle.SMOKE_LARGE, d0 + Math.random(), d1 + 1.2D, d2 + Math.random(), 0.0D, 0.0D, 0.0D, new int[0]);
