--- a/net/minecraft/server/ItemMonsterEgg.java
+++ b/net/minecraft/server/ItemMonsterEgg.java
@@ -1,15 +1,16 @@
 package net.minecraft.server;
 
+import java.util.UUID;
+
 public class ItemMonsterEgg extends Item {
 
     public ItemMonsterEgg() {
-        this.a(true);
         this.a(CreativeModeTab.f);
     }
 
     public String a(ItemStack itemstack) {
         String s = ("" + LocaleI18n.get(this.getName() + ".name")).trim();
-        String s1 = EntityTypes.b(itemstack.getData());
+        String s1 = h(itemstack);
 
         if (s1 != null) {
             s = s + " " + LocaleI18n.get("entity." + s1 + ".name");
@@ -18,11 +19,11 @@
         return s;
     }
 
-    public boolean interactWith(ItemStack itemstack, EntityHuman entityhuman, World world, BlockPosition blockposition, EnumDirection enumdirection, float f, float f1, float f2) {
+    public EnumInteractionResult a(ItemStack itemstack, EntityHuman entityhuman, World world, BlockPosition blockposition, EnumHand enumhand, EnumDirection enumdirection, float f, float f1, float f2) {
         if (world.isClientSide) {
-            return true;
+            return EnumInteractionResult.SUCCESS;
         } else if (!entityhuman.a(blockposition.shift(enumdirection), enumdirection, itemstack)) {
-            return false;
+            return EnumInteractionResult.FAIL;
         } else {
             IBlockData iblockdata = world.getType(blockposition);
 
@@ -32,14 +33,14 @@
                 if (tileentity instanceof TileEntityMobSpawner) {
                     MobSpawnerAbstract mobspawnerabstract = ((TileEntityMobSpawner) tileentity).getSpawner();
 
-                    mobspawnerabstract.setMobName(EntityTypes.b(itemstack.getData()));
+                    mobspawnerabstract.setMobName(h(itemstack));
                     tileentity.update();
-                    world.notify(blockposition);
+                    world.notify(blockposition, iblockdata, iblockdata, 3);
                     if (!entityhuman.abilities.canInstantlyBuild) {
                         --itemstack.count;
                     }
 
-                    return true;
+                    return EnumInteractionResult.SUCCESS;
                 }
             }
 
@@ -50,85 +51,120 @@
                 d0 = 0.5D;
             }
 
-            Entity entity = a(world, itemstack.getData(), (double) blockposition.getX() + 0.5D, (double) blockposition.getY() + d0, (double) blockposition.getZ() + 0.5D);
+            Entity entity = a(world, h(itemstack), (double) blockposition.getX() + 0.5D, (double) blockposition.getY() + d0, (double) blockposition.getZ() + 0.5D);
 
             if (entity != null) {
                 if (entity instanceof EntityLiving && itemstack.hasName()) {
                     entity.setCustomName(itemstack.getName());
                 }
 
+                a(world, entityhuman, itemstack, entity);
                 if (!entityhuman.abilities.canInstantlyBuild) {
                     --itemstack.count;
                 }
             }
 
-            return true;
+            return EnumInteractionResult.SUCCESS;
         }
     }
 
-    public ItemStack a(ItemStack itemstack, World world, EntityHuman entityhuman) {
-        if (world.isClientSide) {
-            return itemstack;
-        } else {
-            MovingObjectPosition movingobjectposition = this.a(world, entityhuman, true);
+    public static void a(World world, EntityHuman entityhuman, ItemStack itemstack, Entity entity) {
+        MinecraftServer minecraftserver = world.getMinecraftServer();
 
-            if (movingobjectposition == null) {
-                return itemstack;
-            } else {
-                if (movingobjectposition.type == MovingObjectPosition.EnumMovingObjectType.BLOCK) {
-                    BlockPosition blockposition = movingobjectposition.a();
+        if (minecraftserver != null && entity != null) {
+            NBTTagCompound nbttagcompound = itemstack.getTag();
 
-                    if (!world.a(entityhuman, blockposition)) {
-                        return itemstack;
-                    }
+            if (nbttagcompound != null && nbttagcompound.hasKeyOfType("EntityTag", 10)) {
+                if (!world.isClientSide && entity.br() && (entityhuman == null || !minecraftserver.getPlayerList().isOp(entityhuman.getProfile()))) {
+                    return;
+                }
 
-                    if (!entityhuman.a(blockposition, movingobjectposition.direction, itemstack)) {
-                        return itemstack;
-                    }
+                NBTTagCompound nbttagcompound1 = new NBTTagCompound();
+
+                entity.e(nbttagcompound1);
+                UUID uuid = entity.getUniqueID();
+
+                nbttagcompound1.a(nbttagcompound.getCompound("EntityTag"));
+                entity.a(uuid);
+                entity.f(nbttagcompound1);
+            }
+
+        }
+    }
+
+    public InteractionResultWrapper<ItemStack> a(ItemStack itemstack, World world, EntityHuman entityhuman, EnumHand enumhand) {
+        if (world.isClientSide) {
+            return new InteractionResultWrapper(EnumInteractionResult.PASS, itemstack);
+        } else {
+            MovingObjectPosition movingobjectposition = this.a(world, entityhuman, true);
 
-                    if (world.getType(blockposition).getBlock() instanceof BlockFluids) {
-                        Entity entity = a(world, itemstack.getData(), (double) blockposition.getX() + 0.5D, (double) blockposition.getY() + 0.5D, (double) blockposition.getZ() + 0.5D);
+            if (movingobjectposition != null && movingobjectposition.type == MovingObjectPosition.EnumMovingObjectType.BLOCK) {
+                BlockPosition blockposition = movingobjectposition.a();
 
-                        if (entity != null) {
-                            if (entity instanceof EntityLiving && itemstack.hasName()) {
-                                ((EntityInsentient) entity).setCustomName(itemstack.getName());
-                            }
-
-                            if (!entityhuman.abilities.canInstantlyBuild) {
-                                --itemstack.count;
-                            }
+                if (!(world.getType(blockposition).getBlock() instanceof BlockFluids)) {
+                    return new InteractionResultWrapper(EnumInteractionResult.PASS, itemstack);
+                } else if (world.a(entityhuman, blockposition) && entityhuman.a(blockposition, movingobjectposition.direction, itemstack)) {
+                    Entity entity = a(world, h(itemstack), (double) blockposition.getX() + 0.5D, (double) blockposition.getY() + 0.5D, (double) blockposition.getZ() + 0.5D);
+
+                    if (entity == null) {
+                        return new InteractionResultWrapper(EnumInteractionResult.PASS, itemstack);
+                    } else {
+                        if (entity instanceof EntityLiving && itemstack.hasName()) {
+                            entity.setCustomName(itemstack.getName());
+                        }
 
-                            entityhuman.b(StatisticList.USE_ITEM_COUNT[Item.getId(this)]);
+                        a(world, entityhuman, itemstack, entity);
+                        if (!entityhuman.abilities.canInstantlyBuild) {
+                            --itemstack.count;
                         }
+
+                        entityhuman.b(StatisticList.b((Item) this));
+                        return new InteractionResultWrapper(EnumInteractionResult.SUCCESS, itemstack);
                     }
+                } else {
+                    return new InteractionResultWrapper(EnumInteractionResult.FAIL, itemstack);
                 }
-
-                return itemstack;
+            } else {
+                return new InteractionResultWrapper(EnumInteractionResult.PASS, itemstack);
             }
         }
     }
 
-    public static Entity a(World world, int i, double d0, double d1, double d2) {
-        if (!EntityTypes.eggInfo.containsKey(Integer.valueOf(i))) {
-            return null;
-        } else {
+    public static Entity a(World world, String s, double d0, double d1, double d2) {
+        if (s != null && EntityTypes.eggInfo.containsKey(s)) {
             Entity entity = null;
 
-            for (int j = 0; j < 1; ++j) {
-                entity = EntityTypes.a(i, world);
+            for (int i = 0; i < 1; ++i) {
+                entity = EntityTypes.b(s, world);
                 if (entity instanceof EntityLiving) {
                     EntityInsentient entityinsentient = (EntityInsentient) entity;
 
                     entity.setPositionRotation(d0, d1, d2, MathHelper.g(world.random.nextFloat() * 360.0F), 0.0F);
-                    entityinsentient.aK = entityinsentient.yaw;
-                    entityinsentient.aI = entityinsentient.yaw;
-                    entityinsentient.prepare(world.E(new BlockPosition(entityinsentient)), (GroupDataEntity) null);
+                    entityinsentient.aO = entityinsentient.yaw;
+                    entityinsentient.aM = entityinsentient.yaw;
+                    entityinsentient.prepare(world.D(new BlockPosition(entityinsentient)), (GroupDataEntity) null);
                     world.addEntity(entity);
-                    entityinsentient.x();
+                    entityinsentient.D();
                 }
             }
 
             return entity;
+        } else {
+            return null;
+        }
+    }
+
+    public static String h(ItemStack itemstack) {
+        NBTTagCompound nbttagcompound = itemstack.getTag();
+
+        if (nbttagcompound == null) {
+            return null;
+        } else if (!nbttagcompound.hasKeyOfType("EntityTag", 10)) {
+            return null;
+        } else {
+            NBTTagCompound nbttagcompound1 = nbttagcompound.getCompound("EntityTag");
+
+            return !nbttagcompound1.hasKeyOfType("id", 8) ? null : nbttagcompound1.getString("id");
         }
     }
 }
