--- a/net/minecraft/server/EnchantmentProtection.java
+++ b/net/minecraft/server/EnchantmentProtection.java
@@ -2,27 +2,23 @@
 
 public class EnchantmentProtection extends Enchantment {
 
-    private static final String[] E = new String[] { "all", "fire", "fall", "explosion", "projectile"};
-    private static final int[] F = new int[] { 1, 10, 5, 5, 3};
-    private static final int[] G = new int[] { 11, 8, 6, 8, 6};
-    private static final int[] H = new int[] { 20, 12, 10, 12, 15};
-    public final int a;
-
-    public EnchantmentProtection(int i, MinecraftKey minecraftkey, int j, int k) {
-        super(i, minecraftkey, j, EnchantmentSlotType.ARMOR);
-        this.a = k;
-        if (k == 2) {
-            this.slot = EnchantmentSlotType.ARMOR_FEET;
+    public final EnchantmentProtection.DamageType a;
+
+    public EnchantmentProtection(Enchantment.Rarity enchantment_rarity, EnchantmentProtection.DamageType enchantmentprotection_damagetype, EnumItemSlot... aenumitemslot) {
+        super(enchantment_rarity, EnchantmentSlotType.ARMOR, aenumitemslot);
+        this.a = enchantmentprotection_damagetype;
+        if (enchantmentprotection_damagetype == EnchantmentProtection.DamageType.FALL) {
+            this.itemTarget = EnchantmentSlotType.ARMOR_FEET;
         }
 
     }
 
     public int a(int i) {
-        return EnchantmentProtection.F[this.a] + (i - 1) * EnchantmentProtection.G[this.a];
+        return this.a.b() + (i - 1) * this.a.c();
     }
 
     public int b(int i) {
-        return this.a(i) + EnchantmentProtection.H[this.a];
+        return this.a(i) + this.a.c();
     }
 
     public int getMaxLevel() {
@@ -30,31 +26,25 @@
     }
 
     public int a(int i, DamageSource damagesource) {
-        if (damagesource.ignoresInvulnerability()) {
-            return 0;
-        } else {
-            float f = (float) (6 + i * i) / 3.0F;
-
-            return this.a == 0 ? MathHelper.d(f * 0.75F) : (this.a == 1 && damagesource.o() ? MathHelper.d(f * 1.25F) : (this.a == 2 && damagesource == DamageSource.FALL ? MathHelper.d(f * 2.5F) : (this.a == 3 && damagesource.isExplosion() ? MathHelper.d(f * 1.5F) : (this.a == 4 && damagesource.a() ? MathHelper.d(f * 1.5F) : 0))));
-        }
+        return damagesource.ignoresInvulnerability() ? 0 : (this.a == EnchantmentProtection.DamageType.ALL ? i : (this.a == EnchantmentProtection.DamageType.FIRE && damagesource.o() ? i * 2 : (this.a == EnchantmentProtection.DamageType.FALL && damagesource == DamageSource.FALL ? i * 3 : (this.a == EnchantmentProtection.DamageType.EXPLOSION && damagesource.isExplosion() ? i * 2 : (this.a == EnchantmentProtection.DamageType.PROJECTILE && damagesource.a() ? i * 2 : 0)))));
     }
 
     public String a() {
-        return "enchantment.protect." + EnchantmentProtection.E[this.a];
+        return "enchantment.protect." + this.a.a();
     }
 
     public boolean a(Enchantment enchantment) {
         if (enchantment instanceof EnchantmentProtection) {
             EnchantmentProtection enchantmentprotection = (EnchantmentProtection) enchantment;
 
-            return enchantmentprotection.a == this.a ? false : this.a == 2 || enchantmentprotection.a == 2;
+            return this.a == enchantmentprotection.a ? false : this.a == EnchantmentProtection.DamageType.FALL || enchantmentprotection.a == EnchantmentProtection.DamageType.FALL;
         } else {
             return super.a(enchantment);
         }
     }
 
-    public static int a(Entity entity, int i) {
-        int j = EnchantmentManager.a(Enchantment.PROTECTION_FIRE.id, entity.getEquipment());
+    public static int a(EntityLiving entityliving, int i) {
+        int j = EnchantmentManager.a(Enchantments.PROTECTION_FIRE, entityliving);
 
         if (j > 0) {
             i -= MathHelper.d((float) i * (float) j * 0.15F);
@@ -63,8 +53,8 @@
         return i;
     }
 
-    public static double a(Entity entity, double d0) {
-        int i = EnchantmentManager.a(Enchantment.PROTECTION_EXPLOSIONS.id, entity.getEquipment());
+    public static double a(EntityLiving entityliving, double d0) {
+        int i = EnchantmentManager.a(Enchantments.PROTECTION_EXPLOSIONS, entityliving);
 
         if (i > 0) {
             d0 -= (double) MathHelper.floor(d0 * (double) ((float) i * 0.15F));
@@ -72,4 +62,33 @@
 
         return d0;
     }
+
+    public static enum DamageType {
+
+        ALL("all", 1, 11, 20), FIRE("fire", 10, 8, 12), FALL("fall", 5, 6, 10), EXPLOSION("explosion", 5, 8, 12), PROJECTILE("projectile", 3, 6, 15);
+
+        private final String f;
+        private final int g;
+        private final int h;
+        private final int i;
+
+        private DamageType(String s, int i, int j, int k) {
+            this.f = s;
+            this.g = i;
+            this.h = j;
+            this.i = k;
+        }
+
+        public String a() {
+            return this.f;
+        }
+
+        public int b() {
+            return this.g;
+        }
+
+        public int c() {
+            return this.h;
+        }
+    }
 }
