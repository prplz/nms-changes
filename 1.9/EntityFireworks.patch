--- a/net/minecraft/server/EntityFireworks.java
+++ b/net/minecraft/server/EntityFireworks.java
@@ -1,7 +1,10 @@
 package net.minecraft.server;
 
+import com.google.common.base.Optional;
+
 public class EntityFireworks extends Entity {
 
+    public static final DataWatcherObject<Optional<ItemStack>> FIREWORK_ITEM = DataWatcher.a(EntityFireworks.class, DataWatcherRegistry.f);
     private int ticksFlown;
     public int expectedLifespan;
 
@@ -10,8 +13,8 @@
         this.setSize(0.25F, 0.25F);
     }
 
-    protected void h() {
-        this.datawatcher.add(8, 5);
+    protected void i() {
+        this.datawatcher.register(EntityFireworks.FIREWORK_ITEM, Optional.absent());
     }
 
     public EntityFireworks(World world, double d0, double d1, double d2, ItemStack itemstack) {
@@ -22,13 +25,11 @@
         int i = 1;
 
         if (itemstack != null && itemstack.hasTag()) {
-            this.datawatcher.watch(8, itemstack);
+            this.datawatcher.set(EntityFireworks.FIREWORK_ITEM, Optional.of(itemstack));
             NBTTagCompound nbttagcompound = itemstack.getTag();
             NBTTagCompound nbttagcompound1 = nbttagcompound.getCompound("Fireworks");
 
-            if (nbttagcompound1 != null) {
-                i += nbttagcompound1.getByte("Flight");
-            }
+            i += nbttagcompound1.getByte("Flight");
         }
 
         this.motX = this.random.nextGaussian() * 0.001D;
@@ -37,20 +38,20 @@
         this.expectedLifespan = 10 * i + this.random.nextInt(6) + this.random.nextInt(7);
     }
 
-    public void t_() {
-        this.P = this.locX;
-        this.Q = this.locY;
-        this.R = this.locZ;
-        super.t_();
+    public void m() {
+        this.M = this.locX;
+        this.N = this.locY;
+        this.O = this.locZ;
+        super.m();
         this.motX *= 1.15D;
         this.motZ *= 1.15D;
         this.motY += 0.04D;
         this.move(this.motX, this.motY, this.motZ);
         float f = MathHelper.sqrt(this.motX * this.motX + this.motZ * this.motZ);
 
-        this.yaw = (float) (MathHelper.b(this.motX, this.motZ) * 180.0D / 3.1415927410125732D);
+        this.yaw = (float) (MathHelper.b(this.motX, this.motZ) * 57.2957763671875D);
 
-        for (this.pitch = (float) (MathHelper.b(this.motY, (double) f) * 180.0D / 3.1415927410125732D); this.pitch - this.lastPitch < -180.0F; this.lastPitch -= 360.0F) {
+        for (this.pitch = (float) (MathHelper.b(this.motY, (double) f) * 57.2957763671875D); this.pitch - this.lastPitch < -180.0F; this.lastPitch -= 360.0F) {
             ;
         }
 
@@ -68,8 +69,8 @@
 
         this.pitch = this.lastPitch + (this.pitch - this.lastPitch) * 0.2F;
         this.yaw = this.lastYaw + (this.yaw - this.lastYaw) * 0.2F;
-        if (this.ticksFlown == 0 && !this.R()) {
-            this.world.makeSound(this, "fireworks.launch", 3.0F, 1.0F);
+        if (this.ticksFlown == 0 && !this.ad()) {
+            this.world.a((EntityHuman) null, this.locX, this.locY, this.locZ, SoundEffects.bq, SoundCategory.AMBIENT, 3.0F, 1.0F);
         }
 
         ++this.ticksFlown;
@@ -87,7 +88,7 @@
     public void b(NBTTagCompound nbttagcompound) {
         nbttagcompound.setInt("Life", this.ticksFlown);
         nbttagcompound.setInt("LifeTime", this.expectedLifespan);
-        ItemStack itemstack = this.datawatcher.getItemStack(8);
+        ItemStack itemstack = (ItemStack) ((Optional) this.datawatcher.get(EntityFireworks.FIREWORK_ITEM)).orNull();
 
         if (itemstack != null) {
             NBTTagCompound nbttagcompound1 = new NBTTagCompound();
@@ -107,17 +108,17 @@
             ItemStack itemstack = ItemStack.createStack(nbttagcompound1);
 
             if (itemstack != null) {
-                this.datawatcher.watch(8, itemstack);
+                this.datawatcher.set(EntityFireworks.FIREWORK_ITEM, Optional.of(itemstack));
             }
         }
 
     }
 
-    public float c(float f) {
-        return super.c(f);
+    public float e(float f) {
+        return super.e(f);
     }
 
-    public boolean aD() {
+    public boolean aT() {
         return false;
     }
 }
