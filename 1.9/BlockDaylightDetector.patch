--- a/net/minecraft/server/BlockDaylightDetector.java
+++ b/net/minecraft/server/BlockDaylightDetector.java
@@ -2,44 +2,48 @@
 
 import java.util.Random;
 
-public class BlockDaylightDetector extends BlockContainer {
+public class BlockDaylightDetector extends BlockTileEntity {
 
     public static final BlockStateInteger POWER = BlockStateInteger.of("power", 0, 15);
-    private final boolean b;
+    protected static final AxisAlignedBB b = new AxisAlignedBB(0.0D, 0.0D, 0.0D, 1.0D, 0.375D, 1.0D);
+    private final boolean c;
 
     public BlockDaylightDetector(boolean flag) {
         super(Material.WOOD);
-        this.b = flag;
-        this.j(this.blockStateList.getBlockData().set(BlockDaylightDetector.POWER, Integer.valueOf(0)));
-        this.a(0.0F, 0.0F, 0.0F, 1.0F, 0.375F, 1.0F);
+        this.c = flag;
+        this.w(this.blockStateList.getBlockData().set(BlockDaylightDetector.POWER, Integer.valueOf(0)));
         this.a(CreativeModeTab.d);
         this.c(0.2F);
-        this.a(BlockDaylightDetector.f);
+        this.a(SoundEffectType.a);
         this.c("daylightDetector");
     }
 
-    public void updateShape(IBlockAccess iblockaccess, BlockPosition blockposition) {
-        this.a(0.0F, 0.0F, 0.0F, 1.0F, 0.375F, 1.0F);
+    public AxisAlignedBB a(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition) {
+        return BlockDaylightDetector.b;
     }
 
-    public int a(IBlockAccess iblockaccess, BlockPosition blockposition, IBlockData iblockdata, EnumDirection enumdirection) {
+    public int b(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition, EnumDirection enumdirection) {
         return ((Integer) iblockdata.get(BlockDaylightDetector.POWER)).intValue();
     }
 
-    public void f(World world, BlockPosition blockposition) {
-        if (!world.worldProvider.o()) {
+    public void c(World world, BlockPosition blockposition) {
+        if (!world.worldProvider.m()) {
             IBlockData iblockdata = world.getType(blockposition);
-            int i = world.b(EnumSkyBlock.SKY, blockposition) - world.ab();
+            int i = world.b(EnumSkyBlock.SKY, blockposition) - world.af();
             float f = world.d(1.0F);
-            float f1 = f < 3.1415927F ? 0.0F : 6.2831855F;
 
-            f += (f1 - f) * 0.2F;
-            i = Math.round((float) i * MathHelper.cos(f));
-            i = MathHelper.clamp(i, 0, 15);
-            if (this.b) {
+            if (this.c) {
                 i = 15 - i;
             }
 
+            if (i > 0 && !this.c) {
+                float f1 = f < 3.1415927F ? 0.0F : 6.2831855F;
+
+                f += (f1 - f) * 0.2F;
+                i = Math.round((float) i * MathHelper.cos(f));
+            }
+
+            i = MathHelper.clamp(i, 0, 15);
             if (((Integer) iblockdata.get(BlockDaylightDetector.POWER)).intValue() != i) {
                 world.setTypeAndData(blockposition, iblockdata.set(BlockDaylightDetector.POWER, Integer.valueOf(i)), 3);
             }
@@ -47,23 +51,23 @@
         }
     }
 
-    public boolean interact(World world, BlockPosition blockposition, IBlockData iblockdata, EntityHuman entityhuman, EnumDirection enumdirection, float f, float f1, float f2) {
-        if (entityhuman.cn()) {
+    public boolean interact(World world, BlockPosition blockposition, IBlockData iblockdata, EntityHuman entityhuman, EnumHand enumhand, ItemStack itemstack, EnumDirection enumdirection, float f, float f1, float f2) {
+        if (entityhuman.cU()) {
             if (world.isClientSide) {
                 return true;
             } else {
-                if (this.b) {
+                if (this.c) {
                     world.setTypeAndData(blockposition, Blocks.DAYLIGHT_DETECTOR.getBlockData().set(BlockDaylightDetector.POWER, iblockdata.get(BlockDaylightDetector.POWER)), 4);
-                    Blocks.DAYLIGHT_DETECTOR.f(world, blockposition);
+                    Blocks.DAYLIGHT_DETECTOR.c(world, blockposition);
                 } else {
                     world.setTypeAndData(blockposition, Blocks.DAYLIGHT_DETECTOR_INVERTED.getBlockData().set(BlockDaylightDetector.POWER, iblockdata.get(BlockDaylightDetector.POWER)), 4);
-                    Blocks.DAYLIGHT_DETECTOR_INVERTED.f(world, blockposition);
+                    Blocks.DAYLIGHT_DETECTOR_INVERTED.c(world, blockposition);
                 }
 
                 return true;
             }
         } else {
-            return super.interact(world, blockposition, iblockdata, entityhuman, enumdirection, f, f1, f2);
+            return super.interact(world, blockposition, iblockdata, entityhuman, enumhand, itemstack, enumdirection, f, f1, f2);
         }
     }
 
@@ -71,19 +75,23 @@
         return Item.getItemOf(Blocks.DAYLIGHT_DETECTOR);
     }
 
-    public boolean d() {
+    public ItemStack a(World world, BlockPosition blockposition, IBlockData iblockdata) {
+        return new ItemStack(Blocks.DAYLIGHT_DETECTOR);
+    }
+
+    public boolean c(IBlockData iblockdata) {
         return false;
     }
 
-    public boolean c() {
+    public boolean b(IBlockData iblockdata) {
         return false;
     }
 
-    public int b() {
-        return 3;
+    public EnumRenderType a(IBlockData iblockdata) {
+        return EnumRenderType.MODEL;
     }
 
-    public boolean isPowerSource() {
+    public boolean isPowerSource(IBlockData iblockdata) {
         return true;
     }
 
