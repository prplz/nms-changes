--- a/net/minecraft/server/CommandAchievement.java
+++ b/net/minecraft/server/CommandAchievement.java
@@ -5,6 +5,7 @@
 import com.google.common.collect.Lists;
 import java.util.ArrayList;
 import java.util.Collection;
+import java.util.Collections;
 import java.util.Iterator;
 import java.util.List;
 
@@ -24,16 +25,14 @@
         return "commands.achievement.usage";
     }
 
-    public void execute(ICommandListener icommandlistener, String[] astring) throws CommandException {
+    public void execute(MinecraftServer minecraftserver, ICommandListener icommandlistener, String[] astring) throws CommandException {
         if (astring.length < 2) {
             throw new ExceptionUsage("commands.achievement.usage", new Object[0]);
         } else {
             final Statistic statistic = StatisticList.getStatistic(astring[1]);
 
-            if (statistic == null && !astring[1].equals("*")) {
-                throw new CommandException("commands.achievement.unknownAchievement", new Object[] { astring[1]});
-            } else {
-                final EntityPlayer entityplayer = astring.length >= 3 ? a(icommandlistener, astring[2]) : b(icommandlistener);
+            if ((statistic != null || astring[1].equals("*")) && (statistic == null || statistic.d())) {
+                final EntityPlayer entityplayer = astring.length >= 3 ? a(minecraftserver, icommandlistener, astring[2]) : a(icommandlistener);
                 boolean flag = astring[0].equalsIgnoreCase("give");
                 boolean flag1 = astring[0].equalsIgnoreCase("take");
 
@@ -50,7 +49,7 @@
                                 entityplayer.b((Statistic) achievement);
                             }
 
-                            a(icommandlistener, this, "commands.achievement.give.success.all", new Object[] { entityplayer.getName()});
+                            a(icommandlistener, (ICommand) this, "commands.achievement.give.success.all", new Object[] { entityplayer.getName()});
                         } else if (flag1) {
                             iterator = Lists.reverse(AchievementList.e).iterator();
 
@@ -59,7 +58,7 @@
                                 entityplayer.a((Statistic) achievement);
                             }
 
-                            a(icommandlistener, this, "commands.achievement.take.success.all", new Object[] { entityplayer.getName()});
+                            a(icommandlistener, (ICommand) this, "commands.achievement.take.success.all", new Object[] { entityplayer.getName()});
                         }
 
                     } else {
@@ -132,26 +131,28 @@
 
                         if (flag) {
                             entityplayer.b(statistic);
-                            a(icommandlistener, this, "commands.achievement.give.success.one", new Object[] { entityplayer.getName(), statistic.j()});
+                            a(icommandlistener, (ICommand) this, "commands.achievement.give.success.one", new Object[] { entityplayer.getName(), statistic.j()});
                         } else if (flag1) {
                             entityplayer.a(statistic);
-                            a(icommandlistener, this, "commands.achievement.take.success.one", new Object[] { statistic.j(), entityplayer.getName()});
+                            a(icommandlistener, (ICommand) this, "commands.achievement.take.success.one", new Object[] { statistic.j(), entityplayer.getName()});
                         }
 
                     }
                 }
+            } else {
+                throw new CommandException("commands.achievement.unknownAchievement", new Object[] { astring[1]});
             }
         }
     }
 
-    public List<String> tabComplete(ICommandListener icommandlistener, String[] astring, BlockPosition blockposition) {
+    public List<String> tabComplete(MinecraftServer minecraftserver, ICommandListener icommandlistener, String[] astring, BlockPosition blockposition) {
         if (astring.length == 1) {
             return a(astring, new String[] { "give", "take"});
         } else if (astring.length != 2) {
-            return astring.length == 3 ? a(astring, MinecraftServer.getServer().getPlayers()) : null;
+            return astring.length == 3 ? a(astring, minecraftserver.getPlayers()) : Collections.emptyList();
         } else {
             ArrayList arraylist = Lists.newArrayList();
-            Iterator iterator = StatisticList.stats.iterator();
+            Iterator iterator = AchievementList.e.iterator();
 
             while (iterator.hasNext()) {
                 Statistic statistic = (Statistic) iterator.next();
