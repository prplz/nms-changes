--- a/net/minecraft/server/GenericAttributes.java
+++ b/net/minecraft/server/GenericAttributes.java
@@ -8,12 +8,15 @@
 
 public class GenericAttributes {
 
-    private static final Logger f = LogManager.getLogger();
+    private static final Logger i = LogManager.getLogger();
     public static final IAttribute maxHealth = (new AttributeRanged((IAttribute) null, "generic.maxHealth", 20.0D, 0.0D, 1024.0D)).a("Max Health").a(true);
     public static final IAttribute FOLLOW_RANGE = (new AttributeRanged((IAttribute) null, "generic.followRange", 32.0D, 0.0D, 2048.0D)).a("Follow Range");
     public static final IAttribute c = (new AttributeRanged((IAttribute) null, "generic.knockbackResistance", 0.0D, 0.0D, 1.0D)).a("Knockback Resistance");
     public static final IAttribute MOVEMENT_SPEED = (new AttributeRanged((IAttribute) null, "generic.movementSpeed", 0.699999988079071D, 0.0D, 1024.0D)).a("Movement Speed").a(true);
     public static final IAttribute ATTACK_DAMAGE = new AttributeRanged((IAttribute) null, "generic.attackDamage", 2.0D, 0.0D, 2048.0D);
+    public static final IAttribute f = (new AttributeRanged((IAttribute) null, "generic.attackSpeed", 4.0D, 0.0D, 1024.0D)).a(true);
+    public static final IAttribute g = (new AttributeRanged((IAttribute) null, "generic.armor", 0.0D, 0.0D, 30.0D)).a(true);
+    public static final IAttribute h = (new AttributeRanged((IAttribute) null, "generic.luck", 0.0D, -1024.0D, 1024.0D)).a(true);
 
     public static NBTTagList a(AttributeMapBase attributemapbase) {
         NBTTagList nbttaglist = new NBTTagList();
@@ -54,14 +57,13 @@
         return nbttagcompound;
     }
 
-    private static NBTTagCompound a(AttributeModifier attributemodifier) {
+    public static NBTTagCompound a(AttributeModifier attributemodifier) {
         NBTTagCompound nbttagcompound = new NBTTagCompound();
 
         nbttagcompound.setString("Name", attributemodifier.b());
         nbttagcompound.setDouble("Amount", attributemodifier.d());
         nbttagcompound.setInt("Operation", attributemodifier.c());
-        nbttagcompound.setLong("UUIDMost", attributemodifier.a().getMostSignificantBits());
-        nbttagcompound.setLong("UUIDLeast", attributemodifier.a().getLeastSignificantBits());
+        nbttagcompound.a("UUID", attributemodifier.a());
         return nbttagcompound;
     }
 
@@ -73,7 +75,7 @@
             if (attributeinstance != null) {
                 a(attributeinstance, nbttagcompound);
             } else {
-                GenericAttributes.f.warn("Ignoring unknown attribute \'" + nbttagcompound.getString("Name") + "\'");
+                GenericAttributes.i.warn("Ignoring unknown attribute \'" + nbttagcompound.getString("Name") + "\'");
             }
         }
 
@@ -102,12 +104,12 @@
     }
 
     public static AttributeModifier a(NBTTagCompound nbttagcompound) {
-        UUID uuid = new UUID(nbttagcompound.getLong("UUIDMost"), nbttagcompound.getLong("UUIDLeast"));
+        UUID uuid = nbttagcompound.a("UUID");
 
         try {
             return new AttributeModifier(uuid, nbttagcompound.getString("Name"), nbttagcompound.getDouble("Amount"), nbttagcompound.getInt("Operation"));
         } catch (Exception exception) {
-            GenericAttributes.f.warn("Unable to create attribute: " + exception.getMessage());
+            GenericAttributes.i.warn("Unable to create attribute: " + exception.getMessage());
             return null;
         }
     }
