--- a/net/minecraft/server/BiomePlains.java
+++ b/net/minecraft/server/BiomePlains.java
@@ -4,20 +4,19 @@
 
 public class BiomePlains extends BiomeBase {
 
-    protected boolean aD;
+    protected boolean y;
 
-    protected BiomePlains(int i) {
-        super(i);
-        this.a(0.8F, 0.4F);
-        this.a(BiomePlains.e);
-        this.au.add(new BiomeBase.BiomeMeta(EntityHorse.class, 5, 2, 6));
-        this.as.A = -999;
-        this.as.B = 4;
-        this.as.C = 10;
+    protected BiomePlains(boolean flag, BiomeBase.a biomebase_a) {
+        super(biomebase_a);
+        this.y = flag;
+        this.v.add(new BiomeBase.BiomeMeta(EntityHorse.class, 5, 2, 6));
+        this.t.z = -999;
+        this.t.A = 4;
+        this.t.B = 10;
     }
 
     public BlockFlowers.EnumFlowerVarient a(Random random, BlockPosition blockposition) {
-        double d0 = BiomePlains.af.a((double) blockposition.getX() / 200.0D, (double) blockposition.getZ() / 200.0D);
+        double d0 = BiomePlains.l.a((double) blockposition.getX() / 200.0D, (double) blockposition.getZ() / 200.0D);
         int i;
 
         if (d0 < -0.8D) {
@@ -45,49 +44,39 @@
     }
 
     public void a(World world, Random random, BlockPosition blockposition) {
-        double d0 = BiomePlains.af.a((double) (blockposition.getX() + 8) / 200.0D, (double) (blockposition.getZ() + 8) / 200.0D);
+        double d0 = BiomePlains.l.a((double) (blockposition.getX() + 8) / 200.0D, (double) (blockposition.getZ() + 8) / 200.0D);
         int i;
         int j;
         int k;
         int l;
 
         if (d0 < -0.8D) {
-            this.as.B = 15;
-            this.as.C = 5;
+            this.t.A = 15;
+            this.t.B = 5;
         } else {
-            this.as.B = 4;
-            this.as.C = 10;
-            BiomePlains.ag.a(BlockTallPlant.EnumTallFlowerVariants.GRASS);
+            this.t.A = 4;
+            this.t.B = 10;
+            BiomePlains.m.a(BlockTallPlant.EnumTallFlowerVariants.GRASS);
 
             for (i = 0; i < 7; ++i) {
                 j = random.nextInt(16) + 8;
                 k = random.nextInt(16) + 8;
                 l = random.nextInt(world.getHighestBlockYAt(blockposition.a(j, 0, k)).getY() + 32);
-                BiomePlains.ag.generate(world, random, blockposition.a(j, l, k));
+                BiomePlains.m.generate(world, random, blockposition.a(j, l, k));
             }
         }
 
-        if (this.aD) {
-            BiomePlains.ag.a(BlockTallPlant.EnumTallFlowerVariants.SUNFLOWER);
+        if (this.y) {
+            BiomePlains.m.a(BlockTallPlant.EnumTallFlowerVariants.SUNFLOWER);
 
             for (i = 0; i < 10; ++i) {
                 j = random.nextInt(16) + 8;
                 k = random.nextInt(16) + 8;
                 l = random.nextInt(world.getHighestBlockYAt(blockposition.a(j, 0, k)).getY() + 32);
-                BiomePlains.ag.generate(world, random, blockposition.a(j, l, k));
+                BiomePlains.m.generate(world, random, blockposition.a(j, l, k));
             }
         }
 
         super.a(world, random, blockposition);
     }
-
-    protected BiomeBase d(int i) {
-        BiomePlains biomeplains = new BiomePlains(i);
-
-        biomeplains.a("Sunflower Plains");
-        biomeplains.aD = true;
-        biomeplains.b(9286496);
-        biomeplains.aj = 14273354;
-        return biomeplains;
-    }
 }
