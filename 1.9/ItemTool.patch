--- a/net/minecraft/server/ItemTool.java
+++ b/net/minecraft/server/ItemTool.java
@@ -5,23 +5,30 @@
 
 public class ItemTool extends Item {
 
-    private Set<Block> c;
-    protected float a = 4.0F;
-    private float d;
-    protected Item.EnumToolMaterial b;
-
-    protected ItemTool(float f, Item.EnumToolMaterial item_enumtoolmaterial, Set<Block> set) {
-        this.b = item_enumtoolmaterial;
-        this.c = set;
+    private Set<Block> e;
+    protected float a;
+    protected float b;
+    protected float c;
+    protected Item.EnumToolMaterial d;
+
+    protected ItemTool(float f, float f1, Item.EnumToolMaterial item_enumtoolmaterial, Set<Block> set) {
+        this.a = 4.0F;
+        this.d = item_enumtoolmaterial;
+        this.e = set;
         this.maxStackSize = 1;
         this.setMaxDurability(item_enumtoolmaterial.a());
         this.a = item_enumtoolmaterial.b();
-        this.d = f + item_enumtoolmaterial.c();
+        this.b = f + item_enumtoolmaterial.c();
+        this.c = f1;
         this.a(CreativeModeTab.i);
     }
 
-    public float getDestroySpeed(ItemStack itemstack, Block block) {
-        return this.c.contains(block) ? this.a : 1.0F;
+    protected ItemTool(Item.EnumToolMaterial item_enumtoolmaterial, Set<Block> set) {
+        this(0.0F, 0.0F, item_enumtoolmaterial, set);
+    }
+
+    public float getDestroySpeed(ItemStack itemstack, IBlockData iblockdata) {
+        return this.e.contains(iblockdata.getBlock()) ? this.a : 1.0F;
     }
 
     public boolean a(ItemStack itemstack, EntityLiving entityliving, EntityLiving entityliving1) {
@@ -29,8 +36,8 @@
         return true;
     }
 
-    public boolean a(ItemStack itemstack, World world, Block block, BlockPosition blockposition, EntityLiving entityliving) {
-        if ((double) block.g(world, blockposition) != 0.0D) {
+    public boolean a(ItemStack itemstack, World world, IBlockData iblockdata, BlockPosition blockposition, EntityLiving entityliving) {
+        if ((double) iblockdata.b(world, blockposition) != 0.0D) {
             itemstack.damage(1, entityliving);
         }
 
@@ -38,25 +45,29 @@
     }
 
     public Item.EnumToolMaterial g() {
-        return this.b;
+        return this.d;
     }
 
-    public int b() {
-        return this.b.e();
+    public int c() {
+        return this.d.e();
     }
 
     public String h() {
-        return this.b.toString();
+        return this.d.toString();
     }
 
     public boolean a(ItemStack itemstack, ItemStack itemstack1) {
-        return this.b.f() == itemstack1.getItem() ? true : super.a(itemstack, itemstack1);
+        return this.d.f() == itemstack1.getItem() ? true : super.a(itemstack, itemstack1);
     }
 
-    public Multimap<String, AttributeModifier> i() {
-        Multimap multimap = super.i();
+    public Multimap<String, AttributeModifier> a(EnumItemSlot enumitemslot) {
+        Multimap multimap = super.a(enumitemslot);
+
+        if (enumitemslot == EnumItemSlot.MAINHAND) {
+            multimap.put(GenericAttributes.ATTACK_DAMAGE.getName(), new AttributeModifier(ItemTool.g, "Tool modifier", (double) this.b, 0));
+            multimap.put(GenericAttributes.f.getName(), new AttributeModifier(ItemTool.h, "Tool modifier", (double) this.c, 0));
+        }
 
-        multimap.put(GenericAttributes.ATTACK_DAMAGE.getName(), new AttributeModifier(ItemTool.f, "Tool modifier", (double) this.d, 0));
         return multimap;
     }
 }
