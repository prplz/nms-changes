--- a/net/minecraft/server/EntityFallingBlock.java
+++ b/net/minecraft/server/EntityFallingBlock.java
@@ -9,11 +9,12 @@
     private IBlockData block;
     public int ticksLived;
     public boolean dropItem = true;
-    private boolean e;
-    private boolean hurtEntities;
+    private boolean f;
+    public boolean hurtEntities;
     private int fallHurtMax = 40;
     private float fallHurtAmount = 2.0F;
     public NBTTagCompound tileEntityData;
+    protected static final DataWatcherObject<BlockPosition> d = DataWatcher.a(EntityFallingBlock.class, DataWatcherRegistry.j);
 
     public EntityFallingBlock(World world) {
         super(world);
@@ -22,31 +23,38 @@
     public EntityFallingBlock(World world, double d0, double d1, double d2, IBlockData iblockdata) {
         super(world);
         this.block = iblockdata;
-        this.k = true;
+        this.i = true;
         this.setSize(0.98F, 0.98F);
-        this.setPosition(d0, d1, d2);
+        this.setPosition(d0, d1 + (double) ((1.0F - this.length) / 2.0F), d2);
         this.motX = 0.0D;
         this.motY = 0.0D;
         this.motZ = 0.0D;
         this.lastX = d0;
         this.lastY = d1;
         this.lastZ = d2;
+        this.a(new BlockPosition(this));
     }
 
-    protected boolean s_() {
+    public void a(BlockPosition blockposition) {
+        this.datawatcher.set(EntityFallingBlock.d, blockposition);
+    }
+
+    protected boolean playStepSound() {
         return false;
     }
 
-    protected void h() {}
+    protected void i() {
+        this.datawatcher.register(EntityFallingBlock.d, BlockPosition.ZERO);
+    }
 
-    public boolean ad() {
+    public boolean isInteractable() {
         return !this.dead;
     }
 
-    public void t_() {
+    public void m() {
         Block block = this.block.getBlock();
 
-        if (block.getMaterial() == Material.AIR) {
+        if (this.block.getMaterial() == Material.AIR) {
             this.die();
         } else {
             this.lastX = this.locX;
@@ -72,24 +80,31 @@
             if (!this.world.isClientSide) {
                 blockposition = new BlockPosition(this);
                 if (this.onGround) {
+                    IBlockData iblockdata = this.world.getType(blockposition);
+
+                    if (BlockFalling.i(this.world.getType(new BlockPosition(this.locX, this.locY - 0.009999999776482582D, this.locZ)))) {
+                        this.onGround = false;
+                        return;
+                    }
+
                     this.motX *= 0.699999988079071D;
                     this.motZ *= 0.699999988079071D;
                     this.motY *= -0.5D;
-                    if (this.world.getType(blockposition).getBlock() != Blocks.PISTON_EXTENSION) {
+                    if (iblockdata.getBlock() != Blocks.PISTON_EXTENSION) {
                         this.die();
-                        if (!this.e) {
-                            if (this.world.a(block, blockposition, true, EnumDirection.UP, (Entity) null, (ItemStack) null) && !BlockFalling.canFall(this.world, blockposition.down()) && this.world.setTypeAndData(blockposition, this.block, 3)) {
+                        if (!this.f) {
+                            if (this.world.a(block, blockposition, true, EnumDirection.UP, (Entity) null, (ItemStack) null) && !BlockFalling.i(this.world.getType(blockposition.down())) && this.world.setTypeAndData(blockposition, this.block, 3)) {
                                 if (block instanceof BlockFalling) {
                                     ((BlockFalling) block).a_(this.world, blockposition);
                                 }
 
-                                if (this.tileEntityData != null && block instanceof IContainer) {
+                                if (this.tileEntityData != null && block instanceof ITileEntity) {
                                     TileEntity tileentity = this.world.getTileEntity(blockposition);
 
                                     if (tileentity != null) {
                                         NBTTagCompound nbttagcompound = new NBTTagCompound();
 
-                                        tileentity.b(nbttagcompound);
+                                        tileentity.save(nbttagcompound);
                                         Iterator iterator = this.tileEntityData.c().iterator();
 
                                         while (iterator.hasNext()) {
@@ -145,7 +160,7 @@
 
                     ++j;
                     if (j > 2) {
-                        this.e = true;
+                        this.f = true;
                     } else {
                         this.block = this.block.set(BlockAnvil.DAMAGE, Integer.valueOf(j));
                     }
@@ -157,11 +172,11 @@
 
     protected void b(NBTTagCompound nbttagcompound) {
         Block block = this.block != null ? this.block.getBlock() : Blocks.AIR;
-        MinecraftKey minecraftkey = (MinecraftKey) Block.REGISTRY.c(block);
+        MinecraftKey minecraftkey = (MinecraftKey) Block.REGISTRY.b(block);
 
         nbttagcompound.setString("Block", minecraftkey == null ? "" : minecraftkey.toString());
         nbttagcompound.setByte("Data", (byte) block.toLegacyData(this.block));
-        nbttagcompound.setByte("Time", (byte) this.ticksLived);
+        nbttagcompound.setInt("Time", this.ticksLived);
         nbttagcompound.setBoolean("DropItem", this.dropItem);
         nbttagcompound.setBoolean("HurtEntities", this.hurtEntities);
         nbttagcompound.setFloat("FallHurtAmount", this.fallHurtAmount);
@@ -183,7 +198,7 @@
             this.block = Block.getById(nbttagcompound.getByte("Tile") & 255).fromLegacyData(i);
         }
 
-        this.ticksLived = nbttagcompound.getByte("Time") & 255;
+        this.ticksLived = nbttagcompound.getInt("Time");
         Block block = this.block.getBlock();
 
         if (nbttagcompound.hasKeyOfType("HurtEntities", 99)) {
@@ -202,7 +217,7 @@
             this.tileEntityData = nbttagcompound.getCompound("TileEntityData");
         }
 
-        if (block == null || block.getMaterial() == Material.AIR) {
+        if (block == null || block.getBlockData().getMaterial() == Material.AIR) {
             this.block = Blocks.SAND.getBlockData();
         }
 
@@ -226,4 +241,8 @@
     public IBlockData getBlock() {
         return this.block;
     }
+
+    public boolean br() {
+        return true;
+    }
 }
