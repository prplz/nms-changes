--- a/net/minecraft/server/TileEntityCommand.java
+++ b/net/minecraft/server/TileEntityCommand.java
@@ -1,5 +1,7 @@
 package net.minecraft.server;
 
+import javax.annotation.Nullable;
+
 public class TileEntityCommand extends TileEntity {
 
     private boolean a;
@@ -41,12 +43,13 @@
 
     public TileEntityCommand() {}
 
-    public void save(NBTTagCompound nbttagcompound) {
+    public NBTTagCompound save(NBTTagCompound nbttagcompound) {
         super.save(nbttagcompound);
         this.i.a(nbttagcompound);
-        nbttagcompound.setBoolean("powered", this.d());
-        nbttagcompound.setBoolean("conditionMet", this.g());
-        nbttagcompound.setBoolean("auto", this.e());
+        nbttagcompound.setBoolean("powered", this.e());
+        nbttagcompound.setBoolean("conditionMet", this.h());
+        nbttagcompound.setBoolean("auto", this.g());
+        return nbttagcompound;
     }
 
     public void a(NBTTagCompound nbttagcompound) {
@@ -57,12 +60,12 @@
         this.b(nbttagcompound.getBoolean("auto"));
     }
 
-    public Packet<?> getUpdatePacket() {
-        if (this.h()) {
+    @Nullable
+    public PacketPlayOutTileEntityData getUpdatePacket() {
+        if (this.i()) {
             this.d(false);
-            NBTTagCompound nbttagcompound = new NBTTagCompound();
+            NBTTagCompound nbttagcompound = this.save(new NBTTagCompound());
 
-            this.save(nbttagcompound);
             return new PacketPlayOutTileEntityData(this.position, 2, nbttagcompound);
         } else {
             return null;
@@ -77,7 +80,7 @@
         return this.i;
     }
 
-    public CommandObjectiveExecutor c() {
+    public CommandObjectiveExecutor d() {
         return this.i.o();
     }
 
@@ -85,11 +88,11 @@
         this.a = flag;
     }
 
-    public boolean d() {
+    public boolean e() {
         return this.a;
     }
 
-    public boolean e() {
+    public boolean g() {
         return this.f;
     }
 
@@ -97,14 +100,14 @@
         boolean flag1 = this.f;
 
         this.f = flag;
-        if (!flag1 && flag && !this.a && this.world != null && this.i() != TileEntityCommand.Type.SEQUENCE) {
+        if (!flag1 && flag && !this.a && this.world != null && this.j() != TileEntityCommand.Type.SEQUENCE) {
             Block block = this.getBlock();
 
             if (block instanceof BlockCommand) {
                 BlockPosition blockposition = this.getPosition();
                 BlockCommand blockcommand = (BlockCommand) block;
 
-                this.g = !this.j() || blockcommand.e(this.world, blockposition, this.world.getType(blockposition));
+                this.g = !this.k() || blockcommand.e(this.world, blockposition, this.world.getType(blockposition));
                 this.world.a(blockposition, block, block.a(this.world));
                 if (this.g) {
                     blockcommand.c(this.world, blockposition);
@@ -114,7 +117,7 @@
 
     }
 
-    public boolean g() {
+    public boolean h() {
         return this.g;
     }
 
@@ -122,7 +125,7 @@
         this.g = flag;
     }
 
-    public boolean h() {
+    public boolean i() {
         return this.h;
     }
 
@@ -130,13 +133,13 @@
         this.h = flag;
     }
 
-    public TileEntityCommand.Type i() {
+    public TileEntityCommand.Type j() {
         Block block = this.getBlock();
 
         return block == Blocks.COMMAND_BLOCK ? TileEntityCommand.Type.REDSTONE : (block == Blocks.dc ? TileEntityCommand.Type.AUTO : (block == Blocks.dd ? TileEntityCommand.Type.SEQUENCE : TileEntityCommand.Type.REDSTONE));
     }
 
-    public boolean j() {
+    public boolean k() {
         IBlockData iblockdata = this.world.getType(this.getPosition());
 
         return iblockdata.getBlock() instanceof BlockCommand ? ((Boolean) iblockdata.get(BlockCommand.b)).booleanValue() : false;
