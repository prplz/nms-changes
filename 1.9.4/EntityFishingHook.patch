--- a/net/minecraft/server/EntityFishingHook.java
+++ b/net/minecraft/server/EntityFishingHook.java
@@ -12,19 +12,19 @@
     private Block g;
     private boolean isInGround;
     public EntityHuman owner;
-    private int as;
     private int at;
     private int au;
     private int av;
     private int aw;
-    private float ax;
+    private int ax;
+    private float ay;
     public Entity hooked;
-    private int ay;
-    private double az;
+    private int az;
     private double aA;
     private double aB;
     private double aC;
     private double aD;
+    private double aE;
 
     public EntityFishingHook(World world) {
         super(world);
@@ -86,7 +86,7 @@
 
         this.lastYaw = this.yaw = (float) (MathHelper.b(d0, d2) * 57.2957763671875D);
         this.lastPitch = this.pitch = (float) (MathHelper.b(d1, (double) f3) * 57.2957763671875D);
-        this.as = 0;
+        this.at = 0;
     }
 
     public void m() {
@@ -120,22 +120,22 @@
             this.hooked = null;
         }
 
-        if (this.ay > 0) {
-            double d1 = this.locX + (this.az - this.locX) / (double) this.ay;
-            double d2 = this.locY + (this.aA - this.locY) / (double) this.ay;
-            double d3 = this.locZ + (this.aB - this.locZ) / (double) this.ay;
-            double d4 = MathHelper.g(this.aC - (double) this.yaw);
-
-            this.yaw = (float) ((double) this.yaw + d4 / (double) this.ay);
-            this.pitch = (float) ((double) this.pitch + (this.aD - (double) this.pitch) / (double) this.ay);
-            --this.ay;
+        if (this.az > 0) {
+            double d1 = this.locX + (this.aA - this.locX) / (double) this.az;
+            double d2 = this.locY + (this.aB - this.locY) / (double) this.az;
+            double d3 = this.locZ + (this.aC - this.locZ) / (double) this.az;
+            double d4 = MathHelper.g(this.aD - (double) this.yaw);
+
+            this.yaw = (float) ((double) this.yaw + d4 / (double) this.az);
+            this.pitch = (float) ((double) this.pitch + (this.aE - (double) this.pitch) / (double) this.az);
+            --this.az;
             this.setPosition(d1, d2, d3);
             this.setYawPitch(this.yaw, this.pitch);
         } else {
             if (this.isInGround) {
                 if (this.world.getType(new BlockPosition(this.d, this.e, this.f)).getBlock() == this.g) {
-                    ++this.as;
-                    if (this.as == 1200) {
+                    ++this.at;
+                    if (this.at == 1200) {
                         this.die();
                     }
 
@@ -146,10 +146,10 @@
                 this.motX *= (double) (this.random.nextFloat() * 0.2F);
                 this.motY *= (double) (this.random.nextFloat() * 0.2F);
                 this.motZ *= (double) (this.random.nextFloat() * 0.2F);
-                this.as = 0;
                 this.at = 0;
+                this.au = 0;
             } else {
-                ++this.at;
+                ++this.au;
             }
 
             double d5;
@@ -174,7 +174,7 @@
                 for (int j = 0; j < list.size(); ++j) {
                     Entity entity1 = (Entity) list.get(j);
 
-                    if (entity1.isInteractable() && (entity1 != this.owner || this.at >= 5)) {
+                    if (entity1.isInteractable() && (entity1 != this.owner || this.au >= 5)) {
                         AxisAlignedBB axisalignedbb = entity1.getBoundingBox().g(0.30000001192092896D);
                         MovingObjectPosition movingobjectposition1 = axisalignedbb.a(vec3d, vec3d1);
 
@@ -261,11 +261,11 @@
                         --l;
                     }
 
-                    if (this.au > 0) {
-                        --this.au;
-                        if (this.au <= 0) {
-                            this.av = 0;
+                    if (this.av > 0) {
+                        --this.av;
+                        if (this.av <= 0) {
                             this.aw = 0;
+                            this.ax = 0;
                         }
                     } else {
                         double d10;
@@ -275,23 +275,23 @@
                         float f4;
                         double d11;
 
-                        if (this.aw > 0) {
-                            this.aw -= l;
-                            if (this.aw <= 0) {
+                        if (this.ax > 0) {
+                            this.ax -= l;
+                            if (this.ax <= 0) {
                                 this.motY -= 0.20000000298023224D;
                                 this.a(SoundEffects.G, 0.25F, 1.0F + (this.random.nextFloat() - this.random.nextFloat()) * 0.4F);
                                 f2 = (float) MathHelper.floor(this.getBoundingBox().b);
                                 worldserver.a(EnumParticle.WATER_BUBBLE, this.locX, (double) (f2 + 1.0F), this.locZ, (int) (1.0F + this.width * 20.0F), (double) this.width, 0.0D, (double) this.width, 0.20000000298023224D, new int[0]);
                                 worldserver.a(EnumParticle.WATER_WAKE, this.locX, (double) (f2 + 1.0F), this.locZ, (int) (1.0F + this.width * 20.0F), (double) this.width, 0.0D, (double) this.width, 0.20000000298023224D, new int[0]);
-                                this.au = MathHelper.nextInt(this.random, 10, 30);
+                                this.av = MathHelper.nextInt(this.random, 10, 30);
                             } else {
-                                this.ax = (float) ((double) this.ax + this.random.nextGaussian() * 4.0D);
-                                f2 = this.ax * 0.017453292F;
+                                this.ay = (float) ((double) this.ay + this.random.nextGaussian() * 4.0D);
+                                f2 = this.ay * 0.017453292F;
                                 f3 = MathHelper.sin(f2);
                                 f4 = MathHelper.cos(f2);
-                                d6 = this.locX + (double) (f3 * (float) this.aw * 0.1F);
+                                d6 = this.locX + (double) (f3 * (float) this.ax * 0.1F);
                                 d11 = (double) ((float) MathHelper.floor(this.getBoundingBox().b) + 1.0F);
-                                d10 = this.locZ + (double) (f4 * (float) this.aw * 0.1F);
+                                d10 = this.locZ + (double) (f4 * (float) this.ax * 0.1F);
                                 block = worldserver.getType(new BlockPosition((int) d6, (int) d11 - 1, (int) d10)).getBlock();
                                 if (block == Blocks.WATER || block == Blocks.FLOWING_WATER) {
                                     if (this.random.nextFloat() < 0.15F) {
@@ -305,15 +305,15 @@
                                     worldserver.a(EnumParticle.WATER_WAKE, d6, d11, d10, 0, (double) (-f6), 0.01D, (double) f5, 1.0D, new int[0]);
                                 }
                             }
-                        } else if (this.av > 0) {
-                            this.av -= l;
+                        } else if (this.aw > 0) {
+                            this.aw -= l;
                             f2 = 0.15F;
-                            if (this.av < 20) {
-                                f2 = (float) ((double) f2 + (double) (20 - this.av) * 0.05D);
-                            } else if (this.av < 40) {
-                                f2 = (float) ((double) f2 + (double) (40 - this.av) * 0.02D);
-                            } else if (this.av < 60) {
-                                f2 = (float) ((double) f2 + (double) (60 - this.av) * 0.01D);
+                            if (this.aw < 20) {
+                                f2 = (float) ((double) f2 + (double) (20 - this.aw) * 0.05D);
+                            } else if (this.aw < 40) {
+                                f2 = (float) ((double) f2 + (double) (40 - this.aw) * 0.02D);
+                            } else if (this.aw < 60) {
+                                f2 = (float) ((double) f2 + (double) (60 - this.aw) * 0.01D);
                             }
 
                             if (this.random.nextFloat() < f2) {
@@ -328,17 +328,17 @@
                                 }
                             }
 
-                            if (this.av <= 0) {
-                                this.ax = MathHelper.a(this.random, 0.0F, 360.0F);
-                                this.aw = MathHelper.nextInt(this.random, 20, 80);
+                            if (this.aw <= 0) {
+                                this.ay = MathHelper.a(this.random, 0.0F, 360.0F);
+                                this.ax = MathHelper.nextInt(this.random, 20, 80);
                             }
                         } else {
-                            this.av = MathHelper.nextInt(this.random, 100, 900);
-                            this.av -= EnchantmentManager.g(this.owner) * 20 * 5;
+                            this.aw = MathHelper.nextInt(this.random, 100, 900);
+                            this.aw -= EnchantmentManager.g(this.owner) * 20 * 5;
                         }
                     }
 
-                    if (this.au > 0) {
+                    if (this.av > 0) {
                         this.motY -= (double) (this.random.nextFloat() * this.random.nextFloat() * this.random.nextFloat()) * 0.2D;
                     }
                 }
@@ -391,10 +391,10 @@
                 this.k();
                 this.world.broadcastEntityEffect(this, (byte) 31);
                 i = this.hooked instanceof EntityItem ? 3 : 5;
-            } else if (this.au > 0) {
+            } else if (this.av > 0) {
                 LootTableInfo.a loottableinfo_a = new LootTableInfo.a((WorldServer) this.world);
 
-                loottableinfo_a.a((float) EnchantmentManager.f(this.owner) + this.owner.db());
+                loottableinfo_a.a((float) EnchantmentManager.f(this.owner) + this.owner.dc());
                 Iterator iterator = this.world.ak().a(LootTables.am).a(this.random, loottableinfo_a.a()).iterator();
 
                 while (iterator.hasNext()) {
