--- a/net/minecraft/server/BaseBlockPosition.java
+++ b/net/minecraft/server/BaseBlockPosition.java
@@ -1,18 +1,20 @@
 package net.minecraft.server;
 
 import com.google.common.base.Objects;
+import javax.annotation.concurrent.Immutable;
 
+@Immutable
 public class BaseBlockPosition implements Comparable<BaseBlockPosition> {
 
     public static final BaseBlockPosition ZERO = new BaseBlockPosition(0, 0, 0);
     private final int a;
+    private final int b;
     private final int c;
-    private final int d;
 
     public BaseBlockPosition(int i, int j, int k) {
         this.a = i;
-        this.c = j;
-        this.d = k;
+        this.b = j;
+        this.c = k;
     }
 
     public BaseBlockPosition(double d0, double d1, double d2) {
@@ -35,7 +37,7 @@
         return (this.getY() + this.getZ() * 31) * 31 + this.getX();
     }
 
-    public int i(BaseBlockPosition baseblockposition) {
+    public int l(BaseBlockPosition baseblockposition) {
         return this.getY() == baseblockposition.getY() ? (this.getZ() == baseblockposition.getZ() ? this.getX() - baseblockposition.getX() : this.getZ() - baseblockposition.getZ()) : this.getY() - baseblockposition.getY();
     }
 
@@ -44,18 +46,18 @@
     }
 
     public int getY() {
-        return this.c;
+        return this.b;
     }
 
     public int getZ() {
-        return this.d;
+        return this.c;
     }
 
     public BaseBlockPosition d(BaseBlockPosition baseblockposition) {
         return new BaseBlockPosition(this.getY() * baseblockposition.getZ() - this.getZ() * baseblockposition.getY(), this.getZ() * baseblockposition.getX() - this.getX() * baseblockposition.getZ(), this.getX() * baseblockposition.getY() - this.getY() * baseblockposition.getX());
     }
 
-    public double f(int i, int j, int k) {
+    public double h(int i, int j, int k) {
         double d0 = (double) (this.getX() - i);
         double d1 = (double) (this.getY() - j);
         double d2 = (double) (this.getZ() - k);
@@ -71,7 +73,7 @@
         return d3 * d3 + d4 * d4 + d5 * d5;
     }
 
-    public double f(double d0, double d1, double d2) {
+    public double g(double d0, double d1, double d2) {
         double d3 = (double) this.getX() + 0.5D - d0;
         double d4 = (double) this.getY() + 0.5D - d1;
         double d5 = (double) this.getZ() + 0.5D - d2;
@@ -79,7 +81,7 @@
         return d3 * d3 + d4 * d4 + d5 * d5;
     }
 
-    public double k(BaseBlockPosition baseblockposition) {
+    public double n(BaseBlockPosition baseblockposition) {
         return this.distanceSquared((double) baseblockposition.getX(), (double) baseblockposition.getY(), (double) baseblockposition.getZ());
     }
 
@@ -88,6 +90,6 @@
     }
 
     public int compareTo(Object object) {
-        return this.i((BaseBlockPosition) object);
+        return this.l((BaseBlockPosition) object);
     }
 }
