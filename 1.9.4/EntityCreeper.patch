--- a/net/minecraft/server/EntityCreeper.java
+++ b/net/minecraft/server/EntityCreeper.java
@@ -1,15 +1,17 @@
 package net.minecraft.server;
 
+import javax.annotation.Nullable;
+
 public class EntityCreeper extends EntityMonster {
 
     private static final DataWatcherObject<Integer> a = DataWatcher.a(EntityCreeper.class, DataWatcherRegistry.b);
     private static final DataWatcherObject<Boolean> b = DataWatcher.a(EntityCreeper.class, DataWatcherRegistry.h);
     private static final DataWatcherObject<Boolean> c = DataWatcher.a(EntityCreeper.class, DataWatcherRegistry.h);
-    private int bv;
+    private int bw;
     private int fuseTicks;
     private int maxFuseTicks = 30;
     private int explosionRadius = 3;
-    private int bz = 0;
+    private int bA = 0;
 
     public EntityCreeper(World world) {
         super(world);
@@ -76,19 +78,19 @@
         }
 
         if (nbttagcompound.getBoolean("ignited")) {
-            this.dc();
+            this.dd();
         }
 
     }
 
     public void m() {
         if (this.isAlive()) {
-            this.bv = this.fuseTicks;
+            this.bw = this.fuseTicks;
             if (this.isIgnited()) {
                 this.a(1);
             }
 
-            int i = this.da();
+            int i = this.db();
 
             if (i > 0 && this.fuseTicks == 0) {
                 this.a(SoundEffects.at, 1.0F, 0.5F);
@@ -101,18 +103,18 @@
 
             if (this.fuseTicks >= this.maxFuseTicks) {
                 this.fuseTicks = this.maxFuseTicks;
-                this.df();
+                this.dg();
             }
         }
 
         super.m();
     }
 
-    protected SoundEffect bR() {
+    protected SoundEffect bS() {
         return SoundEffects.as;
     }
 
-    protected SoundEffect bS() {
+    protected SoundEffect bT() {
         return SoundEffects.ar;
     }
 
@@ -141,11 +143,12 @@
         return ((Boolean) this.datawatcher.get(EntityCreeper.b)).booleanValue();
     }
 
+    @Nullable
     protected MinecraftKey J() {
         return LootTables.q;
     }
 
-    public int da() {
+    public int db() {
         return ((Integer) this.datawatcher.get(EntityCreeper.a)).intValue();
     }
 
@@ -158,12 +161,12 @@
         this.datawatcher.set(EntityCreeper.b, Boolean.valueOf(true));
     }
 
-    protected boolean a(EntityHuman entityhuman, EnumHand enumhand, ItemStack itemstack) {
+    protected boolean a(EntityHuman entityhuman, EnumHand enumhand, @Nullable ItemStack itemstack) {
         if (itemstack != null && itemstack.getItem() == Items.FLINT_AND_STEEL) {
-            this.world.a(entityhuman, this.locX, this.locY, this.locZ, SoundEffects.bx, this.bz(), 1.0F, this.random.nextFloat() * 0.4F + 0.8F);
+            this.world.a(entityhuman, this.locX, this.locY, this.locZ, SoundEffects.bx, this.bA(), 1.0F, this.random.nextFloat() * 0.4F + 0.8F);
             entityhuman.a(enumhand);
             if (!this.world.isClientSide) {
-                this.dc();
+                this.dd();
                 itemstack.damage(1, entityhuman);
                 return true;
             }
@@ -172,12 +175,12 @@
         return super.a(entityhuman, enumhand, itemstack);
     }
 
-    private void df() {
+    private void dg() {
         if (!this.world.isClientSide) {
             boolean flag = this.world.getGameRules().getBoolean("mobGriefing");
             float f = this.isPowered() ? 2.0F : 1.0F;
 
-            this.aT = true;
+            this.aU = true;
             this.world.explode(this, this.locX, this.locY, this.locZ, (float) this.explosionRadius * f, flag);
             this.die();
         }
@@ -188,15 +191,15 @@
         return ((Boolean) this.datawatcher.get(EntityCreeper.c)).booleanValue();
     }
 
-    public void dc() {
+    public void dd() {
         this.datawatcher.set(EntityCreeper.c, Boolean.valueOf(true));
     }
 
     public boolean canCauseHeadDrop() {
-        return this.bz < 1 && this.world.getGameRules().getBoolean("doMobLoot");
+        return this.bA < 1 && this.world.getGameRules().getBoolean("doMobLoot");
     }
 
     public void setCausedHeadDrop() {
-        ++this.bz;
+        ++this.bA;
     }
 }
