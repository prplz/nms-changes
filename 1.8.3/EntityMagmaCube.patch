--- a/net/minecraft/server/EntityMagmaCube.java
+++ b/net/minecraft/server/EntityMagmaCube.java
@@ -7,12 +7,12 @@
         this.fireProof = true;
     }
 
-    protected void aW() {
-        super.aW();
+    protected void initAttributes() {
+        super.initAttributes();
         this.getAttributeInstance(GenericAttributes.d).setValue(0.20000000298023224D);
     }
 
-    public boolean bQ() {
+    public boolean bR() {
         return this.world.getDifficulty() != EnumDifficulty.PEACEFUL;
     }
 
@@ -20,7 +20,7 @@
         return this.world.a(this.getBoundingBox(), (Entity) this) && this.world.getCubes(this, this.getBoundingBox()).isEmpty() && !this.world.containsLiquid(this.getBoundingBox());
     }
 
-    public int bq() {
+    public int br() {
         return this.getSize() * 3;
     }
 
@@ -32,7 +32,7 @@
         return EnumParticle.FLAME;
     }
 
-    protected EntitySlime cd() {
+    protected EntitySlime cf() {
         return new EntityMagmaCube(this.world);
     }
 
@@ -61,39 +61,39 @@
         return false;
     }
 
-    protected int ce() {
-        return super.ce() * 4;
+    protected int cg() {
+        return super.cg() * 4;
     }
 
-    protected void cf() {
+    protected void ch() {
         this.a *= 0.9F;
     }
 
-    protected void bE() {
+    protected void bF() {
         this.motY = (double) (0.42F + (float) this.getSize() * 0.1F);
         this.ai = true;
     }
 
-    protected void bG() {
+    protected void bH() {
         this.motY = (double) (0.22F + (float) this.getSize() * 0.05F);
         this.ai = true;
     }
 
     public void e(float f, float f1) {}
 
-    protected boolean cg() {
+    protected boolean ci() {
         return true;
     }
 
-    protected int ch() {
-        return super.ch() + 2;
+    protected int cj() {
+        return super.cj() + 2;
     }
 
-    protected String ci() {
+    protected String ck() {
         return this.getSize() > 1 ? "mob.magmacube.big" : "mob.magmacube.small";
     }
 
-    protected boolean cj() {
+    protected boolean cl() {
         return true;
     }
 }
