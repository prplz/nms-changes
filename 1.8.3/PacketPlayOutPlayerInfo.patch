--- a/net/minecraft/server/PacketPlayOutPlayerInfo.java
+++ b/net/minecraft/server/PacketPlayOutPlayerInfo.java
@@ -1,54 +1,56 @@
 package net.minecraft.server;
 
+import com.google.common.base.Objects;
 import com.google.common.collect.Lists;
 import com.mojang.authlib.GameProfile;
 import com.mojang.authlib.properties.Property;
+import java.io.IOException;
 import java.util.Iterator;
 import java.util.List;
 
-public class PacketPlayOutPlayerInfo implements Packet {
+public class PacketPlayOutPlayerInfo implements Packet<PacketListenerPlayOut> {
 
-    private EnumPlayerInfoAction a;
-    private final List b = Lists.newArrayList();
+    private PacketPlayOutPlayerInfo.EnumPlayerInfoAction a;
+    private final List<PacketPlayOutPlayerInfo.PlayerInfoData> b = Lists.newArrayList();
 
     public PacketPlayOutPlayerInfo() {}
 
-    public PacketPlayOutPlayerInfo(EnumPlayerInfoAction enumplayerinfoaction, EntityPlayer... aentityplayer) {
-        this.a = enumplayerinfoaction;
+    public PacketPlayOutPlayerInfo(PacketPlayOutPlayerInfo.EnumPlayerInfoAction packetplayoutplayerinfo_enumplayerinfoaction, EntityPlayer... aentityplayer) {
+        this.a = packetplayoutplayerinfo_enumplayerinfoaction;
         EntityPlayer[] aentityplayer1 = aentityplayer;
         int i = aentityplayer.length;
 
         for (int j = 0; j < i; ++j) {
             EntityPlayer entityplayer = aentityplayer1[j];
 
-            this.b.add(new PlayerInfoData(this, entityplayer.getProfile(), entityplayer.ping, entityplayer.playerInteractManager.getGameMode(), entityplayer.getPlayerListName()));
+            this.b.add(new PacketPlayOutPlayerInfo.PlayerInfoData(entityplayer.getProfile(), entityplayer.ping, entityplayer.playerInteractManager.getGameMode(), entityplayer.getPlayerListName()));
         }
 
     }
 
-    public PacketPlayOutPlayerInfo(EnumPlayerInfoAction enumplayerinfoaction, Iterable iterable) {
-        this.a = enumplayerinfoaction;
+    public PacketPlayOutPlayerInfo(PacketPlayOutPlayerInfo.EnumPlayerInfoAction packetplayoutplayerinfo_enumplayerinfoaction, Iterable<EntityPlayer> iterable) {
+        this.a = packetplayoutplayerinfo_enumplayerinfoaction;
         Iterator iterator = iterable.iterator();
 
         while (iterator.hasNext()) {
             EntityPlayer entityplayer = (EntityPlayer) iterator.next();
 
-            this.b.add(new PlayerInfoData(this, entityplayer.getProfile(), entityplayer.ping, entityplayer.playerInteractManager.getGameMode(), entityplayer.getPlayerListName()));
+            this.b.add(new PacketPlayOutPlayerInfo.PlayerInfoData(entityplayer.getProfile(), entityplayer.ping, entityplayer.playerInteractManager.getGameMode(), entityplayer.getPlayerListName()));
         }
 
     }
 
-    public void a(PacketDataSerializer packetdataserializer) {
-        this.a = (EnumPlayerInfoAction) packetdataserializer.a(EnumPlayerInfoAction.class);
+    public void a(PacketDataSerializer packetdataserializer) throws IOException {
+        this.a = (PacketPlayOutPlayerInfo.EnumPlayerInfoAction) packetdataserializer.a(PacketPlayOutPlayerInfo.EnumPlayerInfoAction.class);
         int i = packetdataserializer.e();
 
         for (int j = 0; j < i; ++j) {
             GameProfile gameprofile = null;
             int k = 0;
-            EnumGamemode enumgamemode = null;
+            WorldSettings.EnumGamemode worldsettings_enumgamemode = null;
             IChatBaseComponent ichatbasecomponent = null;
 
-            switch (SwitchHelperPlayerInfo.a[this.a.ordinal()]) {
+            switch (PacketPlayOutPlayerInfo.SyntheticClass_1.a[this.a.ordinal()]) {
             case 1:
                 gameprofile = new GameProfile(packetdataserializer.g(), packetdataserializer.c(16));
                 int l = packetdataserializer.e();
@@ -64,7 +66,7 @@
                     }
                 }
 
-                enumgamemode = EnumGamemode.getById(packetdataserializer.e());
+                worldsettings_enumgamemode = WorldSettings.EnumGamemode.getById(packetdataserializer.e());
                 k = packetdataserializer.e();
                 if (packetdataserializer.readBoolean()) {
                     ichatbasecomponent = packetdataserializer.d();
@@ -73,7 +75,7 @@
 
             case 2:
                 gameprofile = new GameProfile(packetdataserializer.g(), (String) null);
-                enumgamemode = EnumGamemode.getById(packetdataserializer.e());
+                worldsettings_enumgamemode = WorldSettings.EnumGamemode.getById(packetdataserializer.e());
                 break;
 
             case 3:
@@ -92,25 +94,25 @@
                 gameprofile = new GameProfile(packetdataserializer.g(), (String) null);
             }
 
-            this.b.add(new PlayerInfoData(this, gameprofile, k, enumgamemode, ichatbasecomponent));
+            this.b.add(new PacketPlayOutPlayerInfo.PlayerInfoData(gameprofile, k, worldsettings_enumgamemode, ichatbasecomponent));
         }
 
     }
 
-    public void b(PacketDataSerializer packetdataserializer) {
+    public void b(PacketDataSerializer packetdataserializer) throws IOException {
         packetdataserializer.a((Enum) this.a);
         packetdataserializer.b(this.b.size());
         Iterator iterator = this.b.iterator();
 
         while (iterator.hasNext()) {
-            PlayerInfoData playerinfodata = (PlayerInfoData) iterator.next();
+            PacketPlayOutPlayerInfo.PlayerInfoData packetplayoutplayerinfo_playerinfodata = (PacketPlayOutPlayerInfo.PlayerInfoData) iterator.next();
 
-            switch (SwitchHelperPlayerInfo.a[this.a.ordinal()]) {
+            switch (PacketPlayOutPlayerInfo.SyntheticClass_1.a[this.a.ordinal()]) {
             case 1:
-                packetdataserializer.a(playerinfodata.a().getId());
-                packetdataserializer.a(playerinfodata.a().getName());
-                packetdataserializer.b(playerinfodata.a().getProperties().size());
-                Iterator iterator1 = playerinfodata.a().getProperties().values().iterator();
+                packetdataserializer.a(packetplayoutplayerinfo_playerinfodata.a().getId());
+                packetdataserializer.a(packetplayoutplayerinfo_playerinfodata.a().getName());
+                packetdataserializer.b(packetplayoutplayerinfo_playerinfodata.a().getProperties().size());
+                Iterator iterator1 = packetplayoutplayerinfo_playerinfodata.a().getProperties().values().iterator();
 
                 while (iterator1.hasNext()) {
                     Property property = (Property) iterator1.next();
@@ -125,38 +127,38 @@
                     }
                 }
 
-                packetdataserializer.b(playerinfodata.c().getId());
-                packetdataserializer.b(playerinfodata.b());
-                if (playerinfodata.d() == null) {
+                packetdataserializer.b(packetplayoutplayerinfo_playerinfodata.c().getId());
+                packetdataserializer.b(packetplayoutplayerinfo_playerinfodata.b());
+                if (packetplayoutplayerinfo_playerinfodata.d() == null) {
                     packetdataserializer.writeBoolean(false);
                 } else {
                     packetdataserializer.writeBoolean(true);
-                    packetdataserializer.a(playerinfodata.d());
+                    packetdataserializer.a(packetplayoutplayerinfo_playerinfodata.d());
                 }
                 break;
 
             case 2:
-                packetdataserializer.a(playerinfodata.a().getId());
-                packetdataserializer.b(playerinfodata.c().getId());
+                packetdataserializer.a(packetplayoutplayerinfo_playerinfodata.a().getId());
+                packetdataserializer.b(packetplayoutplayerinfo_playerinfodata.c().getId());
                 break;
 
             case 3:
-                packetdataserializer.a(playerinfodata.a().getId());
-                packetdataserializer.b(playerinfodata.b());
+                packetdataserializer.a(packetplayoutplayerinfo_playerinfodata.a().getId());
+                packetdataserializer.b(packetplayoutplayerinfo_playerinfodata.b());
                 break;
 
             case 4:
-                packetdataserializer.a(playerinfodata.a().getId());
-                if (playerinfodata.d() == null) {
+                packetdataserializer.a(packetplayoutplayerinfo_playerinfodata.a().getId());
+                if (packetplayoutplayerinfo_playerinfodata.d() == null) {
                     packetdataserializer.writeBoolean(false);
                 } else {
                     packetdataserializer.writeBoolean(true);
-                    packetdataserializer.a(playerinfodata.d());
+                    packetdataserializer.a(packetplayoutplayerinfo_playerinfodata.d());
                 }
                 break;
 
             case 5:
-                packetdataserializer.a(playerinfodata.a().getId());
+                packetdataserializer.a(packetplayoutplayerinfo_playerinfodata.a().getId());
             }
         }
 
@@ -166,7 +168,91 @@
         packetlistenerplayout.a(this);
     }
 
+    public String toString() {
+        return Objects.toStringHelper(this).add("action", this.a).add("entries", this.b).toString();
+    }
+
     public void a(PacketListener packetlistener) {
         this.a((PacketListenerPlayOut) packetlistener);
     }
+
+    static class SyntheticClass_1 {
+
+        static final int[] a = new int[PacketPlayOutPlayerInfo.EnumPlayerInfoAction.values().length];
+
+        static {
+            try {
+                PacketPlayOutPlayerInfo.SyntheticClass_1.a[PacketPlayOutPlayerInfo.EnumPlayerInfoAction.ADD_PLAYER.ordinal()] = 1;
+            } catch (NoSuchFieldError nosuchfielderror) {
+                ;
+            }
+
+            try {
+                PacketPlayOutPlayerInfo.SyntheticClass_1.a[PacketPlayOutPlayerInfo.EnumPlayerInfoAction.UPDATE_GAME_MODE.ordinal()] = 2;
+            } catch (NoSuchFieldError nosuchfielderror1) {
+                ;
+            }
+
+            try {
+                PacketPlayOutPlayerInfo.SyntheticClass_1.a[PacketPlayOutPlayerInfo.EnumPlayerInfoAction.UPDATE_LATENCY.ordinal()] = 3;
+            } catch (NoSuchFieldError nosuchfielderror2) {
+                ;
+            }
+
+            try {
+                PacketPlayOutPlayerInfo.SyntheticClass_1.a[PacketPlayOutPlayerInfo.EnumPlayerInfoAction.UPDATE_DISPLAY_NAME.ordinal()] = 4;
+            } catch (NoSuchFieldError nosuchfielderror3) {
+                ;
+            }
+
+            try {
+                PacketPlayOutPlayerInfo.SyntheticClass_1.a[PacketPlayOutPlayerInfo.EnumPlayerInfoAction.REMOVE_PLAYER.ordinal()] = 5;
+            } catch (NoSuchFieldError nosuchfielderror4) {
+                ;
+            }
+
+        }
+    }
+
+    public class PlayerInfoData {
+
+        private final int b;
+        private final WorldSettings.EnumGamemode c;
+        private final GameProfile d;
+        private final IChatBaseComponent e;
+
+        public PlayerInfoData(GameProfile gameprofile, int i, WorldSettings.EnumGamemode worldsettings_enumgamemode, IChatBaseComponent ichatbasecomponent) {
+            this.d = gameprofile;
+            this.b = i;
+            this.c = worldsettings_enumgamemode;
+            this.e = ichatbasecomponent;
+        }
+
+        public GameProfile a() {
+            return this.d;
+        }
+
+        public int b() {
+            return this.b;
+        }
+
+        public WorldSettings.EnumGamemode c() {
+            return this.c;
+        }
+
+        public IChatBaseComponent d() {
+            return this.e;
+        }
+
+        public String toString() {
+            return Objects.toStringHelper(this).add("latency", this.b).add("gameMode", this.c).add("profile", this.d).add("displayName", this.e == null ? null : IChatBaseComponent.ChatSerializer.a(this.e)).toString();
+        }
+    }
+
+    public static enum EnumPlayerInfoAction {
+
+        ADD_PLAYER, UPDATE_GAME_MODE, UPDATE_LATENCY, UPDATE_DISPLAY_NAME, REMOVE_PLAYER;
+
+        private EnumPlayerInfoAction() {}
+    }
 }
