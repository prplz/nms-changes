--- a/net/minecraft/server/PacketPlayOutUpdateAttributes.java
+++ b/net/minecraft/server/PacketPlayOutUpdateAttributes.java
@@ -1,32 +1,33 @@
 package net.minecraft.server;
 
 import com.google.common.collect.Lists;
+import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Iterator;
 import java.util.List;
 import java.util.UUID;
 
-public class PacketPlayOutUpdateAttributes implements Packet {
+public class PacketPlayOutUpdateAttributes implements Packet<PacketListenerPlayOut> {
 
     private int a;
-    private final List b = Lists.newArrayList();
+    private final List<PacketPlayOutUpdateAttributes.AttributeSnapshot> b = Lists.newArrayList();
 
     public PacketPlayOutUpdateAttributes() {}
 
-    public PacketPlayOutUpdateAttributes(int i, Collection collection) {
+    public PacketPlayOutUpdateAttributes(int i, Collection<AttributeInstance> collection) {
         this.a = i;
         Iterator iterator = collection.iterator();
 
         while (iterator.hasNext()) {
             AttributeInstance attributeinstance = (AttributeInstance) iterator.next();
 
-            this.b.add(new AttributeSnapshot(this, attributeinstance.getAttribute().getName(), attributeinstance.b(), attributeinstance.c()));
+            this.b.add(new PacketPlayOutUpdateAttributes.AttributeSnapshot(attributeinstance.getAttribute().getName(), attributeinstance.b(), attributeinstance.c()));
         }
 
     }
 
-    public void a(PacketDataSerializer packetdataserializer) {
+    public void a(PacketDataSerializer packetdataserializer) throws IOException {
         this.a = packetdataserializer.e();
         int i = packetdataserializer.readInt();
 
@@ -42,23 +43,23 @@
                 arraylist.add(new AttributeModifier(uuid, "Unknown synced attribute modifier", packetdataserializer.readDouble(), packetdataserializer.readByte()));
             }
 
-            this.b.add(new AttributeSnapshot(this, s, d0, arraylist));
+            this.b.add(new PacketPlayOutUpdateAttributes.AttributeSnapshot(s, d0, arraylist));
         }
 
     }
 
-    public void b(PacketDataSerializer packetdataserializer) {
+    public void b(PacketDataSerializer packetdataserializer) throws IOException {
         packetdataserializer.b(this.a);
         packetdataserializer.writeInt(this.b.size());
         Iterator iterator = this.b.iterator();
 
         while (iterator.hasNext()) {
-            AttributeSnapshot attributesnapshot = (AttributeSnapshot) iterator.next();
+            PacketPlayOutUpdateAttributes.AttributeSnapshot packetplayoutupdateattributes_attributesnapshot = (PacketPlayOutUpdateAttributes.AttributeSnapshot) iterator.next();
 
-            packetdataserializer.a(attributesnapshot.a());
-            packetdataserializer.writeDouble(attributesnapshot.b());
-            packetdataserializer.b(attributesnapshot.c().size());
-            Iterator iterator1 = attributesnapshot.c().iterator();
+            packetdataserializer.a(packetplayoutupdateattributes_attributesnapshot.a());
+            packetdataserializer.writeDouble(packetplayoutupdateattributes_attributesnapshot.b());
+            packetdataserializer.b(packetplayoutupdateattributes_attributesnapshot.c().size());
+            Iterator iterator1 = packetplayoutupdateattributes_attributesnapshot.c().iterator();
 
             while (iterator1.hasNext()) {
                 AttributeModifier attributemodifier = (AttributeModifier) iterator1.next();
@@ -78,4 +79,29 @@
     public void a(PacketListener packetlistener) {
         this.a((PacketListenerPlayOut) packetlistener);
     }
+
+    public class AttributeSnapshot {
+
+        private final String b;
+        private final double c;
+        private final Collection<AttributeModifier> d;
+
+        public AttributeSnapshot(String s, double d0, Collection collection) {
+            this.b = s;
+            this.c = d0;
+            this.d = collection;
+        }
+
+        public String a() {
+            return this.b;
+        }
+
+        public double b() {
+            return this.c;
+        }
+
+        public Collection<AttributeModifier> c() {
+            return this.d;
+        }
+    }
 }
