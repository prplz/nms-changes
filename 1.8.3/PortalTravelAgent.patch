--- a/net/minecraft/server/PortalTravelAgent.java
+++ b/net/minecraft/server/PortalTravelAgent.java
@@ -9,8 +9,8 @@
 
     private final WorldServer a;
     private final Random b;
-    private final LongHashMap c = new LongHashMap();
-    private final List d = Lists.newArrayList();
+    private final LongHashMap<PortalTravelAgent.ChunkCoordinatesPortal> c = new LongHashMap();
+    private final List<Long> d = Lists.newArrayList();
 
     public PortalTravelAgent(WorldServer worldserver) {
         this.a = worldserver;
@@ -58,11 +58,11 @@
         long k = ChunkCoordIntPair.a(i, j);
 
         if (this.c.contains(k)) {
-            ChunkCoordinatesPortal chunkcoordinatesportal = (ChunkCoordinatesPortal) this.c.getEntry(k);
+            PortalTravelAgent.ChunkCoordinatesPortal portaltravelagent_chunkcoordinatesportal = (PortalTravelAgent.ChunkCoordinatesPortal) this.c.getEntry(k);
 
             d0 = 0.0D;
-            object = chunkcoordinatesportal;
-            chunkcoordinatesportal.b = this.a.getTime();
+            object = portaltravelagent_chunkcoordinatesportal;
+            portaltravelagent_chunkcoordinatesportal.c = this.a.getTime();
             flag1 = false;
         } else {
             BlockPosition blockposition = new BlockPosition(entity);
@@ -92,94 +92,55 @@
 
         if (d0 >= 0.0D) {
             if (flag1) {
-                this.c.put(k, new ChunkCoordinatesPortal(this, (BlockPosition) object, this.a.getTime()));
+                this.c.put(k, new PortalTravelAgent.ChunkCoordinatesPortal((BlockPosition) object, this.a.getTime()));
                 this.d.add(Long.valueOf(k));
             }
 
             double d2 = (double) ((BlockPosition) object).getX() + 0.5D;
             double d3 = (double) ((BlockPosition) object).getY() + 0.5D;
             double d4 = (double) ((BlockPosition) object).getZ() + 0.5D;
-            EnumDirection enumdirection = null;
-
-            if (this.a.getType(((BlockPosition) object).west()).getBlock() == Blocks.PORTAL) {
-                enumdirection = EnumDirection.NORTH;
-            }
-
-            if (this.a.getType(((BlockPosition) object).east()).getBlock() == Blocks.PORTAL) {
-                enumdirection = EnumDirection.SOUTH;
+            ShapeDetector.ShapeDetectorCollection shapedetector_shapedetectorcollection = Blocks.PORTAL.f(this.a, (BlockPosition) object);
+            boolean flag2 = shapedetector_shapedetectorcollection.b().e().c() == EnumDirection.EnumAxisDirection.NEGATIVE;
+            double d5 = shapedetector_shapedetectorcollection.b().k() == EnumDirection.EnumAxis.X ? (double) shapedetector_shapedetectorcollection.a().getZ() : (double) shapedetector_shapedetectorcollection.a().getX();
+
+            d3 = (double) (shapedetector_shapedetectorcollection.a().getY() + 1) - entity.aG().b * (double) shapedetector_shapedetectorcollection.e();
+            if (flag2) {
+                ++d5;
             }
 
-            if (this.a.getType(((BlockPosition) object).north()).getBlock() == Blocks.PORTAL) {
-                enumdirection = EnumDirection.EAST;
-            }
-
-            if (this.a.getType(((BlockPosition) object).south()).getBlock() == Blocks.PORTAL) {
-                enumdirection = EnumDirection.WEST;
+            if (shapedetector_shapedetectorcollection.b().k() == EnumDirection.EnumAxis.X) {
+                d2 += (double) shapedetector_shapedetectorcollection.b().getAdjacentX();
+                d4 = d5 + (1.0D - entity.aG().a) * (double) shapedetector_shapedetectorcollection.d() * (double) shapedetector_shapedetectorcollection.b().e().c().a();
+            } else {
+                d2 = d5 + (1.0D - entity.aG().a) * (double) shapedetector_shapedetectorcollection.d() * (double) shapedetector_shapedetectorcollection.b().e().c().a();
+                d4 += (double) shapedetector_shapedetectorcollection.b().getAdjacentZ();
             }
 
-            EnumDirection enumdirection1 = EnumDirection.fromType2(entity.aG());
-
-            if (enumdirection != null) {
-                EnumDirection enumdirection2 = enumdirection.f();
-                BlockPosition blockposition3 = ((BlockPosition) object).shift(enumdirection);
-                boolean flag2 = this.a(blockposition3);
-                boolean flag3 = this.a(blockposition3.shift(enumdirection2));
-
-                if (flag3 && flag2) {
-                    object = ((BlockPosition) object).shift(enumdirection2);
-                    enumdirection = enumdirection.opposite();
-                    enumdirection2 = enumdirection2.opposite();
-                    BlockPosition blockposition4 = ((BlockPosition) object).shift(enumdirection);
-
-                    flag2 = this.a(blockposition4);
-                    flag3 = this.a(blockposition4.shift(enumdirection2));
-                }
-
-                float f1 = 0.5F;
-                float f2 = 0.5F;
-
-                if (!flag3 && flag2) {
-                    f1 = 1.0F;
-                } else if (flag3 && !flag2) {
-                    f1 = 0.0F;
-                } else if (flag3) {
-                    f2 = 0.0F;
-                }
-
-                d2 = (double) ((BlockPosition) object).getX() + 0.5D;
-                d3 = (double) ((BlockPosition) object).getY() + 0.5D;
-                d4 = (double) ((BlockPosition) object).getZ() + 0.5D;
-                d2 += (double) ((float) enumdirection2.getAdjacentX() * f1 + (float) enumdirection.getAdjacentX() * f2);
-                d4 += (double) ((float) enumdirection2.getAdjacentZ() * f1 + (float) enumdirection.getAdjacentZ() * f2);
-                float f3 = 0.0F;
-                float f4 = 0.0F;
-                float f5 = 0.0F;
-                float f6 = 0.0F;
-
-                if (enumdirection == enumdirection1) {
-                    f3 = 1.0F;
-                    f4 = 1.0F;
-                } else if (enumdirection == enumdirection1.opposite()) {
-                    f3 = -1.0F;
-                    f4 = -1.0F;
-                } else if (enumdirection == enumdirection1.e()) {
-                    f5 = 1.0F;
-                    f6 = -1.0F;
-                } else {
-                    f5 = -1.0F;
-                    f6 = 1.0F;
-                }
-
-                double d5 = entity.motX;
-                double d6 = entity.motZ;
-
-                entity.motX = d5 * (double) f3 + d6 * (double) f6;
-                entity.motZ = d5 * (double) f5 + d6 * (double) f4;
-                entity.yaw = f - (float) (enumdirection1.b() * 90) + (float) (enumdirection.b() * 90);
+            float f1 = 0.0F;
+            float f2 = 0.0F;
+            float f3 = 0.0F;
+            float f4 = 0.0F;
+
+            if (shapedetector_shapedetectorcollection.b().opposite() == entity.aH()) {
+                f1 = 1.0F;
+                f2 = 1.0F;
+            } else if (shapedetector_shapedetectorcollection.b().opposite() == entity.aH().opposite()) {
+                f1 = -1.0F;
+                f2 = -1.0F;
+            } else if (shapedetector_shapedetectorcollection.b().opposite() == entity.aH().e()) {
+                f3 = 1.0F;
+                f4 = -1.0F;
             } else {
-                entity.motX = entity.motY = entity.motZ = 0.0D;
+                f3 = -1.0F;
+                f4 = 1.0F;
             }
 
+            double d6 = entity.motX;
+            double d7 = entity.motZ;
+
+            entity.motX = d6 * (double) f1 + d7 * (double) f4;
+            entity.motZ = d6 * (double) f3 + d7 * (double) f2;
+            entity.yaw = f - (float) (entity.aH().opposite().b() * 90) + (float) (shapedetector_shapedetectorcollection.b().b() * 90);
             entity.setPositionRotation(d2, d3, d4, entity.yaw, entity.pitch);
             return true;
         } else {
@@ -187,10 +148,6 @@
         }
     }
 
-    private boolean a(BlockPosition blockposition) {
-        return !this.a.isEmpty(blockposition) || !this.a.isEmpty(blockposition.up());
-    }
-
     public boolean a(Entity entity) {
         byte b0 = 16;
         double d0 = -1.0D;
@@ -202,6 +159,7 @@
         int j1 = k;
         int k1 = 0;
         int l1 = this.b.nextInt(4);
+        BlockPosition.MutableBlockPosition blockposition_mutableblockposition = new BlockPosition.MutableBlockPosition();
 
         int i2;
         double d1;
@@ -227,8 +185,8 @@
 
                 label271:
                 for (k2 = this.a.V() - 1; k2 >= 0; --k2) {
-                    if (this.a.isEmpty(new BlockPosition(i2, k2, j2))) {
-                        while (k2 > 0 && this.a.isEmpty(new BlockPosition(i2, k2 - 1, j2))) {
+                    if (this.a.isEmpty(blockposition_mutableblockposition.c(i2, k2, j2))) {
+                        while (k2 > 0 && this.a.isEmpty(blockposition_mutableblockposition.c(i2, k2 - 1, j2))) {
                             --k2;
                         }
 
@@ -247,7 +205,8 @@
                                         k4 = k2 + i4;
                                         int l4 = j2 + (l3 - 1) * j3 - k3 * i3;
 
-                                        if (i4 < 0 && !this.a.getType(new BlockPosition(j4, k4, l4)).getBlock().getMaterial().isBuildable() || i4 >= 0 && !this.a.isEmpty(new BlockPosition(j4, k4, l4))) {
+                                        blockposition_mutableblockposition.c(j4, k4, l4);
+                                        if (i4 < 0 && !this.a.getType(blockposition_mutableblockposition).getBlock().getMaterial().isBuildable() || i4 >= 0 && !this.a.isEmpty(blockposition_mutableblockposition)) {
                                             continue label271;
                                         }
                                     }
@@ -278,8 +237,8 @@
 
                     label219:
                     for (k2 = this.a.V() - 1; k2 >= 0; --k2) {
-                        if (this.a.isEmpty(new BlockPosition(i2, k2, j2))) {
-                            while (k2 > 0 && this.a.isEmpty(new BlockPosition(i2, k2 - 1, j2))) {
+                        if (this.a.isEmpty(blockposition_mutableblockposition.c(i2, k2, j2))) {
+                            while (k2 > 0 && this.a.isEmpty(blockposition_mutableblockposition.c(i2, k2 - 1, j2))) {
                                 --k2;
                             }
 
@@ -292,7 +251,8 @@
                                         i4 = i2 + (k3 - 1) * i3;
                                         j4 = k2 + l3;
                                         k4 = j2 + (k3 - 1) * j3;
-                                        if (l3 < 0 && !this.a.getType(new BlockPosition(i4, j4, k4)).getBlock().getMaterial().isBuildable() || l3 >= 0 && !this.a.isEmpty(new BlockPosition(i4, j4, k4))) {
+                                        blockposition_mutableblockposition.c(i4, j4, k4);
+                                        if (l3 < 0 && !this.a.getType(blockposition_mutableblockposition).getBlock().getMaterial().isBuildable() || l3 >= 0 && !this.a.isEmpty(blockposition_mutableblockposition)) {
                                             continue label219;
                                         }
                                     }
@@ -344,7 +304,7 @@
             }
         }
 
-        IBlockData iblockdata = Blocks.PORTAL.getBlockData().set(BlockPortal.AXIS, k5 != 0 ? EnumAxis.X : EnumAxis.Z);
+        IBlockData iblockdata = Blocks.PORTAL.getBlockData().set(BlockPortal.AXIS, k5 != 0 ? EnumDirection.EnumAxis.X : EnumDirection.EnumAxis.Z);
 
         for (l2 = 0; l2 < 4; ++l2) {
             for (i3 = 0; i3 < 4; ++i3) {
@@ -363,7 +323,9 @@
                     k3 = i5 + (i3 - 1) * k5;
                     l3 = j5 + j3;
                     i4 = j2 + (i3 - 1) * l5;
-                    this.a.applyPhysics(new BlockPosition(k3, l3, i4), this.a.getType(new BlockPosition(k3, l3, i4)).getBlock());
+                    BlockPosition blockposition = new BlockPosition(k3, l3, i4);
+
+                    this.a.applyPhysics(blockposition, this.a.getType(blockposition).getBlock());
                 }
             }
         }
@@ -374,13 +336,13 @@
     public void a(long i) {
         if (i % 100L == 0L) {
             Iterator iterator = this.d.iterator();
-            long j = i - 600L;
+            long j = i - 300L;
 
             while (iterator.hasNext()) {
                 Long olong = (Long) iterator.next();
-                ChunkCoordinatesPortal chunkcoordinatesportal = (ChunkCoordinatesPortal) this.c.getEntry(olong.longValue());
+                PortalTravelAgent.ChunkCoordinatesPortal portaltravelagent_chunkcoordinatesportal = (PortalTravelAgent.ChunkCoordinatesPortal) this.c.getEntry(olong.longValue());
 
-                if (chunkcoordinatesportal == null || chunkcoordinatesportal.b < j) {
+                if (portaltravelagent_chunkcoordinatesportal == null || portaltravelagent_chunkcoordinatesportal.c < j) {
                     iterator.remove();
                     this.c.remove(olong.longValue());
                 }
@@ -388,4 +350,14 @@
         }
 
     }
+
+    public class ChunkCoordinatesPortal extends BlockPosition {
+
+        public long c;
+
+        public ChunkCoordinatesPortal(BlockPosition blockposition, long i) {
+            super(blockposition.getX(), blockposition.getY(), blockposition.getZ());
+            this.c = i;
+        }
+    }
 }
