--- a/net/minecraft/server/WorldGenLargeFeature.java
+++ b/net/minecraft/server/WorldGenLargeFeature.java
@@ -10,8 +10,8 @@
 
 public class WorldGenLargeFeature extends StructureGenerator {
 
-    private static final List d = Arrays.asList(new BiomeBase[] { BiomeBase.DESERT, BiomeBase.DESERT_HILLS, BiomeBase.JUNGLE, BiomeBase.JUNGLE_HILLS, BiomeBase.SWAMPLAND});
-    private List f;
+    private static final List<BiomeBase> d = Arrays.asList(new BiomeBase[] { BiomeBase.DESERT, BiomeBase.DESERT_HILLS, BiomeBase.JUNGLE, BiomeBase.JUNGLE_HILLS, BiomeBase.SWAMPLAND});
+    private List<BiomeBase.BiomeMeta> f;
     private int g;
     private int h;
 
@@ -19,10 +19,10 @@
         this.f = Lists.newArrayList();
         this.g = 32;
         this.h = 8;
-        this.f.add(new BiomeMeta(EntityWitch.class, 1, 1, 1));
+        this.f.add(new BiomeBase.BiomeMeta(EntityWitch.class, 1, 1, 1));
     }
 
-    public WorldGenLargeFeature(Map map) {
+    public WorldGenLargeFeature(Map<String, String> map) {
         this();
         Iterator iterator = map.entrySet().iterator();
 
@@ -82,22 +82,50 @@
     }
 
     protected StructureStart b(int i, int j) {
-        return new WorldGenLargeFeatureStart(this.c, this.b, i, j);
+        return new WorldGenLargeFeature.WorldGenLargeFeatureStart(this.c, this.b, i, j);
     }
 
     public boolean a(BlockPosition blockposition) {
         StructureStart structurestart = this.c(blockposition);
 
-        if (structurestart != null && structurestart instanceof WorldGenLargeFeatureStart && !structurestart.a.isEmpty()) {
+        if (structurestart != null && structurestart instanceof WorldGenLargeFeature.WorldGenLargeFeatureStart && !structurestart.a.isEmpty()) {
             StructurePiece structurepiece = (StructurePiece) structurestart.a.getFirst();
 
-            return structurepiece instanceof WorldGenWitchHut;
+            return structurepiece instanceof WorldGenRegistration.WorldGenWitchHut;
         } else {
             return false;
         }
     }
 
-    public List b() {
+    public List<BiomeBase.BiomeMeta> b() {
         return this.f;
     }
+
+    public static class WorldGenLargeFeatureStart extends StructureStart {
+
+        public WorldGenLargeFeatureStart() {}
+
+        public WorldGenLargeFeatureStart(World world, Random random, int i, int j) {
+            super(i, j);
+            BiomeBase biomebase = world.getBiome(new BlockPosition(i * 16 + 8, 0, j * 16 + 8));
+
+            if (biomebase != BiomeBase.JUNGLE && biomebase != BiomeBase.JUNGLE_HILLS) {
+                if (biomebase == BiomeBase.SWAMPLAND) {
+                    WorldGenRegistration.WorldGenWitchHut worldgenregistration_worldgenwitchhut = new WorldGenRegistration.WorldGenWitchHut(random, i * 16, j * 16);
+
+                    this.a.add(worldgenregistration_worldgenwitchhut);
+                } else if (biomebase == BiomeBase.DESERT || biomebase == BiomeBase.DESERT_HILLS) {
+                    WorldGenRegistration.WorldGenPyramidPiece worldgenregistration_worldgenpyramidpiece = new WorldGenRegistration.WorldGenPyramidPiece(random, i * 16, j * 16);
+
+                    this.a.add(worldgenregistration_worldgenpyramidpiece);
+                }
+            } else {
+                WorldGenRegistration.WorldGenJungleTemple worldgenregistration_worldgenjungletemple = new WorldGenRegistration.WorldGenJungleTemple(random, i * 16, j * 16);
+
+                this.a.add(worldgenregistration_worldgenjungletemple);
+            }
+
+            this.c();
+        }
+    }
 }
