--- a/net/minecraft/server/EntityFishingHook.java
+++ b/net/minecraft/server/EntityFishingHook.java
@@ -5,37 +5,37 @@
 
 public class EntityFishingHook extends Entity {
 
-    private static final List d = Arrays.asList(new PossibleFishingResult[] { (new PossibleFishingResult(new ItemStack(Items.LEATHER_BOOTS), 10)).a(0.9F), new PossibleFishingResult(new ItemStack(Items.LEATHER), 10), new PossibleFishingResult(new ItemStack(Items.BONE), 10), new PossibleFishingResult(new ItemStack(Items.POTION), 10), new PossibleFishingResult(new ItemStack(Items.STRING), 5), (new PossibleFishingResult(new ItemStack(Items.FISHING_ROD), 2)).a(0.9F), new PossibleFishingResult(new ItemStack(Items.BOWL), 10), new PossibleFishingResult(new ItemStack(Items.STICK), 5), new PossibleFishingResult(new ItemStack(Items.DYE, 10, EnumColor.BLACK.getInvColorIndex()), 1), new PossibleFishingResult(new ItemStack(Blocks.TRIPWIRE_HOOK), 10), new PossibleFishingResult(new ItemStack(Items.ROTTEN_FLESH), 10)});
-    private static final List e = Arrays.asList(new PossibleFishingResult[] { new PossibleFishingResult(new ItemStack(Blocks.WATERLILY), 1), new PossibleFishingResult(new ItemStack(Items.NAME_TAG), 1), new PossibleFishingResult(new ItemStack(Items.SADDLE), 1), (new PossibleFishingResult(new ItemStack(Items.BOW), 1)).a(0.25F).a(), (new PossibleFishingResult(new ItemStack(Items.FISHING_ROD), 1)).a(0.25F).a(), (new PossibleFishingResult(new ItemStack(Items.BOOK), 1)).a()});
-    private static final List f = Arrays.asList(new PossibleFishingResult[] { new PossibleFishingResult(new ItemStack(Items.FISH, 1, EnumFish.COD.a()), 60), new PossibleFishingResult(new ItemStack(Items.FISH, 1, EnumFish.SALMON.a()), 25), new PossibleFishingResult(new ItemStack(Items.FISH, 1, EnumFish.CLOWNFISH.a()), 2), new PossibleFishingResult(new ItemStack(Items.FISH, 1, EnumFish.PUFFERFISH.a()), 13)});
+    private static final List<PossibleFishingResult> d = Arrays.asList(new PossibleFishingResult[] { (new PossibleFishingResult(new ItemStack(Items.LEATHER_BOOTS), 10)).a(0.9F), new PossibleFishingResult(new ItemStack(Items.LEATHER), 10), new PossibleFishingResult(new ItemStack(Items.BONE), 10), new PossibleFishingResult(new ItemStack(Items.POTION), 10), new PossibleFishingResult(new ItemStack(Items.STRING), 5), (new PossibleFishingResult(new ItemStack(Items.FISHING_ROD), 2)).a(0.9F), new PossibleFishingResult(new ItemStack(Items.BOWL), 10), new PossibleFishingResult(new ItemStack(Items.STICK), 5), new PossibleFishingResult(new ItemStack(Items.DYE, 10, EnumColor.BLACK.getInvColorIndex()), 1), new PossibleFishingResult(new ItemStack(Blocks.TRIPWIRE_HOOK), 10), new PossibleFishingResult(new ItemStack(Items.ROTTEN_FLESH), 10)});
+    private static final List<PossibleFishingResult> e = Arrays.asList(new PossibleFishingResult[] { new PossibleFishingResult(new ItemStack(Blocks.WATERLILY), 1), new PossibleFishingResult(new ItemStack(Items.NAME_TAG), 1), new PossibleFishingResult(new ItemStack(Items.SADDLE), 1), (new PossibleFishingResult(new ItemStack(Items.BOW), 1)).a(0.25F).a(), (new PossibleFishingResult(new ItemStack(Items.FISHING_ROD), 1)).a(0.25F).a(), (new PossibleFishingResult(new ItemStack(Items.BOOK), 1)).a()});
+    private static final List<PossibleFishingResult> f = Arrays.asList(new PossibleFishingResult[] { new PossibleFishingResult(new ItemStack(Items.FISH, 1, ItemFish.EnumFish.COD.a()), 60), new PossibleFishingResult(new ItemStack(Items.FISH, 1, ItemFish.EnumFish.SALMON.a()), 25), new PossibleFishingResult(new ItemStack(Items.FISH, 1, ItemFish.EnumFish.CLOWNFISH.a()), 2), new PossibleFishingResult(new ItemStack(Items.FISH, 1, ItemFish.EnumFish.PUFFERFISH.a()), 13)});
     private int g = -1;
     private int h = -1;
     private int i = -1;
-    private Block ap;
-    private boolean aq;
+    private Block ar;
+    private boolean as;
     public int a;
     public EntityHuman owner;
-    private int ar;
-    private int as;
     private int at;
     private int au;
     private int av;
-    private float aw;
-    public Entity hooked;
+    private int aw;
     private int ax;
-    private double ay;
-    private double az;
+    private float ay;
+    public Entity hooked;
+    private int az;
     private double aA;
     private double aB;
     private double aC;
+    private double aD;
+    private double aE;
 
-    public static List j() {
+    public static List<PossibleFishingResult> j() {
         return EntityFishingHook.f;
     }
 
     public EntityFishingHook(World world) {
         super(world);
-        this.a(0.25F, 0.25F);
+        this.setSize(0.25F, 0.25F);
         this.ah = true;
     }
 
@@ -44,7 +44,7 @@
         this.ah = true;
         this.owner = entityhuman;
         this.owner.hookedFish = this;
-        this.a(0.25F, 0.25F);
+        this.setSize(0.25F, 0.25F);
         this.setPositionRotation(entityhuman.locX, entityhuman.locY + (double) entityhuman.getHeadHeight(), entityhuman.locZ, entityhuman.yaw, entityhuman.pitch);
         this.locX -= (double) (MathHelper.cos(this.yaw / 180.0F * 3.1415927F) * 0.16F);
         this.locY -= 0.10000000149011612D;
@@ -77,27 +77,27 @@
         this.motZ = d2;
         float f3 = MathHelper.sqrt(d0 * d0 + d2 * d2);
 
-        this.lastYaw = this.yaw = (float) (Math.atan2(d0, d2) * 180.0D / 3.1415927410125732D);
-        this.lastPitch = this.pitch = (float) (Math.atan2(d1, (double) f3) * 180.0D / 3.1415927410125732D);
-        this.ar = 0;
+        this.lastYaw = this.yaw = (float) (MathHelper.b(d0, d2) * 180.0D / 3.1415927410125732D);
+        this.lastPitch = this.pitch = (float) (MathHelper.b(d1, (double) f3) * 180.0D / 3.1415927410125732D);
+        this.at = 0;
     }
 
-    public void s_() {
-        super.s_();
-        if (this.ax > 0) {
-            double d0 = this.locX + (this.ay - this.locX) / (double) this.ax;
-            double d1 = this.locY + (this.az - this.locY) / (double) this.ax;
-            double d2 = this.locZ + (this.aA - this.locZ) / (double) this.ax;
-            double d3 = MathHelper.g(this.aB - (double) this.yaw);
-
-            this.yaw = (float) ((double) this.yaw + d3 / (double) this.ax);
-            this.pitch = (float) ((double) this.pitch + (this.aC - (double) this.pitch) / (double) this.ax);
-            --this.ax;
+    public void t_() {
+        super.t_();
+        if (this.az > 0) {
+            double d0 = this.locX + (this.aA - this.locX) / (double) this.az;
+            double d1 = this.locY + (this.aB - this.locY) / (double) this.az;
+            double d2 = this.locZ + (this.aC - this.locZ) / (double) this.az;
+            double d3 = MathHelper.g(this.aD - (double) this.yaw);
+
+            this.yaw = (float) ((double) this.yaw + d3 / (double) this.az);
+            this.pitch = (float) ((double) this.pitch + (this.aE - (double) this.pitch) / (double) this.az);
+            --this.az;
             this.setPosition(d0, d1, d2);
             this.setYawPitch(this.yaw, this.pitch);
         } else {
-            if (!this.world.isStatic) {
-                ItemStack itemstack = this.owner.bY();
+            if (!this.world.isClientSide) {
+                ItemStack itemstack = this.owner.bZ();
 
                 if (this.owner.dead || !this.owner.isAlive() || itemstack == null || itemstack.getItem() != Items.FISHING_ROD || this.h(this.owner) > 1024.0D) {
                     this.die();
@@ -123,24 +123,24 @@
                 --this.a;
             }
 
-            if (this.aq) {
-                if (this.world.getType(new BlockPosition(this.g, this.h, this.i)).getBlock() == this.ap) {
-                    ++this.ar;
-                    if (this.ar == 1200) {
+            if (this.as) {
+                if (this.world.getType(new BlockPosition(this.g, this.h, this.i)).getBlock() == this.ar) {
+                    ++this.at;
+                    if (this.at == 1200) {
                         this.die();
                     }
 
                     return;
                 }
 
-                this.aq = false;
+                this.as = false;
                 this.motX *= (double) (this.random.nextFloat() * 0.2F);
                 this.motY *= (double) (this.random.nextFloat() * 0.2F);
                 this.motZ *= (double) (this.random.nextFloat() * 0.2F);
-                this.ar = 0;
-                this.as = 0;
+                this.at = 0;
+                this.au = 0;
             } else {
-                ++this.as;
+                ++this.au;
             }
 
             Vec3D vec3d = new Vec3D(this.locX, this.locY, this.locZ);
@@ -162,13 +162,13 @@
             for (int i = 0; i < list.size(); ++i) {
                 Entity entity1 = (Entity) list.get(i);
 
-                if (entity1.ad() && (entity1 != this.owner || this.as >= 5)) {
+                if (entity1.ad() && (entity1 != this.owner || this.au >= 5)) {
                     float f = 0.3F;
                     AxisAlignedBB axisalignedbb = entity1.getBoundingBox().grow((double) f, (double) f, (double) f);
                     MovingObjectPosition movingobjectposition1 = axisalignedbb.a(vec3d, vec3d1);
 
                     if (movingobjectposition1 != null) {
-                        d6 = vec3d.f(movingobjectposition1.pos);
+                        d6 = vec3d.distanceSquared(movingobjectposition1.pos);
                         if (d6 < d5 || d5 == 0.0D) {
                             entity = entity1;
                             d5 = d6;
@@ -187,17 +187,17 @@
                         this.hooked = movingobjectposition.entity;
                     }
                 } else {
-                    this.aq = true;
+                    this.as = true;
                 }
             }
 
-            if (!this.aq) {
+            if (!this.as) {
                 this.move(this.motX, this.motY, this.motZ);
                 float f1 = MathHelper.sqrt(this.motX * this.motX + this.motZ * this.motZ);
 
-                this.yaw = (float) (Math.atan2(this.motX, this.motZ) * 180.0D / 3.1415927410125732D);
+                this.yaw = (float) (MathHelper.b(this.motX, this.motZ) * 180.0D / 3.1415927410125732D);
 
-                for (this.pitch = (float) (Math.atan2(this.motY, (double) f1) * 180.0D / 3.1415927410125732D); this.pitch - this.lastPitch < -180.0F; this.lastPitch -= 360.0F) {
+                for (this.pitch = (float) (MathHelper.b(this.motY, (double) f1) * 180.0D / 3.1415927410125732D); this.pitch - this.lastPitch < -180.0F; this.lastPitch -= 360.0F) {
                     ;
                 }
 
@@ -239,7 +239,7 @@
                     }
                 }
 
-                if (!this.world.isStatic && d7 > 0.0D) {
+                if (!this.world.isClientSide && d7 > 0.0D) {
                     WorldServer worldserver = (WorldServer) this.world;
                     int k = 1;
                     BlockPosition blockposition = (new BlockPosition(this)).up();
@@ -252,55 +252,59 @@
                         --k;
                     }
 
-                    if (this.at > 0) {
-                        --this.at;
-                        if (this.at <= 0) {
-                            this.au = 0;
-                            this.av = 0;
+                    if (this.av > 0) {
+                        --this.av;
+                        if (this.av <= 0) {
+                            this.aw = 0;
+                            this.ax = 0;
                         }
                     } else {
                         float f3;
                         float f4;
                         double d11;
+                        Block block;
                         float f5;
                         double d12;
 
-                        if (this.av > 0) {
-                            this.av -= k;
-                            if (this.av <= 0) {
+                        if (this.ax > 0) {
+                            this.ax -= k;
+                            if (this.ax <= 0) {
                                 this.motY -= 0.20000000298023224D;
                                 this.makeSound("random.splash", 0.25F, 1.0F + (this.random.nextFloat() - this.random.nextFloat()) * 0.4F);
                                 f3 = (float) MathHelper.floor(this.getBoundingBox().b);
                                 worldserver.a(EnumParticle.WATER_BUBBLE, this.locX, (double) (f3 + 1.0F), this.locZ, (int) (1.0F + this.width * 20.0F), (double) this.width, 0.0D, (double) this.width, 0.20000000298023224D, new int[0]);
                                 worldserver.a(EnumParticle.WATER_WAKE, this.locX, (double) (f3 + 1.0F), this.locZ, (int) (1.0F + this.width * 20.0F), (double) this.width, 0.0D, (double) this.width, 0.20000000298023224D, new int[0]);
-                                this.at = MathHelper.nextInt(this.random, 10, 30);
+                                this.av = MathHelper.nextInt(this.random, 10, 30);
                             } else {
-                                this.aw = (float) ((double) this.aw + this.random.nextGaussian() * 4.0D);
-                                f3 = this.aw * 0.017453292F;
+                                this.ay = (float) ((double) this.ay + this.random.nextGaussian() * 4.0D);
+                                f3 = this.ay * 0.017453292F;
                                 f5 = MathHelper.sin(f3);
                                 f4 = MathHelper.cos(f3);
-                                d8 = this.locX + (double) (f5 * (float) this.av * 0.1F);
+                                d8 = this.locX + (double) (f5 * (float) this.ax * 0.1F);
                                 d12 = (double) ((float) MathHelper.floor(this.getBoundingBox().b) + 1.0F);
-                                d11 = this.locZ + (double) (f4 * (float) this.av * 0.1F);
-                                if (this.random.nextFloat() < 0.15F) {
-                                    worldserver.a(EnumParticle.WATER_BUBBLE, d8, d12 - 0.10000000149011612D, d11, 1, (double) f5, 0.1D, (double) f4, 0.0D, new int[0]);
-                                }
+                                d11 = this.locZ + (double) (f4 * (float) this.ax * 0.1F);
+                                block = worldserver.getType(new BlockPosition((int) d8, (int) d12 - 1, (int) d11)).getBlock();
+                                if (block == Blocks.WATER || block == Blocks.FLOWING_WATER) {
+                                    if (this.random.nextFloat() < 0.15F) {
+                                        worldserver.a(EnumParticle.WATER_BUBBLE, d8, d12 - 0.10000000149011612D, d11, 1, (double) f5, 0.1D, (double) f4, 0.0D, new int[0]);
+                                    }
 
-                                float f6 = f5 * 0.04F;
-                                float f7 = f4 * 0.04F;
+                                    float f6 = f5 * 0.04F;
+                                    float f7 = f4 * 0.04F;
 
-                                worldserver.a(EnumParticle.WATER_WAKE, d8, d12, d11, 0, (double) f7, 0.01D, (double) (-f6), 1.0D, new int[0]);
-                                worldserver.a(EnumParticle.WATER_WAKE, d8, d12, d11, 0, (double) (-f7), 0.01D, (double) f6, 1.0D, new int[0]);
+                                    worldserver.a(EnumParticle.WATER_WAKE, d8, d12, d11, 0, (double) f7, 0.01D, (double) (-f6), 1.0D, new int[0]);
+                                    worldserver.a(EnumParticle.WATER_WAKE, d8, d12, d11, 0, (double) (-f7), 0.01D, (double) f6, 1.0D, new int[0]);
+                                }
                             }
-                        } else if (this.au > 0) {
-                            this.au -= k;
+                        } else if (this.aw > 0) {
+                            this.aw -= k;
                             f3 = 0.15F;
-                            if (this.au < 20) {
-                                f3 = (float) ((double) f3 + (double) (20 - this.au) * 0.05D);
-                            } else if (this.au < 40) {
-                                f3 = (float) ((double) f3 + (double) (40 - this.au) * 0.02D);
-                            } else if (this.au < 60) {
-                                f3 = (float) ((double) f3 + (double) (60 - this.au) * 0.01D);
+                            if (this.aw < 20) {
+                                f3 = (float) ((double) f3 + (double) (20 - this.aw) * 0.05D);
+                            } else if (this.aw < 40) {
+                                f3 = (float) ((double) f3 + (double) (40 - this.aw) * 0.02D);
+                            } else if (this.aw < 60) {
+                                f3 = (float) ((double) f3 + (double) (60 - this.aw) * 0.01D);
                             }
 
                             if (this.random.nextFloat() < f3) {
@@ -309,20 +313,23 @@
                                 d8 = this.locX + (double) (MathHelper.sin(f5) * f4 * 0.1F);
                                 d12 = (double) ((float) MathHelper.floor(this.getBoundingBox().b) + 1.0F);
                                 d11 = this.locZ + (double) (MathHelper.cos(f5) * f4 * 0.1F);
-                                worldserver.a(EnumParticle.WATER_SPLASH, d8, d12, d11, 2 + this.random.nextInt(2), 0.10000000149011612D, 0.0D, 0.10000000149011612D, 0.0D, new int[0]);
+                                block = worldserver.getType(new BlockPosition((int) d8, (int) d12 - 1, (int) d11)).getBlock();
+                                if (block == Blocks.WATER || block == Blocks.FLOWING_WATER) {
+                                    worldserver.a(EnumParticle.WATER_SPLASH, d8, d12, d11, 2 + this.random.nextInt(2), 0.10000000149011612D, 0.0D, 0.10000000149011612D, 0.0D, new int[0]);
+                                }
                             }
 
-                            if (this.au <= 0) {
-                                this.aw = MathHelper.a(this.random, 0.0F, 360.0F);
-                                this.av = MathHelper.nextInt(this.random, 20, 80);
+                            if (this.aw <= 0) {
+                                this.ay = MathHelper.a(this.random, 0.0F, 360.0F);
+                                this.ax = MathHelper.nextInt(this.random, 20, 80);
                             }
                         } else {
-                            this.au = MathHelper.nextInt(this.random, 100, 900);
-                            this.au -= EnchantmentManager.h(this.owner) * 20 * 5;
+                            this.aw = MathHelper.nextInt(this.random, 100, 900);
+                            this.aw -= EnchantmentManager.h(this.owner) * 20 * 5;
                         }
                     }
 
-                    if (this.at > 0) {
+                    if (this.av > 0) {
                         this.motY -= (double) (this.random.nextFloat() * this.random.nextFloat() * this.random.nextFloat()) * 0.2D;
                     }
                 }
@@ -346,11 +353,11 @@
         nbttagcompound.setShort("xTile", (short) this.g);
         nbttagcompound.setShort("yTile", (short) this.h);
         nbttagcompound.setShort("zTile", (short) this.i);
-        MinecraftKey minecraftkey = (MinecraftKey) Block.REGISTRY.c(this.ap);
+        MinecraftKey minecraftkey = (MinecraftKey) Block.REGISTRY.c(this.ar);
 
         nbttagcompound.setString("inTile", minecraftkey == null ? "" : minecraftkey.toString());
         nbttagcompound.setByte("shake", (byte) this.a);
-        nbttagcompound.setByte("inGround", (byte) (this.aq ? 1 : 0));
+        nbttagcompound.setByte("inGround", (byte) (this.as ? 1 : 0));
     }
 
     public void a(NBTTagCompound nbttagcompound) {
@@ -358,17 +365,17 @@
         this.h = nbttagcompound.getShort("yTile");
         this.i = nbttagcompound.getShort("zTile");
         if (nbttagcompound.hasKeyOfType("inTile", 8)) {
-            this.ap = Block.getByName(nbttagcompound.getString("inTile"));
+            this.ar = Block.getByName(nbttagcompound.getString("inTile"));
         } else {
-            this.ap = Block.getById(nbttagcompound.getByte("inTile") & 255);
+            this.ar = Block.getById(nbttagcompound.getByte("inTile") & 255);
         }
 
         this.a = nbttagcompound.getByte("shake") & 255;
-        this.aq = nbttagcompound.getByte("inGround") == 1;
+        this.as = nbttagcompound.getByte("inGround") == 1;
     }
 
     public int l() {
-        if (this.world.isStatic) {
+        if (this.world.isClientSide) {
             return 0;
         } else {
             byte b0 = 0;
@@ -384,7 +391,7 @@
                 this.hooked.motY += d1 * d4 + (double) MathHelper.sqrt(d3) * 0.08D;
                 this.hooked.motZ += d2 * d4;
                 b0 = 3;
-            } else if (this.at > 0) {
+            } else if (this.av > 0) {
                 EntityItem entityitem = new EntityItem(this.world, this.locX, this.locY, this.locZ, this.m());
                 double d5 = this.owner.locX - this.locX;
                 double d6 = this.owner.locY - this.locY;
@@ -400,7 +407,7 @@
                 b0 = 1;
             }
 
-            if (this.aq) {
+            if (this.as) {
                 b0 = 2;
             }
 
