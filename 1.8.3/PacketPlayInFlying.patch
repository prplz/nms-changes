--- a/net/minecraft/server/PacketPlayInFlying.java
+++ b/net/minecraft/server/PacketPlayInFlying.java
@@ -1,6 +1,8 @@
 package net.minecraft.server;
 
-public class PacketPlayInFlying implements Packet {
+import java.io.IOException;
+
+public class PacketPlayInFlying implements Packet<PacketListenerPlayIn> {
 
     protected double x;
     protected double y;
@@ -17,11 +19,11 @@
         packetlistenerplayin.a(this);
     }
 
-    public void a(PacketDataSerializer packetdataserializer) {
+    public void a(PacketDataSerializer packetdataserializer) throws IOException {
         this.f = packetdataserializer.readUnsignedByte() != 0;
     }
 
-    public void b(PacketDataSerializer packetdataserializer) {
+    public void b(PacketDataSerializer packetdataserializer) throws IOException {
         packetdataserializer.writeByte(this.f ? 1 : 0);
     }
 
@@ -64,4 +66,82 @@
     public void a(PacketListener packetlistener) {
         this.a((PacketListenerPlayIn) packetlistener);
     }
+
+    public static class PacketPlayInLook extends PacketPlayInFlying {
+
+        public PacketPlayInLook() {
+            this.hasLook = true;
+        }
+
+        public void a(PacketDataSerializer packetdataserializer) throws IOException {
+            this.yaw = packetdataserializer.readFloat();
+            this.pitch = packetdataserializer.readFloat();
+            super.a(packetdataserializer);
+        }
+
+        public void b(PacketDataSerializer packetdataserializer) throws IOException {
+            packetdataserializer.writeFloat(this.yaw);
+            packetdataserializer.writeFloat(this.pitch);
+            super.b(packetdataserializer);
+        }
+
+        public void a(PacketListener packetlistener) {
+            super.a((PacketListenerPlayIn) packetlistener);
+        }
+    }
+
+    public static class PacketPlayInPosition extends PacketPlayInFlying {
+
+        public PacketPlayInPosition() {
+            this.hasPos = true;
+        }
+
+        public void a(PacketDataSerializer packetdataserializer) throws IOException {
+            this.x = packetdataserializer.readDouble();
+            this.y = packetdataserializer.readDouble();
+            this.z = packetdataserializer.readDouble();
+            super.a(packetdataserializer);
+        }
+
+        public void b(PacketDataSerializer packetdataserializer) throws IOException {
+            packetdataserializer.writeDouble(this.x);
+            packetdataserializer.writeDouble(this.y);
+            packetdataserializer.writeDouble(this.z);
+            super.b(packetdataserializer);
+        }
+
+        public void a(PacketListener packetlistener) {
+            super.a((PacketListenerPlayIn) packetlistener);
+        }
+    }
+
+    public static class PacketPlayInPositionLook extends PacketPlayInFlying {
+
+        public PacketPlayInPositionLook() {
+            this.hasPos = true;
+            this.hasLook = true;
+        }
+
+        public void a(PacketDataSerializer packetdataserializer) throws IOException {
+            this.x = packetdataserializer.readDouble();
+            this.y = packetdataserializer.readDouble();
+            this.z = packetdataserializer.readDouble();
+            this.yaw = packetdataserializer.readFloat();
+            this.pitch = packetdataserializer.readFloat();
+            super.a(packetdataserializer);
+        }
+
+        public void b(PacketDataSerializer packetdataserializer) throws IOException {
+            packetdataserializer.writeDouble(this.x);
+            packetdataserializer.writeDouble(this.y);
+            packetdataserializer.writeDouble(this.z);
+            packetdataserializer.writeFloat(this.yaw);
+            packetdataserializer.writeFloat(this.pitch);
+            super.b(packetdataserializer);
+        }
+
+        public void a(PacketListener packetlistener) {
+            super.a((PacketListenerPlayIn) packetlistener);
+        }
+    }
 }
