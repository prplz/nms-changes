--- a/net/minecraft/server/PacketPlayOutMapChunkBulk.java
+++ b/net/minecraft/server/PacketPlayOutMapChunkBulk.java
@@ -1,49 +1,50 @@
 package net.minecraft.server;
 
+import java.io.IOException;
 import java.util.List;
 
-public class PacketPlayOutMapChunkBulk implements Packet {
+public class PacketPlayOutMapChunkBulk implements Packet<PacketListenerPlayOut> {
 
     private int[] a;
     private int[] b;
-    private ChunkMap[] c;
+    private PacketPlayOutMapChunk.ChunkMap[] c;
     private boolean d;
 
     public PacketPlayOutMapChunkBulk() {}
 
-    public PacketPlayOutMapChunkBulk(List list) {
+    public PacketPlayOutMapChunkBulk(List<Chunk> list) {
         int i = list.size();
 
         this.a = new int[i];
         this.b = new int[i];
-        this.c = new ChunkMap[i];
+        this.c = new PacketPlayOutMapChunk.ChunkMap[i];
         this.d = !((Chunk) list.get(0)).getWorld().worldProvider.o();
 
         for (int j = 0; j < i; ++j) {
             Chunk chunk = (Chunk) list.get(j);
-            ChunkMap chunkmap = PacketPlayOutMapChunk.a(chunk, true, this.d, '\uffff');
+            PacketPlayOutMapChunk.ChunkMap packetplayoutmapchunk_chunkmap = PacketPlayOutMapChunk.a(chunk, true, this.d, '\uffff');
 
             this.a[j] = chunk.locX;
             this.b[j] = chunk.locZ;
-            this.c[j] = chunkmap;
+            this.c[j] = packetplayoutmapchunk_chunkmap;
         }
 
     }
 
-    public void a(PacketDataSerializer packetdataserializer) {
+    public void a(PacketDataSerializer packetdataserializer) throws IOException {
         this.d = packetdataserializer.readBoolean();
         int i = packetdataserializer.e();
 
         this.a = new int[i];
         this.b = new int[i];
-        this.c = new ChunkMap[i];
+        this.c = new PacketPlayOutMapChunk.ChunkMap[i];
 
         int j;
 
         for (j = 0; j < i; ++j) {
             this.a[j] = packetdataserializer.readInt();
             this.b[j] = packetdataserializer.readInt();
-            this.c[j] = new ChunkMap();
+            this.c[j] = new PacketPlayOutMapChunk.ChunkMap();
             this.c[j].b = packetdataserializer.readShort() & '\uffff';
             this.c[j].a = new byte[PacketPlayOutMapChunk.a(Integer.bitCount(this.c[j].b), this.d, true)];
         }
@@ -54,7 +55,7 @@
 
     }
 
-    public void b(PacketDataSerializer packetdataserializer) {
+    public void b(PacketDataSerializer packetdataserializer) throws IOException {
         packetdataserializer.writeBoolean(this.d);
         packetdataserializer.b(this.c.length);
 
