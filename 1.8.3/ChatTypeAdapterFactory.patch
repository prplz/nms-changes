--- a/net/minecraft/server/ChatTypeAdapterFactory.java
+++ b/net/minecraft/server/ChatTypeAdapterFactory.java
@@ -5,6 +5,10 @@
 import com.google.gson.TypeAdapter;
 import com.google.gson.TypeAdapterFactory;
 import com.google.gson.reflect.TypeToken;
+import com.google.gson.stream.JsonReader;
+import com.google.gson.stream.JsonToken;
+import com.google.gson.stream.JsonWriter;
+import java.io.IOException;
 import java.util.HashMap;
 import java.util.Locale;
 
@@ -12,13 +16,13 @@
 
     public ChatTypeAdapterFactory() {}
 
-    public TypeAdapter create(Gson gson, TypeToken typetoken) {
+    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typetoken) {
         Class oclass = typetoken.getRawType();
 
         if (!oclass.isEnum()) {
             return null;
         } else {
-            HashMap hashmap = Maps.newHashMap();
+            final HashMap hashmap = Maps.newHashMap();
             Object[] aobject = oclass.getEnumConstants();
             int i = aobject.length;
 
@@ -28,15 +32,29 @@
                 hashmap.put(this.a(object), object);
             }
 
-            return new ChatTypeAdapter(this, hashmap);
+            return new TypeAdapter() {
+                public void write(JsonWriter jsonwriter, T t0) throws IOException {
+                    if (t0 == null) {
+                        jsonwriter.nullValue();
+                    } else {
+                        jsonwriter.value(ChatTypeAdapterFactory.this.a(t0));
+                    }
+
+                }
+
+                public T read(JsonReader jsonreader) throws IOException {
+                    if (jsonreader.peek() == JsonToken.NULL) {
+                        jsonreader.nextNull();
+                        return null;
+                    } else {
+                        return hashmap.get(jsonreader.nextString());
+                    }
+                }
+            };
         }
     }
 
     private String a(Object object) {
         return object instanceof Enum ? ((Enum) object).name().toLowerCase(Locale.US) : object.toString().toLowerCase(Locale.US);
     }
-
-    static String a(ChatTypeAdapterFactory chattypeadapterfactory, Object object) {
-        return chattypeadapterfactory.a(object);
-    }
 }
