--- a/net/minecraft/server/BlockJukeBox.java
+++ b/net/minecraft/server/BlockJukeBox.java
@@ -5,7 +5,7 @@
     public static final BlockStateBoolean HAS_RECORD = BlockStateBoolean.of("has_record");
 
     protected BlockJukeBox() {
-        super(Material.WOOD);
+        super(Material.WOOD, MaterialMapColor.l);
         this.j(this.blockStateList.getBlockData().set(BlockJukeBox.HAS_RECORD, Boolean.valueOf(false)));
         this.a(CreativeModeTab.c);
     }
@@ -22,28 +22,28 @@
     }
 
     public void a(World world, BlockPosition blockposition, IBlockData iblockdata, ItemStack itemstack) {
-        if (!world.isStatic) {
+        if (!world.isClientSide) {
             TileEntity tileentity = world.getTileEntity(blockposition);
 
-            if (tileentity instanceof TileEntityRecordPlayer) {
-                ((TileEntityRecordPlayer) tileentity).setRecord(new ItemStack(itemstack.getItem(), 1, itemstack.getData()));
+            if (tileentity instanceof BlockJukeBox.TileEntityRecordPlayer) {
+                ((BlockJukeBox.TileEntityRecordPlayer) tileentity).setRecord(new ItemStack(itemstack.getItem(), 1, itemstack.getData()));
                 world.setTypeAndData(blockposition, iblockdata.set(BlockJukeBox.HAS_RECORD, Boolean.valueOf(true)), 2);
             }
         }
     }
 
-    public void dropRecord(World world, BlockPosition blockposition, IBlockData iblockdata) {
-        if (!world.isStatic) {
+    private void dropRecord(World world, BlockPosition blockposition, IBlockData iblockdata) {
+        if (!world.isClientSide) {
             TileEntity tileentity = world.getTileEntity(blockposition);
 
-            if (tileentity instanceof TileEntityRecordPlayer) {
-                TileEntityRecordPlayer tileentityrecordplayer = (TileEntityRecordPlayer) tileentity;
-                ItemStack itemstack = tileentityrecordplayer.getRecord();
+            if (tileentity instanceof BlockJukeBox.TileEntityRecordPlayer) {
+                BlockJukeBox.TileEntityRecordPlayer blockjukebox_tileentityrecordplayer = (BlockJukeBox.TileEntityRecordPlayer) tileentity;
+                ItemStack itemstack = blockjukebox_tileentityrecordplayer.getRecord();
 
                 if (itemstack != null) {
                     world.triggerEffect(1005, blockposition, 0);
                     world.a(blockposition, (String) null);
-                    tileentityrecordplayer.setRecord((ItemStack) null);
+                    blockjukebox_tileentityrecordplayer.setRecord((ItemStack) null);
                     float f = 0.7F;
                     double d0 = (double) (world.random.nextFloat() * f) + (double) (1.0F - f) * 0.5D;
                     double d1 = (double) (world.random.nextFloat() * f) + (double) (1.0F - f) * 0.2D + 0.6D;
@@ -64,13 +64,13 @@
     }
 
     public void dropNaturally(World world, BlockPosition blockposition, IBlockData iblockdata, float f, int i) {
-        if (!world.isStatic) {
+        if (!world.isClientSide) {
             super.dropNaturally(world, blockposition, iblockdata, f, 0);
         }
     }
 
     public TileEntity a(World world, int i) {
-        return new TileEntityRecordPlayer();
+        return new BlockJukeBox.TileEntityRecordPlayer();
     }
 
     public boolean isComplexRedstone() {
@@ -80,8 +80,8 @@
     public int l(World world, BlockPosition blockposition) {
         TileEntity tileentity = world.getTileEntity(blockposition);
 
-        if (tileentity instanceof TileEntityRecordPlayer) {
-            ItemStack itemstack = ((TileEntityRecordPlayer) tileentity).getRecord();
+        if (tileentity instanceof BlockJukeBox.TileEntityRecordPlayer) {
+            ItemStack itemstack = ((BlockJukeBox.TileEntityRecordPlayer) tileentity).getRecord();
 
             if (itemstack != null) {
                 return Item.getId(itemstack.getItem()) + 1 - Item.getId(Items.RECORD_13);
@@ -106,4 +106,38 @@
     protected BlockStateList getStateList() {
         return new BlockStateList(this, new IBlockState[] { BlockJukeBox.HAS_RECORD});
     }
+
+    public static class TileEntityRecordPlayer extends TileEntity {
+
+        private ItemStack record;
+
+        public TileEntityRecordPlayer() {}
+
+        public void a(NBTTagCompound nbttagcompound) {
+            super.a(nbttagcompound);
+            if (nbttagcompound.hasKeyOfType("RecordItem", 10)) {
+                this.setRecord(ItemStack.createStack(nbttagcompound.getCompound("RecordItem")));
+            } else if (nbttagcompound.getInt("Record") > 0) {
+                this.setRecord(new ItemStack(Item.getById(nbttagcompound.getInt("Record")), 1, 0));
+            }
+
+        }
+
+        public void b(NBTTagCompound nbttagcompound) {
+            super.b(nbttagcompound);
+            if (this.getRecord() != null) {
+                nbttagcompound.set("RecordItem", this.getRecord().save(new NBTTagCompound()));
+            }
+
+        }
+
+        public ItemStack getRecord() {
+            return this.record;
+        }
+
+        public void setRecord(ItemStack itemstack) {
+            this.record = itemstack;
+            this.update();
+        }
+    }
 }
