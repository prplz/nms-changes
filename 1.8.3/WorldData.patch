--- a/net/minecraft/server/WorldData.java
+++ b/net/minecraft/server/WorldData.java
@@ -24,7 +24,7 @@
     private int r;
     private boolean s;
     private int t;
-    private EnumGamemode u;
+    private WorldSettings.EnumGamemode u;
     private boolean v;
     private boolean w;
     private boolean x;
@@ -92,7 +92,7 @@
             }
         }
 
-        this.u = EnumGamemode.getById(nbttagcompound.getInt("GameType"));
+        this.u = WorldSettings.EnumGamemode.getById(nbttagcompound.getInt("GameType"));
         if (nbttagcompound.hasKeyOfType("MapFeatures", 99)) {
             this.v = nbttagcompound.getBoolean("MapFeatures");
         } else {
@@ -128,7 +128,7 @@
         if (nbttagcompound.hasKeyOfType("allowCommands", 99)) {
             this.x = nbttagcompound.getBoolean("allowCommands");
         } else {
-            this.x = this.u == EnumGamemode.CREATIVE;
+            this.x = this.u == WorldSettings.EnumGamemode.CREATIVE;
         }
 
         if (nbttagcompound.hasKeyOfType("Player", 10)) {
@@ -292,7 +292,7 @@
         nbttagcompound.setLong("Time", this.h);
         nbttagcompound.setLong("DayTime", this.i);
         nbttagcompound.setLong("SizeOnDisk", this.k);
-        nbttagcompound.setLong("LastPlayed", MinecraftServer.ax());
+        nbttagcompound.setLong("LastPlayed", MinecraftServer.ay());
         nbttagcompound.setString("LevelName", this.n);
         nbttagcompound.setInt("version", this.o);
         nbttagcompound.setInt("clearWeatherTime", this.p);
@@ -422,7 +422,7 @@
         this.r = i;
     }
 
-    public EnumGamemode getGameType() {
+    public WorldSettings.EnumGamemode getGameType() {
         return this.u;
     }
 
@@ -434,8 +434,8 @@
         this.v = flag;
     }
 
-    public void setGameType(EnumGamemode enumgamemode) {
-        this.u = enumgamemode;
+    public void setGameType(WorldSettings.EnumGamemode worldsettings_enumgamemode) {
+        this.u = worldsettings_enumgamemode;
     }
 
     public boolean isHardcore() {
@@ -567,82 +567,101 @@
     }
 
     public void a(CrashReportSystemDetails crashreportsystemdetails) {
-        crashreportsystemdetails.a("Level seed", (Callable) (new CrashReportLevelSeed(this)));
-        crashreportsystemdetails.a("Level generator", (Callable) (new CrashReportLevelGenerator(this)));
-        crashreportsystemdetails.a("Level generator options", (Callable) (new CrashReportLevelGeneratorOptions(this)));
-        crashreportsystemdetails.a("Level spawn location", (Callable) (new CrashReportLevelSpawnLocation(this)));
-        crashreportsystemdetails.a("Level time", (Callable) (new CrashReportLevelTime(this)));
-        crashreportsystemdetails.a("Level dimension", (Callable) (new CrashReportLevelDimension(this)));
-        crashreportsystemdetails.a("Level storage version", (Callable) (new CrashReportLevelStorageVersion(this)));
-        crashreportsystemdetails.a("Level weather", (Callable) (new CrashReportLevelWeather(this)));
-        crashreportsystemdetails.a("Level game mode", (Callable) (new CrashReportLevelGameMode(this)));
-    }
-
-    static WorldType a(WorldData worlddata) {
-        return worlddata.c;
-    }
-
-    static boolean b(WorldData worlddata) {
-        return worlddata.v;
-    }
-
-    static String c(WorldData worlddata) {
-        return worlddata.d;
-    }
-
-    static int d(WorldData worlddata) {
-        return worlddata.e;
-    }
-
-    static int e(WorldData worlddata) {
-        return worlddata.f;
-    }
-
-    static int f(WorldData worlddata) {
-        return worlddata.g;
-    }
-
-    static long g(WorldData worlddata) {
-        return worlddata.h;
-    }
+        crashreportsystemdetails.a("Level seed", new Callable() {
+            public String a() throws Exception {
+                return String.valueOf(WorldData.this.getSeed());
+            }
 
-    static long h(WorldData worlddata) {
-        return worlddata.i;
-    }
+            public Object call() throws Exception {
+                return this.a();
+            }
+        });
+        crashreportsystemdetails.a("Level generator", new Callable() {
+            public String a() throws Exception {
+                return String.format("ID %02d - %s, ver %d. Features enabled: %b", new Object[] { Integer.valueOf(WorldData.this.c.g()), WorldData.this.c.name(), Integer.valueOf(WorldData.this.c.getVersion()), Boolean.valueOf(WorldData.this.v)});
+            }
 
-    static int i(WorldData worlddata) {
-        return worlddata.m;
-    }
+            public Object call() throws Exception {
+                return this.a();
+            }
+        });
+        crashreportsystemdetails.a("Level generator options", new Callable() {
+            public String a() throws Exception {
+                return WorldData.this.d;
+            }
 
-    static int j(WorldData worlddata) {
-        return worlddata.o;
-    }
+            public Object call() throws Exception {
+                return this.a();
+            }
+        });
+        crashreportsystemdetails.a("Level spawn location", new Callable() {
+            public String a() throws Exception {
+                return CrashReportSystemDetails.a((double) WorldData.this.e, (double) WorldData.this.f, (double) WorldData.this.g);
+            }
 
-    static int k(WorldData worlddata) {
-        return worlddata.r;
-    }
+            public Object call() throws Exception {
+                return this.a();
+            }
+        });
+        crashreportsystemdetails.a("Level time", new Callable() {
+            public String a() throws Exception {
+                return String.format("%d game time, %d day time", new Object[] { Long.valueOf(WorldData.this.h), Long.valueOf(WorldData.this.i)});
+            }
 
-    static boolean l(WorldData worlddata) {
-        return worlddata.q;
-    }
+            public Object call() throws Exception {
+                return this.a();
+            }
+        });
+        crashreportsystemdetails.a("Level dimension", new Callable() {
+            public String a() throws Exception {
+                return String.valueOf(WorldData.this.m);
+            }
 
-    static int m(WorldData worlddata) {
-        return worlddata.t;
-    }
+            public Object call() throws Exception {
+                return this.a();
+            }
+        });
+        crashreportsystemdetails.a("Level storage version", new Callable() {
+            public String a() throws Exception {
+                String s = "Unknown?";
+
+                try {
+                    switch (WorldData.this.o) {
+                    case 19132:
+                        s = "McRegion";
+                        break;
+
+                    case 19133:
+                        s = "Anvil";
+                    }
+                } catch (Throwable throwable) {
+                    ;
+                }
 
-    static boolean n(WorldData worlddata) {
-        return worlddata.s;
-    }
+                return String.format("0x%05X - %s", new Object[] { Integer.valueOf(WorldData.this.o), s});
+            }
 
-    static EnumGamemode o(WorldData worlddata) {
-        return worlddata.u;
-    }
+            public Object call() throws Exception {
+                return this.a();
+            }
+        });
+        crashreportsystemdetails.a("Level weather", new Callable() {
+            public String a() throws Exception {
+                return String.format("Rain time: %d (now: %b), thunder time: %d (now: %b)", new Object[] { Integer.valueOf(WorldData.this.r), Boolean.valueOf(WorldData.this.q), Integer.valueOf(WorldData.this.t), Boolean.valueOf(WorldData.this.s)});
+            }
 
-    static boolean p(WorldData worlddata) {
-        return worlddata.w;
-    }
+            public Object call() throws Exception {
+                return this.a();
+            }
+        });
+        crashreportsystemdetails.a("Level game mode", new Callable() {
+            public String a() throws Exception {
+                return String.format("Game mode: %s (ID %d). Hardcore: %b. Cheats: %b", new Object[] { WorldData.this.u.b(), Integer.valueOf(WorldData.this.u.getId()), Boolean.valueOf(WorldData.this.w), Boolean.valueOf(WorldData.this.x)});
+            }
 
-    static boolean q(WorldData worlddata) {
-        return worlddata.x;
+            public Object call() throws Exception {
+                return this.a();
+            }
+        });
     }
 }
