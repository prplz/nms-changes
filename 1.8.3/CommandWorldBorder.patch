--- a/net/minecraft/server/CommandWorldBorder.java
+++ b/net/minecraft/server/CommandWorldBorder.java
@@ -18,7 +18,7 @@
         return "commands.worldborder.usage";
     }
 
-    public void execute(ICommandListener icommandlistener, String[] astring) {
+    public void execute(ICommandListener icommandlistener, String[] astring) throws CommandException {
         if (astring.length < 1) {
             throw new ExceptionUsage("commands.worldborder.usage", new Object[0]);
         } else {
@@ -36,14 +36,14 @@
                 d1 = a(astring[1], 1.0D, 6.0E7D);
                 i = astring.length > 2 ? a(astring[2], 0L, 9223372036854775L) * 1000L : 0L;
                 if (i > 0L) {
-                    worldborder.a(d0, d1, i);
+                    worldborder.transitionSizeBetween(d0, d1, i);
                     if (d0 > d1) {
                         a(icommandlistener, this, "commands.worldborder.setSlowly.shrink.success", new Object[] { String.format("%.1f", new Object[] { Double.valueOf(d1)}), String.format("%.1f", new Object[] { Double.valueOf(d0)}), Long.toString(i / 1000L)});
                     } else {
                         a(icommandlistener, this, "commands.worldborder.setSlowly.grow.success", new Object[] { String.format("%.1f", new Object[] { Double.valueOf(d1)}), String.format("%.1f", new Object[] { Double.valueOf(d0)}), Long.toString(i / 1000L)});
                     }
                 } else {
-                    worldborder.a(d1);
+                    worldborder.setSize(d1);
                     a(icommandlistener, this, "commands.worldborder.set.success", new Object[] { String.format("%.1f", new Object[] { Double.valueOf(d1)}), String.format("%.1f", new Object[] { Double.valueOf(d0)})});
                 }
             } else if (astring[0].equals("add")) {
@@ -51,18 +51,18 @@
                     throw new ExceptionUsage("commands.worldborder.add.usage", new Object[0]);
                 }
 
-                d0 = worldborder.h();
+                d0 = worldborder.getSize();
                 d1 = d0 + a(astring[1], -d0, 6.0E7D - d0);
                 i = worldborder.i() + (astring.length > 2 ? a(astring[2], 0L, 9223372036854775L) * 1000L : 0L);
                 if (i > 0L) {
-                    worldborder.a(d0, d1, i);
+                    worldborder.transitionSizeBetween(d0, d1, i);
                     if (d0 > d1) {
                         a(icommandlistener, this, "commands.worldborder.setSlowly.shrink.success", new Object[] { String.format("%.1f", new Object[] { Double.valueOf(d1)}), String.format("%.1f", new Object[] { Double.valueOf(d0)}), Long.toString(i / 1000L)});
                     } else {
                         a(icommandlistener, this, "commands.worldborder.setSlowly.grow.success", new Object[] { String.format("%.1f", new Object[] { Double.valueOf(d1)}), String.format("%.1f", new Object[] { Double.valueOf(d0)}), Long.toString(i / 1000L)});
                     }
                 } else {
-                    worldborder.a(d1);
+                    worldborder.setSize(d1);
                     a(icommandlistener, this, "commands.worldborder.set.success", new Object[] { String.format("%.1f", new Object[] { Double.valueOf(d1)}), String.format("%.1f", new Object[] { Double.valueOf(d0)})});
                 }
             } else if (astring[0].equals("center")) {
@@ -74,7 +74,7 @@
                 double d2 = b((double) blockposition.getX() + 0.5D, astring[1], true);
                 double d3 = b((double) blockposition.getZ() + 0.5D, astring[2], true);
 
-                worldborder.c(d2, d3);
+                worldborder.setCenter(d2, d3);
                 a(icommandlistener, this, "commands.worldborder.center.success", new Object[] { Double.valueOf(d2), Double.valueOf(d3)});
             } else if (astring[0].equals("damage")) {
                 if (astring.length < 2) {
@@ -87,8 +87,8 @@
                     }
 
                     d0 = a(astring[2], 0.0D);
-                    d1 = worldborder.m();
-                    worldborder.b(d0);
+                    d1 = worldborder.getDamageBuffer();
+                    worldborder.setDamageBuffer(d0);
                     a(icommandlistener, this, "commands.worldborder.damage.buffer.success", new Object[] { String.format("%.1f", new Object[] { Double.valueOf(d0)}), String.format("%.1f", new Object[] { Double.valueOf(d1)})});
                 } else if (astring[1].equals("amount")) {
                     if (astring.length != 3) {
@@ -96,8 +96,8 @@
                     }
 
                     d0 = a(astring[2], 0.0D);
-                    d1 = worldborder.n();
-                    worldborder.c(d0);
+                    d1 = worldborder.getDamageAmount();
+                    worldborder.setDamageAmount(d0);
                     a(icommandlistener, this, "commands.worldborder.damage.amount.success", new Object[] { String.format("%.2f", new Object[] { Double.valueOf(d0)}), String.format("%.2f", new Object[] { Double.valueOf(d1)})});
                 }
             } else if (astring[0].equals("warning")) {
@@ -113,21 +113,25 @@
                         throw new ExceptionUsage("commands.worldborder.warning.time.usage", new Object[0]);
                     }
 
-                    k = worldborder.p();
-                    worldborder.b(j);
+                    k = worldborder.getWarningTime();
+                    worldborder.setWarningTime(j);
                     a(icommandlistener, this, "commands.worldborder.warning.time.success", new Object[] { Integer.valueOf(j), Integer.valueOf(k)});
                 } else if (astring[1].equals("distance")) {
                     if (astring.length != 3) {
                         throw new ExceptionUsage("commands.worldborder.warning.distance.usage", new Object[0]);
                     }
 
-                    k = worldborder.q();
-                    worldborder.c(j);
+                    k = worldborder.getWarningDistance();
+                    worldborder.setWarningDistance(j);
                     a(icommandlistener, this, "commands.worldborder.warning.distance.success", new Object[] { Integer.valueOf(j), Integer.valueOf(k)});
                 }
-            } else if (astring[0].equals("get")) {
-                d0 = worldborder.h();
-                icommandlistener.a(EnumCommandResult.QUERY_RESULT, MathHelper.floor(d0 + 0.5D));
+            } else {
+                if (!astring[0].equals("get")) {
+                    throw new ExceptionUsage("commands.worldborder.usage", new Object[0]);
+                }
+
+                d0 = worldborder.getSize();
+                icommandlistener.a(CommandObjectiveExecutor.EnumCommandResult.QUERY_RESULT, MathHelper.floor(d0 + 0.5D));
                 icommandlistener.sendMessage(new ChatMessage("commands.worldborder.get.success", new Object[] { String.format("%.0f", new Object[] { Double.valueOf(d0)})}));
             }
 
@@ -135,10 +139,10 @@
     }
 
     protected WorldBorder d() {
-        return MinecraftServer.getServer().worldServer[0].af();
+        return MinecraftServer.getServer().worldServer[0].getWorldBorder();
     }
 
-    public List tabComplete(ICommandListener icommandlistener, String[] astring, BlockPosition blockposition) {
-        return astring.length == 1 ? a(astring, new String[] { "set", "center", "damage", "warning", "add", "get"}) : (astring.length == 2 && astring[0].equals("damage") ? a(astring, new String[] { "buffer", "amount"}) : (astring.length == 2 && astring[0].equals("warning") ? a(astring, new String[] { "time", "distance"}) : null));
+    public List<String> tabComplete(ICommandListener icommandlistener, String[] astring, BlockPosition blockposition) {
+        return astring.length == 1 ? a(astring, new String[] { "set", "center", "damage", "warning", "add", "get"}) : (astring.length == 2 && astring[0].equals("damage") ? a(astring, new String[] { "buffer", "amount"}) : (astring.length >= 2 && astring.length <= 3 && astring[0].equals("center") ? b(astring, 1, blockposition) : (astring.length == 2 && astring[0].equals("warning") ? a(astring, new String[] { "time", "distance"}) : null)));
     }
 }
