--- a/net/minecraft/server/BlockAnvil.java
+++ b/net/minecraft/server/BlockAnvil.java
@@ -4,7 +4,7 @@
 
 public class BlockAnvil extends BlockFalling {
 
-    public static final BlockStateDirection FACING = BlockStateDirection.of("facing", (Predicate) EnumDirectionLimit.HORIZONTAL);
+    public static final BlockStateDirection FACING = BlockStateDirection.of("facing", (Predicate) EnumDirection.EnumDirectionLimit.HORIZONTAL);
     public static final BlockStateInteger DAMAGE = BlockStateInteger.of("damage", 0, 2);
 
     protected BlockAnvil() {
@@ -29,8 +29,8 @@
     }
 
     public boolean interact(World world, BlockPosition blockposition, IBlockData iblockdata, EntityHuman entityhuman, EnumDirection enumdirection, float f, float f1, float f2) {
-        if (!world.isStatic) {
-            entityhuman.openTileEntity(new TileEntityContainerAnvil(world, blockposition));
+        if (!world.isClientSide) {
+            entityhuman.openTileEntity(new BlockAnvil.TileEntityContainerAnvil(world, blockposition));
         }
 
         return true;
@@ -43,7 +43,7 @@
     public void updateShape(IBlockAccess iblockaccess, BlockPosition blockposition) {
         EnumDirection enumdirection = (EnumDirection) iblockaccess.getType(blockposition).get(BlockAnvil.FACING);
 
-        if (enumdirection.k() == EnumAxis.X) {
+        if (enumdirection.k() == EnumDirection.EnumAxis.X) {
             this.a(0.0F, 0.0F, 0.125F, 1.0F, 1.0F, 0.875F);
         } else {
             this.a(0.125F, 0.0F, 0.0F, 0.875F, 1.0F, 1.0F);
@@ -74,4 +74,35 @@
     protected BlockStateList getStateList() {
         return new BlockStateList(this, new IBlockState[] { BlockAnvil.FACING, BlockAnvil.DAMAGE});
     }
+
+    public static class TileEntityContainerAnvil implements ITileEntityContainer {
+
+        private final World a;
+        private final BlockPosition b;
+
+        public TileEntityContainerAnvil(World world, BlockPosition blockposition) {
+            this.a = world;
+            this.b = blockposition;
+        }
+
+        public String getName() {
+            return "anvil";
+        }
+
+        public boolean hasCustomName() {
+            return false;
+        }
+
+        public IChatBaseComponent getScoreboardDisplayName() {
+            return new ChatMessage(Blocks.ANVIL.a() + ".name", new Object[0]);
+        }
+
+        public Container createContainer(PlayerInventory playerinventory, EntityHuman entityhuman) {
+            return new ContainerAnvil(playerinventory, this.a, this.b, entityhuman);
+        }
+
+        public String getContainerName() {
+            return "minecraft:anvil";
+        }
+    }
 }
