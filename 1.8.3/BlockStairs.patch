--- a/net/minecraft/server/BlockStairs.java
+++ b/net/minecraft/server/BlockStairs.java
@@ -7,30 +7,30 @@
 
 public class BlockStairs extends Block {
 
-    public static final BlockStateDirection FACING = BlockStateDirection.of("facing", (Predicate) EnumDirectionLimit.HORIZONTAL);
-    public static final BlockStateEnum HALF = BlockStateEnum.of("half", EnumHalf.class);
-    public static final BlockStateEnum SHAPE = BlockStateEnum.of("shape", EnumStairShape.class);
-    private static final int[][] N = new int[][] { { 4, 5}, { 5, 7}, { 6, 7}, { 4, 6}, { 0, 1}, { 1, 3}, { 2, 3}, { 0, 2}};
-    private final Block O;
-    private final IBlockData P;
-    private boolean Q;
-    private int R;
+    public static final BlockStateDirection FACING = BlockStateDirection.of("facing", (Predicate) EnumDirection.EnumDirectionLimit.HORIZONTAL);
+    public static final BlockStateEnum<BlockStairs.EnumHalf> HALF = BlockStateEnum.of("half", BlockStairs.EnumHalf.class);
+    public static final BlockStateEnum<BlockStairs.EnumStairShape> SHAPE = BlockStateEnum.of("shape", BlockStairs.EnumStairShape.class);
+    private static final int[][] O = new int[][] { { 4, 5}, { 5, 7}, { 6, 7}, { 4, 6}, { 0, 1}, { 1, 3}, { 2, 3}, { 0, 2}};
+    private final Block P;
+    private final IBlockData Q;
+    private boolean R;
+    private int S;
 
     protected BlockStairs(IBlockData iblockdata) {
         super(iblockdata.getBlock().material);
-        this.j(this.blockStateList.getBlockData().set(BlockStairs.FACING, EnumDirection.NORTH).set(BlockStairs.HALF, EnumHalf.BOTTOM).set(BlockStairs.SHAPE, EnumStairShape.STRAIGHT));
-        this.O = iblockdata.getBlock();
-        this.P = iblockdata;
-        this.c(this.O.strength);
-        this.b(this.O.durability / 3.0F);
-        this.a(this.O.stepSound);
+        this.j(this.blockStateList.getBlockData().set(BlockStairs.FACING, EnumDirection.NORTH).set(BlockStairs.HALF, BlockStairs.EnumHalf.BOTTOM).set(BlockStairs.SHAPE, BlockStairs.EnumStairShape.STRAIGHT));
+        this.P = iblockdata.getBlock();
+        this.Q = iblockdata;
+        this.c(this.P.strength);
+        this.b(this.P.durability / 3.0F);
+        this.a(this.P.stepSound);
         this.e(255);
         this.a(CreativeModeTab.b);
     }
 
     public void updateShape(IBlockAccess iblockaccess, BlockPosition blockposition) {
-        if (this.Q) {
-            this.a(0.5F * (float) (this.R % 2), 0.5F * (float) (this.R / 4 % 2), 0.5F * (float) (this.R / 2 % 2), 0.5F + 0.5F * (float) (this.R % 2), 0.5F + 0.5F * (float) (this.R / 4 % 2), 0.5F + 0.5F * (float) (this.R / 2 % 2));
+        if (this.R) {
+            this.a(0.5F * (float) (this.S % 2), 0.5F * (float) (this.S / 4 % 2), 0.5F * (float) (this.S / 2 % 2), 0.5F + 0.5F * (float) (this.S % 2), 0.5F + 0.5F * (float) (this.S / 4 % 2), 0.5F + 0.5F * (float) (this.S / 2 % 2));
         } else {
             this.a(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
         }
@@ -46,7 +46,7 @@
     }
 
     public void e(IBlockAccess iblockaccess, BlockPosition blockposition) {
-        if (iblockaccess.getType(blockposition).get(BlockStairs.HALF) == EnumHalf.TOP) {
+        if (iblockaccess.getType(blockposition).get(BlockStairs.HALF) == BlockStairs.EnumHalf.TOP) {
             this.a(0.0F, 0.5F, 0.0F, 1.0F, 1.0F, 1.0F);
         } else {
             this.a(0.0F, 0.0F, 0.0F, 1.0F, 0.5F, 1.0F);
@@ -68,8 +68,8 @@
     public int f(IBlockAccess iblockaccess, BlockPosition blockposition) {
         IBlockData iblockdata = iblockaccess.getType(blockposition);
         EnumDirection enumdirection = (EnumDirection) iblockdata.get(BlockStairs.FACING);
-        EnumHalf enumhalf = (EnumHalf) iblockdata.get(BlockStairs.HALF);
-        boolean flag = enumhalf == EnumHalf.TOP;
+        BlockStairs.EnumHalf blockstairs_enumhalf = (BlockStairs.EnumHalf) iblockdata.get(BlockStairs.HALF);
+        boolean flag = blockstairs_enumhalf == BlockStairs.EnumHalf.TOP;
         IBlockData iblockdata1;
         Block block;
         EnumDirection enumdirection1;
@@ -77,7 +77,7 @@
         if (enumdirection == EnumDirection.EAST) {
             iblockdata1 = iblockaccess.getType(blockposition.east());
             block = iblockdata1.getBlock();
-            if (c(block) && enumhalf == iblockdata1.get(BlockStairs.HALF)) {
+            if (c(block) && blockstairs_enumhalf == iblockdata1.get(BlockStairs.HALF)) {
                 enumdirection1 = (EnumDirection) iblockdata1.get(BlockStairs.FACING);
                 if (enumdirection1 == EnumDirection.NORTH && !a(iblockaccess, blockposition.south(), iblockdata)) {
                     return flag ? 1 : 2;
@@ -90,7 +90,7 @@
         } else if (enumdirection == EnumDirection.WEST) {
             iblockdata1 = iblockaccess.getType(blockposition.west());
             block = iblockdata1.getBlock();
-            if (c(block) && enumhalf == iblockdata1.get(BlockStairs.HALF)) {
+            if (c(block) && blockstairs_enumhalf == iblockdata1.get(BlockStairs.HALF)) {
                 enumdirection1 = (EnumDirection) iblockdata1.get(BlockStairs.FACING);
                 if (enumdirection1 == EnumDirection.NORTH && !a(iblockaccess, blockposition.south(), iblockdata)) {
                     return flag ? 2 : 1;
@@ -103,7 +103,7 @@
         } else if (enumdirection == EnumDirection.SOUTH) {
             iblockdata1 = iblockaccess.getType(blockposition.south());
             block = iblockdata1.getBlock();
-            if (c(block) && enumhalf == iblockdata1.get(BlockStairs.HALF)) {
+            if (c(block) && blockstairs_enumhalf == iblockdata1.get(BlockStairs.HALF)) {
                 enumdirection1 = (EnumDirection) iblockdata1.get(BlockStairs.FACING);
                 if (enumdirection1 == EnumDirection.WEST && !a(iblockaccess, blockposition.east(), iblockdata)) {
                     return flag ? 2 : 1;
@@ -116,7 +116,7 @@
         } else if (enumdirection == EnumDirection.NORTH) {
             iblockdata1 = iblockaccess.getType(blockposition.north());
             block = iblockdata1.getBlock();
-            if (c(block) && enumhalf == iblockdata1.get(BlockStairs.HALF)) {
+            if (c(block) && blockstairs_enumhalf == iblockdata1.get(BlockStairs.HALF)) {
                 enumdirection1 = (EnumDirection) iblockdata1.get(BlockStairs.FACING);
                 if (enumdirection1 == EnumDirection.WEST && !a(iblockaccess, blockposition.east(), iblockdata)) {
                     return flag ? 1 : 2;
@@ -134,8 +134,8 @@
     public int g(IBlockAccess iblockaccess, BlockPosition blockposition) {
         IBlockData iblockdata = iblockaccess.getType(blockposition);
         EnumDirection enumdirection = (EnumDirection) iblockdata.get(BlockStairs.FACING);
-        EnumHalf enumhalf = (EnumHalf) iblockdata.get(BlockStairs.HALF);
-        boolean flag = enumhalf == EnumHalf.TOP;
+        BlockStairs.EnumHalf blockstairs_enumhalf = (BlockStairs.EnumHalf) iblockdata.get(BlockStairs.HALF);
+        boolean flag = blockstairs_enumhalf == BlockStairs.EnumHalf.TOP;
         IBlockData iblockdata1;
         Block block;
         EnumDirection enumdirection1;
@@ -143,7 +143,7 @@
         if (enumdirection == EnumDirection.EAST) {
             iblockdata1 = iblockaccess.getType(blockposition.west());
             block = iblockdata1.getBlock();
-            if (c(block) && enumhalf == iblockdata1.get(BlockStairs.HALF)) {
+            if (c(block) && blockstairs_enumhalf == iblockdata1.get(BlockStairs.HALF)) {
                 enumdirection1 = (EnumDirection) iblockdata1.get(BlockStairs.FACING);
                 if (enumdirection1 == EnumDirection.NORTH && !a(iblockaccess, blockposition.north(), iblockdata)) {
                     return flag ? 1 : 2;
@@ -156,7 +156,7 @@
         } else if (enumdirection == EnumDirection.WEST) {
             iblockdata1 = iblockaccess.getType(blockposition.east());
             block = iblockdata1.getBlock();
-            if (c(block) && enumhalf == iblockdata1.get(BlockStairs.HALF)) {
+            if (c(block) && blockstairs_enumhalf == iblockdata1.get(BlockStairs.HALF)) {
                 enumdirection1 = (EnumDirection) iblockdata1.get(BlockStairs.FACING);
                 if (enumdirection1 == EnumDirection.NORTH && !a(iblockaccess, blockposition.north(), iblockdata)) {
                     return flag ? 2 : 1;
@@ -169,7 +169,7 @@
         } else if (enumdirection == EnumDirection.SOUTH) {
             iblockdata1 = iblockaccess.getType(blockposition.north());
             block = iblockdata1.getBlock();
-            if (c(block) && enumhalf == iblockdata1.get(BlockStairs.HALF)) {
+            if (c(block) && blockstairs_enumhalf == iblockdata1.get(BlockStairs.HALF)) {
                 enumdirection1 = (EnumDirection) iblockdata1.get(BlockStairs.FACING);
                 if (enumdirection1 == EnumDirection.WEST && !a(iblockaccess, blockposition.west(), iblockdata)) {
                     return flag ? 2 : 1;
@@ -182,7 +182,7 @@
         } else if (enumdirection == EnumDirection.NORTH) {
             iblockdata1 = iblockaccess.getType(blockposition.south());
             block = iblockdata1.getBlock();
-            if (c(block) && enumhalf == iblockdata1.get(BlockStairs.HALF)) {
+            if (c(block) && blockstairs_enumhalf == iblockdata1.get(BlockStairs.HALF)) {
                 enumdirection1 = (EnumDirection) iblockdata1.get(BlockStairs.FACING);
                 if (enumdirection1 == EnumDirection.WEST && !a(iblockaccess, blockposition.west(), iblockdata)) {
                     return flag ? 1 : 2;
@@ -200,8 +200,8 @@
     public boolean h(IBlockAccess iblockaccess, BlockPosition blockposition) {
         IBlockData iblockdata = iblockaccess.getType(blockposition);
         EnumDirection enumdirection = (EnumDirection) iblockdata.get(BlockStairs.FACING);
-        EnumHalf enumhalf = (EnumHalf) iblockdata.get(BlockStairs.HALF);
-        boolean flag = enumhalf == EnumHalf.TOP;
+        BlockStairs.EnumHalf blockstairs_enumhalf = (BlockStairs.EnumHalf) iblockdata.get(BlockStairs.HALF);
+        boolean flag = blockstairs_enumhalf == BlockStairs.EnumHalf.TOP;
         float f = 0.5F;
         float f1 = 1.0F;
 
@@ -224,7 +224,7 @@
             f5 = 1.0F;
             iblockdata1 = iblockaccess.getType(blockposition.east());
             block = iblockdata1.getBlock();
-            if (c(block) && enumhalf == iblockdata1.get(BlockStairs.HALF)) {
+            if (c(block) && blockstairs_enumhalf == iblockdata1.get(BlockStairs.HALF)) {
                 enumdirection1 = (EnumDirection) iblockdata1.get(BlockStairs.FACING);
                 if (enumdirection1 == EnumDirection.NORTH && !a(iblockaccess, blockposition.south(), iblockdata)) {
                     f5 = 0.5F;
@@ -239,7 +239,7 @@
             f5 = 1.0F;
             iblockdata1 = iblockaccess.getType(blockposition.west());
             block = iblockdata1.getBlock();
-            if (c(block) && enumhalf == iblockdata1.get(BlockStairs.HALF)) {
+            if (c(block) && blockstairs_enumhalf == iblockdata1.get(BlockStairs.HALF)) {
                 enumdirection1 = (EnumDirection) iblockdata1.get(BlockStairs.FACING);
                 if (enumdirection1 == EnumDirection.NORTH && !a(iblockaccess, blockposition.south(), iblockdata)) {
                     f5 = 0.5F;
@@ -254,7 +254,7 @@
             f5 = 1.0F;
             iblockdata1 = iblockaccess.getType(blockposition.south());
             block = iblockdata1.getBlock();
-            if (c(block) && enumhalf == iblockdata1.get(BlockStairs.HALF)) {
+            if (c(block) && blockstairs_enumhalf == iblockdata1.get(BlockStairs.HALF)) {
                 enumdirection1 = (EnumDirection) iblockdata1.get(BlockStairs.FACING);
                 if (enumdirection1 == EnumDirection.WEST && !a(iblockaccess, blockposition.east(), iblockdata)) {
                     f3 = 0.5F;
@@ -267,7 +267,7 @@
         } else if (enumdirection == EnumDirection.NORTH) {
             iblockdata1 = iblockaccess.getType(blockposition.north());
             block = iblockdata1.getBlock();
-            if (c(block) && enumhalf == iblockdata1.get(BlockStairs.HALF)) {
+            if (c(block) && blockstairs_enumhalf == iblockdata1.get(BlockStairs.HALF)) {
                 enumdirection1 = (EnumDirection) iblockdata1.get(BlockStairs.FACING);
                 if (enumdirection1 == EnumDirection.WEST && !a(iblockaccess, blockposition.east(), iblockdata)) {
                     f3 = 0.5F;
@@ -286,8 +286,8 @@
     public boolean i(IBlockAccess iblockaccess, BlockPosition blockposition) {
         IBlockData iblockdata = iblockaccess.getType(blockposition);
         EnumDirection enumdirection = (EnumDirection) iblockdata.get(BlockStairs.FACING);
-        EnumHalf enumhalf = (EnumHalf) iblockdata.get(BlockStairs.HALF);
-        boolean flag = enumhalf == EnumHalf.TOP;
+        BlockStairs.EnumHalf blockstairs_enumhalf = (BlockStairs.EnumHalf) iblockdata.get(BlockStairs.HALF);
+        boolean flag = blockstairs_enumhalf == BlockStairs.EnumHalf.TOP;
         float f = 0.5F;
         float f1 = 1.0F;
 
@@ -308,7 +308,7 @@
         if (enumdirection == EnumDirection.EAST) {
             iblockdata1 = iblockaccess.getType(blockposition.west());
             block = iblockdata1.getBlock();
-            if (c(block) && enumhalf == iblockdata1.get(BlockStairs.HALF)) {
+            if (c(block) && blockstairs_enumhalf == iblockdata1.get(BlockStairs.HALF)) {
                 enumdirection1 = (EnumDirection) iblockdata1.get(BlockStairs.FACING);
                 if (enumdirection1 == EnumDirection.NORTH && !a(iblockaccess, blockposition.north(), iblockdata)) {
                     f4 = 0.0F;
@@ -323,7 +323,7 @@
         } else if (enumdirection == EnumDirection.WEST) {
             iblockdata1 = iblockaccess.getType(blockposition.east());
             block = iblockdata1.getBlock();
-            if (c(block) && enumhalf == iblockdata1.get(BlockStairs.HALF)) {
+            if (c(block) && blockstairs_enumhalf == iblockdata1.get(BlockStairs.HALF)) {
                 f2 = 0.5F;
                 f3 = 1.0F;
                 enumdirection1 = (EnumDirection) iblockdata1.get(BlockStairs.FACING);
@@ -340,7 +340,7 @@
         } else if (enumdirection == EnumDirection.SOUTH) {
             iblockdata1 = iblockaccess.getType(blockposition.north());
             block = iblockdata1.getBlock();
-            if (c(block) && enumhalf == iblockdata1.get(BlockStairs.HALF)) {
+            if (c(block) && blockstairs_enumhalf == iblockdata1.get(BlockStairs.HALF)) {
                 f4 = 0.0F;
                 f5 = 0.5F;
                 enumdirection1 = (EnumDirection) iblockdata1.get(BlockStairs.FACING);
@@ -355,7 +355,7 @@
         } else if (enumdirection == EnumDirection.NORTH) {
             iblockdata1 = iblockaccess.getType(blockposition.south());
             block = iblockdata1.getBlock();
-            if (c(block) && enumhalf == iblockdata1.get(BlockStairs.HALF)) {
+            if (c(block) && blockstairs_enumhalf == iblockdata1.get(BlockStairs.HALF)) {
                 enumdirection1 = (EnumDirection) iblockdata1.get(BlockStairs.FACING);
                 if (enumdirection1 == EnumDirection.WEST && !a(iblockaccess, blockposition.west(), iblockdata)) {
                     flag1 = true;
@@ -374,7 +374,7 @@
         return flag1;
     }
 
-    public void a(World world, BlockPosition blockposition, IBlockData iblockdata, AxisAlignedBB axisalignedbb, List list, Entity entity) {
+    public void a(World world, BlockPosition blockposition, IBlockData iblockdata, AxisAlignedBB axisalignedbb, List<AxisAlignedBB> list, Entity entity) {
         this.e(world, blockposition);
         super.a(world, blockposition, iblockdata, axisalignedbb, list, entity);
         boolean flag = this.h(world, blockposition);
@@ -388,84 +388,84 @@
     }
 
     public void attack(World world, BlockPosition blockposition, EntityHuman entityhuman) {
-        this.O.attack(world, blockposition, entityhuman);
+        this.P.attack(world, blockposition, entityhuman);
     }
 
     public void postBreak(World world, BlockPosition blockposition, IBlockData iblockdata) {
-        this.O.postBreak(world, blockposition, iblockdata);
+        this.P.postBreak(world, blockposition, iblockdata);
     }
 
     public float a(Entity entity) {
-        return this.O.a(entity);
+        return this.P.a(entity);
     }
 
     public int a(World world) {
-        return this.O.a(world);
+        return this.P.a(world);
     }
 
     public Vec3D a(World world, BlockPosition blockposition, Entity entity, Vec3D vec3d) {
-        return this.O.a(world, blockposition, entity, vec3d);
+        return this.P.a(world, blockposition, entity, vec3d);
     }
 
-    public boolean y() {
-        return this.O.y();
+    public boolean A() {
+        return this.P.A();
     }
 
     public boolean a(IBlockData iblockdata, boolean flag) {
-        return this.O.a(iblockdata, flag);
+        return this.P.a(iblockdata, flag);
     }
 
     public boolean canPlace(World world, BlockPosition blockposition) {
-        return this.O.canPlace(world, blockposition);
+        return this.P.canPlace(world, blockposition);
     }
 
     public void onPlace(World world, BlockPosition blockposition, IBlockData iblockdata) {
-        this.doPhysics(world, blockposition, this.P, Blocks.AIR);
-        this.O.onPlace(world, blockposition, this.P);
+        this.doPhysics(world, blockposition, this.Q, Blocks.AIR);
+        this.P.onPlace(world, blockposition, this.Q);
     }
 
     public void remove(World world, BlockPosition blockposition, IBlockData iblockdata) {
-        this.O.remove(world, blockposition, this.P);
+        this.P.remove(world, blockposition, this.Q);
     }
 
     public void a(World world, BlockPosition blockposition, Entity entity) {
-        this.O.a(world, blockposition, entity);
+        this.P.a(world, blockposition, entity);
     }
 
     public void b(World world, BlockPosition blockposition, IBlockData iblockdata, Random random) {
-        this.O.b(world, blockposition, iblockdata, random);
+        this.P.b(world, blockposition, iblockdata, random);
     }
 
     public boolean interact(World world, BlockPosition blockposition, IBlockData iblockdata, EntityHuman entityhuman, EnumDirection enumdirection, float f, float f1, float f2) {
-        return this.O.interact(world, blockposition, this.P, entityhuman, EnumDirection.DOWN, 0.0F, 0.0F, 0.0F);
+        return this.P.interact(world, blockposition, this.Q, entityhuman, EnumDirection.DOWN, 0.0F, 0.0F, 0.0F);
     }
 
     public void wasExploded(World world, BlockPosition blockposition, Explosion explosion) {
-        this.O.wasExploded(world, blockposition, explosion);
+        this.P.wasExploded(world, blockposition, explosion);
     }
 
     public MaterialMapColor g(IBlockData iblockdata) {
-        return this.O.g(this.P);
+        return this.P.g(this.Q);
     }
 
     public IBlockData getPlacedState(World world, BlockPosition blockposition, EnumDirection enumdirection, float f, float f1, float f2, int i, EntityLiving entityliving) {
         IBlockData iblockdata = super.getPlacedState(world, blockposition, enumdirection, f, f1, f2, i, entityliving);
 
-        iblockdata = iblockdata.set(BlockStairs.FACING, entityliving.getDirection()).set(BlockStairs.SHAPE, EnumStairShape.STRAIGHT);
-        return enumdirection != EnumDirection.DOWN && (enumdirection == EnumDirection.UP || (double) f1 <= 0.5D) ? iblockdata.set(BlockStairs.HALF, EnumHalf.BOTTOM) : iblockdata.set(BlockStairs.HALF, EnumHalf.TOP);
+        iblockdata = iblockdata.set(BlockStairs.FACING, entityliving.getDirection()).set(BlockStairs.SHAPE, BlockStairs.EnumStairShape.STRAIGHT);
+        return enumdirection != EnumDirection.DOWN && (enumdirection == EnumDirection.UP || (double) f1 <= 0.5D) ? iblockdata.set(BlockStairs.HALF, BlockStairs.EnumHalf.BOTTOM) : iblockdata.set(BlockStairs.HALF, BlockStairs.EnumHalf.TOP);
     }
 
     public MovingObjectPosition a(World world, BlockPosition blockposition, Vec3D vec3d, Vec3D vec3d1) {
         MovingObjectPosition[] amovingobjectposition = new MovingObjectPosition[8];
         IBlockData iblockdata = world.getType(blockposition);
         int i = ((EnumDirection) iblockdata.get(BlockStairs.FACING)).b();
-        boolean flag = iblockdata.get(BlockStairs.HALF) == EnumHalf.TOP;
-        int[] aint = BlockStairs.N[i + (flag ? 4 : 0)];
+        boolean flag = iblockdata.get(BlockStairs.HALF) == BlockStairs.EnumHalf.TOP;
+        int[] aint = BlockStairs.O[i + (flag ? 4 : 0)];
 
-        this.Q = true;
+        this.R = true;
 
         for (int j = 0; j < 8; ++j) {
-            this.R = j;
+            this.S = j;
             if (Arrays.binarySearch(aint, j) < 0) {
                 amovingobjectposition[j] = super.a(world, blockposition, vec3d, vec3d1);
             }
@@ -502,7 +502,7 @@
     }
 
     public IBlockData fromLegacyData(int i) {
-        IBlockData iblockdata = this.getBlockData().set(BlockStairs.HALF, (i & 4) > 0 ? EnumHalf.TOP : EnumHalf.BOTTOM);
+        IBlockData iblockdata = this.getBlockData().set(BlockStairs.HALF, (i & 4) > 0 ? BlockStairs.EnumHalf.TOP : BlockStairs.EnumHalf.BOTTOM);
 
         iblockdata = iblockdata.set(BlockStairs.FACING, EnumDirection.fromType1(5 - (i & 3)));
         return iblockdata;
@@ -511,7 +511,7 @@
     public int toLegacyData(IBlockData iblockdata) {
         int i = 0;
 
-        if (iblockdata.get(BlockStairs.HALF) == EnumHalf.TOP) {
+        if (iblockdata.get(BlockStairs.HALF) == BlockStairs.EnumHalf.TOP) {
             i |= 4;
         }
 
@@ -523,28 +523,28 @@
         if (this.h(iblockaccess, blockposition)) {
             switch (this.g(iblockaccess, blockposition)) {
             case 0:
-                iblockdata = iblockdata.set(BlockStairs.SHAPE, EnumStairShape.STRAIGHT);
+                iblockdata = iblockdata.set(BlockStairs.SHAPE, BlockStairs.EnumStairShape.STRAIGHT);
                 break;
 
             case 1:
-                iblockdata = iblockdata.set(BlockStairs.SHAPE, EnumStairShape.INNER_RIGHT);
+                iblockdata = iblockdata.set(BlockStairs.SHAPE, BlockStairs.EnumStairShape.INNER_RIGHT);
                 break;
 
             case 2:
-                iblockdata = iblockdata.set(BlockStairs.SHAPE, EnumStairShape.INNER_LEFT);
+                iblockdata = iblockdata.set(BlockStairs.SHAPE, BlockStairs.EnumStairShape.INNER_LEFT);
             }
         } else {
             switch (this.f(iblockaccess, blockposition)) {
             case 0:
-                iblockdata = iblockdata.set(BlockStairs.SHAPE, EnumStairShape.STRAIGHT);
+                iblockdata = iblockdata.set(BlockStairs.SHAPE, BlockStairs.EnumStairShape.STRAIGHT);
                 break;
 
             case 1:
-                iblockdata = iblockdata.set(BlockStairs.SHAPE, EnumStairShape.OUTER_RIGHT);
+                iblockdata = iblockdata.set(BlockStairs.SHAPE, BlockStairs.EnumStairShape.OUTER_RIGHT);
                 break;
 
             case 2:
-                iblockdata = iblockdata.set(BlockStairs.SHAPE, EnumStairShape.OUTER_LEFT);
+                iblockdata = iblockdata.set(BlockStairs.SHAPE, BlockStairs.EnumStairShape.OUTER_LEFT);
             }
         }
 
@@ -554,4 +554,42 @@
     protected BlockStateList getStateList() {
         return new BlockStateList(this, new IBlockState[] { BlockStairs.FACING, BlockStairs.HALF, BlockStairs.SHAPE});
     }
+
+    public static enum EnumStairShape implements INamable {
+
+        STRAIGHT("straight"), INNER_LEFT("inner_left"), INNER_RIGHT("inner_right"), OUTER_LEFT("outer_left"), OUTER_RIGHT("outer_right");
+
+        private final String f;
+
+        private EnumStairShape(String s) {
+            this.f = s;
+        }
+
+        public String toString() {
+            return this.f;
+        }
+
+        public String getName() {
+            return this.f;
+        }
+    }
+
+    public static enum EnumHalf implements INamable {
+
+        TOP("top"), BOTTOM("bottom");
+
+        private final String c;
+
+        private EnumHalf(String s) {
+            this.c = s;
+        }
+
+        public String toString() {
+            return this.c;
+        }
+
+        public String getName() {
+            return this.c;
+        }
+    }
 }
