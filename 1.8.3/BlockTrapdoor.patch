--- a/net/minecraft/server/BlockTrapdoor.java
+++ b/net/minecraft/server/BlockTrapdoor.java
@@ -4,13 +4,13 @@
 
 public class BlockTrapdoor extends Block {
 
-    public static final BlockStateDirection FACING = BlockStateDirection.of("facing", (Predicate) EnumDirectionLimit.HORIZONTAL);
+    public static final BlockStateDirection FACING = BlockStateDirection.of("facing", (Predicate) EnumDirection.EnumDirectionLimit.HORIZONTAL);
     public static final BlockStateBoolean OPEN = BlockStateBoolean.of("open");
-    public static final BlockStateEnum HALF = BlockStateEnum.of("half", EnumTrapdoorHalf.class);
+    public static final BlockStateEnum<BlockTrapdoor.EnumTrapdoorHalf> HALF = BlockStateEnum.of("half", BlockTrapdoor.EnumTrapdoorHalf.class);
 
     protected BlockTrapdoor(Material material) {
         super(material);
-        this.j(this.blockStateList.getBlockData().set(BlockTrapdoor.FACING, EnumDirection.NORTH).set(BlockTrapdoor.OPEN, Boolean.valueOf(false)).set(BlockTrapdoor.HALF, EnumTrapdoorHalf.BOTTOM));
+        this.j(this.blockStateList.getBlockData().set(BlockTrapdoor.FACING, EnumDirection.NORTH).set(BlockTrapdoor.OPEN, Boolean.valueOf(false)).set(BlockTrapdoor.HALF, BlockTrapdoor.EnumTrapdoorHalf.BOTTOM));
         float f = 0.5F;
         float f1 = 1.0F;
 
@@ -39,7 +39,7 @@
         this.d(iblockaccess.getType(blockposition));
     }
 
-    public void h() {
+    public void j() {
         float f = 0.1875F;
 
         this.a(0.0F, 0.40625F, 0.0F, 1.0F, 0.59375F, 1.0F);
@@ -47,7 +47,7 @@
 
     public void d(IBlockData iblockdata) {
         if (iblockdata.getBlock() == this) {
-            boolean flag = iblockdata.get(BlockTrapdoor.HALF) == EnumTrapdoorHalf.TOP;
+            boolean flag = iblockdata.get(BlockTrapdoor.HALF) == BlockTrapdoor.EnumTrapdoorHalf.TOP;
             Boolean obool = (Boolean) iblockdata.get(BlockTrapdoor.OPEN);
             EnumDirection enumdirection = (EnumDirection) iblockdata.get(BlockTrapdoor.FACING);
             float f = 0.1875F;
@@ -91,7 +91,7 @@
     }
 
     public void doPhysics(World world, BlockPosition blockposition, IBlockData iblockdata, Block block) {
-        if (!world.isStatic) {
+        if (!world.isClientSide) {
             BlockPosition blockposition1 = blockposition.shift(((EnumDirection) iblockdata.get(BlockTrapdoor.FACING)).opposite());
 
             if (!c(world.getType(blockposition1).getBlock())) {
@@ -123,7 +123,7 @@
 
         if (enumdirection.k().c()) {
             iblockdata = iblockdata.set(BlockTrapdoor.FACING, enumdirection).set(BlockTrapdoor.OPEN, Boolean.valueOf(false));
-            iblockdata = iblockdata.set(BlockTrapdoor.HALF, f1 > 0.5F ? EnumTrapdoorHalf.TOP : EnumTrapdoorHalf.BOTTOM);
+            iblockdata = iblockdata.set(BlockTrapdoor.HALF, f1 > 0.5F ? BlockTrapdoor.EnumTrapdoorHalf.TOP : BlockTrapdoor.EnumTrapdoorHalf.BOTTOM);
         }
 
         return iblockdata;
@@ -151,7 +151,7 @@
     }
 
     protected static int a(EnumDirection enumdirection) {
-        switch (SwitchHelperDirection13.a[enumdirection.ordinal()]) {
+        switch (BlockTrapdoor.SyntheticClass_1.a[enumdirection.ordinal()]) {
         case 1:
             return 0;
 
@@ -172,7 +172,7 @@
     }
 
     public IBlockData fromLegacyData(int i) {
-        return this.getBlockData().set(BlockTrapdoor.FACING, b(i)).set(BlockTrapdoor.OPEN, Boolean.valueOf((i & 4) != 0)).set(BlockTrapdoor.HALF, (i & 8) == 0 ? EnumTrapdoorHalf.BOTTOM : EnumTrapdoorHalf.TOP);
+        return this.getBlockData().set(BlockTrapdoor.FACING, b(i)).set(BlockTrapdoor.OPEN, Boolean.valueOf((i & 4) != 0)).set(BlockTrapdoor.HALF, (i & 8) == 0 ? BlockTrapdoor.EnumTrapdoorHalf.BOTTOM : BlockTrapdoor.EnumTrapdoorHalf.TOP);
     }
 
     public int toLegacyData(IBlockData iblockdata) {
@@ -183,7 +183,7 @@
             i |= 4;
         }
 
-        if (iblockdata.get(BlockTrapdoor.HALF) == EnumTrapdoorHalf.TOP) {
+        if (iblockdata.get(BlockTrapdoor.HALF) == BlockTrapdoor.EnumTrapdoorHalf.TOP) {
             i |= 8;
         }
 
@@ -193,4 +193,55 @@
     protected BlockStateList getStateList() {
         return new BlockStateList(this, new IBlockState[] { BlockTrapdoor.FACING, BlockTrapdoor.OPEN, BlockTrapdoor.HALF});
     }
+
+    static class SyntheticClass_1 {
+
+        static final int[] a = new int[EnumDirection.values().length];
+
+        static {
+            try {
+                BlockTrapdoor.SyntheticClass_1.a[EnumDirection.NORTH.ordinal()] = 1;
+            } catch (NoSuchFieldError nosuchfielderror) {
+                ;
+            }
+
+            try {
+                BlockTrapdoor.SyntheticClass_1.a[EnumDirection.SOUTH.ordinal()] = 2;
+            } catch (NoSuchFieldError nosuchfielderror1) {
+                ;
+            }
+
+            try {
+                BlockTrapdoor.SyntheticClass_1.a[EnumDirection.WEST.ordinal()] = 3;
+            } catch (NoSuchFieldError nosuchfielderror2) {
+                ;
+            }
+
+            try {
+                BlockTrapdoor.SyntheticClass_1.a[EnumDirection.EAST.ordinal()] = 4;
+            } catch (NoSuchFieldError nosuchfielderror3) {
+                ;
+            }
+
+        }
+    }
+
+    public static enum EnumTrapdoorHalf implements INamable {
+
+        TOP("top"), BOTTOM("bottom");
+
+        private final String c;
+
+        private EnumTrapdoorHalf(String s) {
+            this.c = s;
+        }
+
+        public String toString() {
+            return this.c;
+        }
+
+        public String getName() {
+            return this.c;
+        }
+    }
 }
