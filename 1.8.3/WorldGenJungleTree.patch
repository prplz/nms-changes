--- a/net/minecraft/server/WorldGenJungleTree.java
+++ b/net/minecraft/server/WorldGenJungleTree.java
@@ -4,8 +4,8 @@
 
 public class WorldGenJungleTree extends WorldGenMegaTreeAbstract {
 
-    public WorldGenJungleTree(boolean flag, int i, int j, int k, int l) {
-        super(flag, i, j, k, l);
+    public WorldGenJungleTree(boolean flag, int i, int j, IBlockData iblockdata, IBlockData iblockdata1) {
+        super(flag, i, j, iblockdata, iblockdata1);
     }
 
     public boolean generate(World world, Random random, BlockPosition blockposition) {
@@ -26,7 +26,7 @@
                 for (i1 = 0; i1 < 5; ++i1) {
                     k = blockposition.getX() + (int) (1.5F + MathHelper.cos(f) * (float) i1);
                     l = blockposition.getZ() + (int) (1.5F + MathHelper.sin(f) * (float) i1);
-                    this.a(world, new BlockPosition(k, j - 3 + i1 / 2, l), Blocks.LOG, this.b);
+                    this.a(world, new BlockPosition(k, j - 3 + i1 / 2, l), this.b);
                 }
 
                 i1 = 1 + random.nextInt(2);
@@ -42,42 +42,42 @@
             for (int i2 = 0; i2 < i; ++i2) {
                 BlockPosition blockposition1 = blockposition.up(i2);
 
-                if (this.a(world.getType(blockposition1).getBlock().getMaterial())) {
-                    this.a(world, blockposition1, Blocks.LOG, this.b);
+                if (this.a(world.getType(blockposition1).getBlock())) {
+                    this.a(world, blockposition1, this.b);
                     if (i2 > 0) {
-                        this.b(world, random, blockposition1.west(), BlockVine.S);
-                        this.b(world, random, blockposition1.north(), BlockVine.Q);
+                        this.a(world, random, blockposition1.west(), BlockVine.EAST);
+                        this.a(world, random, blockposition1.north(), BlockVine.SOUTH);
                     }
                 }
 
                 if (i2 < i - 1) {
                     BlockPosition blockposition2 = blockposition1.east();
 
-                    if (this.a(world.getType(blockposition2).getBlock().getMaterial())) {
-                        this.a(world, blockposition2, Blocks.LOG, this.b);
+                    if (this.a(world.getType(blockposition2).getBlock())) {
+                        this.a(world, blockposition2, this.b);
                         if (i2 > 0) {
-                            this.b(world, random, blockposition2.east(), BlockVine.T);
-                            this.b(world, random, blockposition2.north(), BlockVine.Q);
+                            this.a(world, random, blockposition2.east(), BlockVine.WEST);
+                            this.a(world, random, blockposition2.north(), BlockVine.SOUTH);
                         }
                     }
 
                     BlockPosition blockposition3 = blockposition1.south().east();
 
-                    if (this.a(world.getType(blockposition3).getBlock().getMaterial())) {
-                        this.a(world, blockposition3, Blocks.LOG, this.b);
+                    if (this.a(world.getType(blockposition3).getBlock())) {
+                        this.a(world, blockposition3, this.b);
                         if (i2 > 0) {
-                            this.b(world, random, blockposition3.east(), BlockVine.T);
-                            this.b(world, random, blockposition3.south(), BlockVine.R);
+                            this.a(world, random, blockposition3.east(), BlockVine.WEST);
+                            this.a(world, random, blockposition3.south(), BlockVine.NORTH);
                         }
                     }
 
                     BlockPosition blockposition4 = blockposition1.south();
 
-                    if (this.a(world.getType(blockposition4).getBlock().getMaterial())) {
-                        this.a(world, blockposition4, Blocks.LOG, this.b);
+                    if (this.a(world.getType(blockposition4).getBlock())) {
+                        this.a(world, blockposition4, this.b);
                         if (i2 > 0) {
-                            this.b(world, random, blockposition4.west(), BlockVine.S);
-                            this.b(world, random, blockposition4.south(), BlockVine.R);
+                            this.a(world, random, blockposition4.west(), BlockVine.EAST);
+                            this.a(world, random, blockposition4.south(), BlockVine.NORTH);
                         }
                     }
                 }
@@ -87,13 +87,9 @@
         }
     }
 
-    private boolean a(Material material) {
-        return material == Material.AIR || material == Material.LEAVES;
-    }
-
-    private void b(World world, Random random, BlockPosition blockposition, int i) {
+    private void a(World world, Random random, BlockPosition blockposition, BlockStateBoolean blockstateboolean) {
         if (random.nextInt(3) > 0 && world.isEmpty(blockposition)) {
-            this.a(world, blockposition, Blocks.VINE, i);
+            this.a(world, blockposition, Blocks.VINE.getBlockData().set(blockstateboolean, Boolean.valueOf(true)));
         }
 
     }
