--- a/net/minecraft/server/CommandGamemodeDefault.java
+++ b/net/minecraft/server/CommandGamemodeDefault.java
@@ -14,27 +14,27 @@
         return "commands.defaultgamemode.usage";
     }
 
-    public void execute(ICommandListener icommandlistener, String[] astring) {
+    public void execute(ICommandListener icommandlistener, String[] astring) throws CommandException {
         if (astring.length <= 0) {
             throw new ExceptionUsage("commands.defaultgamemode.usage", new Object[0]);
         } else {
-            EnumGamemode enumgamemode = this.h(icommandlistener, astring[0]);
+            WorldSettings.EnumGamemode worldsettings_enumgamemode = this.h(icommandlistener, astring[0]);
 
-            this.a(enumgamemode);
-            a(icommandlistener, this, "commands.defaultgamemode.success", new Object[] { new ChatMessage("gameMode." + enumgamemode.b(), new Object[0])});
+            this.a(worldsettings_enumgamemode);
+            a(icommandlistener, this, "commands.defaultgamemode.success", new Object[] { new ChatMessage("gameMode." + worldsettings_enumgamemode.b(), new Object[0])});
         }
     }
 
-    protected void a(EnumGamemode enumgamemode) {
+    protected void a(WorldSettings.EnumGamemode worldsettings_enumgamemode) {
         MinecraftServer minecraftserver = MinecraftServer.getServer();
 
-        minecraftserver.setGamemode(enumgamemode);
+        minecraftserver.setGamemode(worldsettings_enumgamemode);
         EntityPlayer entityplayer;
 
         if (minecraftserver.getForceGamemode()) {
-            for (Iterator iterator = MinecraftServer.getServer().getPlayerList().players.iterator(); iterator.hasNext(); entityplayer.fallDistance = 0.0F) {
+            for (Iterator iterator = MinecraftServer.getServer().getPlayerList().v().iterator(); iterator.hasNext(); entityplayer.fallDistance = 0.0F) {
                 entityplayer = (EntityPlayer) iterator.next();
-                entityplayer.a(enumgamemode);
+                entityplayer.a(worldsettings_enumgamemode);
             }
         }
 
