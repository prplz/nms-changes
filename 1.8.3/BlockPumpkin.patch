--- a/net/minecraft/server/BlockPumpkin.java
+++ b/net/minecraft/server/BlockPumpkin.java
@@ -1,14 +1,25 @@
 package net.minecraft.server;
 
+import com.google.common.base.Predicate;
+
 public class BlockPumpkin extends BlockDirectional {
 
     private ShapeDetector snowGolemPart;
     private ShapeDetector snowGolem;
     private ShapeDetector ironGolemPart;
     private ShapeDetector ironGolem;
+    private static final Predicate<IBlockData> Q = new Predicate() {
+        public boolean a(IBlockData iblockdata) {
+            return iblockdata != null && (iblockdata.getBlock() == Blocks.PUMPKIN || iblockdata.getBlock() == Blocks.LIT_PUMPKIN);
+        }
+
+        public boolean apply(Object object) {
+            return this.a((IBlockData) object);
+        }
+    };
 
     protected BlockPumpkin() {
-        super(Material.PUMPKIN);
+        super(Material.PUMPKIN, MaterialMapColor.q);
         this.j(this.blockStateList.getBlockData().set(BlockPumpkin.FACING, EnumDirection.NORTH));
         this.a(true);
         this.a(CreativeModeTab.b);
@@ -16,27 +27,27 @@
 
     public void onPlace(World world, BlockPosition blockposition, IBlockData iblockdata) {
         super.onPlace(world, blockposition, iblockdata);
-        this.e(world, blockposition);
+        this.f(world, blockposition);
     }
 
-    public boolean d(World world, BlockPosition blockposition) {
+    public boolean e(World world, BlockPosition blockposition) {
         return this.getDetectorSnowGolemPart().a(world, blockposition) != null || this.getDetectorIronGolemPart().a(world, blockposition) != null;
     }
 
-    private void e(World world, BlockPosition blockposition) {
-        ShapeDetectorCollection shapedetectorcollection;
+    private void f(World world, BlockPosition blockposition) {
+        ShapeDetector.ShapeDetectorCollection shapedetector_shapedetectorcollection;
         int i;
         int j;
 
-        if ((shapedetectorcollection = this.getDetectorSnowGolem().a(world, blockposition)) != null) {
+        if ((shapedetector_shapedetectorcollection = this.getDetectorSnowGolem().a(world, blockposition)) != null) {
             for (i = 0; i < this.getDetectorSnowGolem().b(); ++i) {
-                ShapeDetectorBlock shapedetectorblock = shapedetectorcollection.a(0, i, 0);
+                ShapeDetectorBlock shapedetectorblock = shapedetector_shapedetectorcollection.a(0, i, 0);
 
                 world.setTypeAndData(shapedetectorblock.d(), Blocks.AIR.getBlockData(), 2);
             }
 
             EntitySnowman entitysnowman = new EntitySnowman(world);
-            BlockPosition blockposition1 = shapedetectorcollection.a(0, 2, 0).d();
+            BlockPosition blockposition1 = shapedetector_shapedetectorcollection.a(0, 2, 0).d();
 
             entitysnowman.setPositionRotation((double) blockposition1.getX() + 0.5D, (double) blockposition1.getY() + 0.05D, (double) blockposition1.getZ() + 0.5D, 0.0F, 0.0F);
             world.addEntity(entitysnowman);
@@ -46,18 +57,18 @@
             }
 
             for (j = 0; j < this.getDetectorSnowGolem().b(); ++j) {
-                ShapeDetectorBlock shapedetectorblock1 = shapedetectorcollection.a(0, j, 0);
+                ShapeDetectorBlock shapedetectorblock1 = shapedetector_shapedetectorcollection.a(0, j, 0);
 
                 world.update(shapedetectorblock1.d(), Blocks.AIR);
             }
-        } else if ((shapedetectorcollection = this.getDetectorIronGolem().a(world, blockposition)) != null) {
+        } else if ((shapedetector_shapedetectorcollection = this.getDetectorIronGolem().a(world, blockposition)) != null) {
             for (i = 0; i < this.getDetectorIronGolem().c(); ++i) {
                 for (int k = 0; k < this.getDetectorIronGolem().b(); ++k) {
-                    world.setTypeAndData(shapedetectorcollection.a(i, k, 0).d(), Blocks.AIR.getBlockData(), 2);
+                    world.setTypeAndData(shapedetector_shapedetectorcollection.a(i, k, 0).d(), Blocks.AIR.getBlockData(), 2);
                 }
             }
 
-            BlockPosition blockposition2 = shapedetectorcollection.a(1, 2, 0).d();
+            BlockPosition blockposition2 = shapedetector_shapedetectorcollection.a(1, 2, 0).d();
             EntityIronGolem entityirongolem = new EntityIronGolem(world);
 
             entityirongolem.setPlayerCreated(true);
@@ -70,7 +81,7 @@
 
             for (j = 0; j < this.getDetectorIronGolem().c(); ++j) {
                 for (int l = 0; l < this.getDetectorIronGolem().b(); ++l) {
-                    ShapeDetectorBlock shapedetectorblock2 = shapedetectorcollection.a(j, l, 0);
+                    ShapeDetectorBlock shapedetectorblock2 = shapedetector_shapedetectorcollection.a(j, l, 0);
 
                     world.update(shapedetectorblock2.d(), Blocks.AIR);
                 }
@@ -109,7 +120,7 @@
 
     protected ShapeDetector getDetectorSnowGolem() {
         if (this.snowGolem == null) {
-            this.snowGolem = ShapeDetectorBuilder.a().a(new String[] { "^", "#", "#"}).a('^', ShapeDetectorBlock.a(BlockStatePredicate.a(Blocks.PUMPKIN))).a('#', ShapeDetectorBlock.a(BlockStatePredicate.a(Blocks.SNOW))).b();
+            this.snowGolem = ShapeDetectorBuilder.a().a(new String[] { "^", "#", "#"}).a('^', ShapeDetectorBlock.a(BlockPumpkin.Q)).a('#', ShapeDetectorBlock.a(BlockStatePredicate.a(Blocks.SNOW))).b();
         }
 
         return this.snowGolem;
@@ -125,7 +136,7 @@
 
     protected ShapeDetector getDetectorIronGolem() {
         if (this.ironGolem == null) {
-            this.ironGolem = ShapeDetectorBuilder.a().a(new String[] { "~^~", "###", "~#~"}).a('^', ShapeDetectorBlock.a(BlockStatePredicate.a(Blocks.PUMPKIN))).a('#', ShapeDetectorBlock.a(BlockStatePredicate.a(Blocks.IRON_BLOCK))).a('~', ShapeDetectorBlock.a(BlockStatePredicate.a(Blocks.AIR))).b();
+            this.ironGolem = ShapeDetectorBuilder.a().a(new String[] { "~^~", "###", "~#~"}).a('^', ShapeDetectorBlock.a(BlockPumpkin.Q)).a('#', ShapeDetectorBlock.a(BlockStatePredicate.a(Blocks.IRON_BLOCK))).a('~', ShapeDetectorBlock.a(BlockStatePredicate.a(Blocks.AIR))).b();
         }
 
         return this.ironGolem;
