--- a/net/minecraft/server/BiomeSavanna.java
+++ b/net/minecraft/server/BiomeSavanna.java
@@ -8,7 +8,7 @@
 
     protected BiomeSavanna(int i) {
         super(i);
-        this.au.add(new BiomeMeta(EntityHorse.class, 1, 2, 6));
+        this.au.add(new BiomeBase.BiomeMeta(EntityHorse.class, 1, 2, 6));
         this.as.A = 1;
         this.as.B = 4;
         this.as.C = 20;
@@ -19,16 +19,16 @@
     }
 
     protected BiomeBase d(int i) {
-        BiomeSavannaSub biomesavannasub = new BiomeSavannaSub(i, this);
+        BiomeSavanna.BiomeSavannaSub biomesavanna_biomesavannasub = new BiomeSavanna.BiomeSavannaSub(i, this);
 
-        biomesavannasub.temperature = (this.temperature + 1.0F) * 0.5F;
-        biomesavannasub.an = this.an * 0.5F + 0.3F;
-        biomesavannasub.ao = this.ao * 0.5F + 1.2F;
-        return biomesavannasub;
+        biomesavanna_biomesavannasub.temperature = (this.temperature + 1.0F) * 0.5F;
+        biomesavanna_biomesavannasub.an = this.an * 0.5F + 0.3F;
+        biomesavanna_biomesavannasub.ao = this.ao * 0.5F + 1.2F;
+        return biomesavanna_biomesavannasub;
     }
 
     public void a(World world, Random random, BlockPosition blockposition) {
-        BiomeSavanna.ag.a(EnumTallFlowerVariants.GRASS);
+        BiomeSavanna.ag.a(BlockTallPlant.EnumTallFlowerVariants.GRASS);
 
         for (int i = 0; i < 7; ++i) {
             int j = random.nextInt(16) + 8;
@@ -40,4 +40,31 @@
 
         super.a(world, random, blockposition);
     }
+
+    public static class BiomeSavannaSub extends BiomeBaseSub {
+
+        public BiomeSavannaSub(int i, BiomeBase biomebase) {
+            super(i, biomebase);
+            this.as.A = 2;
+            this.as.B = 2;
+            this.as.C = 5;
+        }
+
+        public void a(World world, Random random, ChunkSnapshot chunksnapshot, int i, int j, double d0) {
+            this.ak = Blocks.GRASS.getBlockData();
+            this.al = Blocks.DIRT.getBlockData();
+            if (d0 > 1.75D) {
+                this.ak = Blocks.STONE.getBlockData();
+                this.al = Blocks.STONE.getBlockData();
+            } else if (d0 > -0.5D) {
+                this.ak = Blocks.DIRT.getBlockData().set(BlockDirt.VARIANT, BlockDirt.EnumDirtVariant.COARSE_DIRT);
+            }
+
+            this.b(world, random, chunksnapshot, i, j, d0);
+        }
+
+        public void a(World world, Random random, BlockPosition blockposition) {
+            this.as.a(world, random, this, blockposition);
+        }
+    }
 }
